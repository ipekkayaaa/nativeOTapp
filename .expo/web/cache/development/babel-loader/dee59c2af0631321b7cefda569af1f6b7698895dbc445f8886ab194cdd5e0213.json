{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\";\nimport { auth, firestore } from \"../../firebase\";\nimport { getFirestore, addDoc, collection, getDocs } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialExercises = [{\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}];\nexport default function DoctorProfile(_ref) {\n  var _auth$currentUser;\n  var navigation = _ref.navigation;\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.navigate(\"LoginScreen\");\n    }).catch(function (err) {\n      return alert(err.message);\n    });\n  };\n  var _useState = useState([{\n      id: 1,\n      name: 'User 1',\n      medicalCondition: 'Condition 1',\n      email: 'user1@example.com'\n    }, {\n      id: 2,\n      name: 'User 2',\n      medicalCondition: 'Condition 2',\n      email: 'user2@example.com'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userList = _useState2[0],\n    setUserList = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    createWorkoutModalVisible = _useState4[0],\n    setCreateWorkoutModalVisible = _useState4[1];\n  var createWorkout = function createWorkout() {\n    if (newWorkout.workoutName && newWorkout.date && selectedPatientId) {\n      var colRefworkout = collection(firestore, 'workouts');\n      addDoc(colRefworkout, {\n        workoutName: newWorkout.workoutName,\n        workoutDate: newWorkout.date,\n        patientId: selectedPatientId,\n        exercises: newWorkout.exercises\n      }).then(function () {\n        console.log(\"Workout added successfully!\");\n        closeCreateWorkoutModal();\n      }).catch(function (error) {\n        console.error(\"Error adding workout: \", error);\n      });\n    } else {\n      console.warn(\"Incomplete workout data. Please fill in all required fields.\");\n    }\n  };\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    patientList = _useState6[0],\n    setPatientList = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedPatientId = _useState8[0],\n    setSelectedPatientId = _useState8[1];\n  useEffect(function () {\n    var fetchPatients = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var patientsCollection = collection(firestore, 'patients');\n          var snapshot = yield getDocs(patientsCollection);\n          var patientsData = snapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          setPatientList(patientsData);\n          snapshot.forEach(function (doc) {\n            var email = doc.data().email;\n            console.log(\"Email: \", email);\n          });\n        } catch (error) {\n          console.error(\"Error getting patient documents: \", error);\n        }\n      });\n      return function fetchPatients() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchPatients();\n  }, []);\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    search = _useState10[0],\n    setSearch = _useState10[1];\n  var _useState11 = useState(userList),\n    _useState12 = _slicedToArray(_useState11, 2),\n    filteredUserList = _useState12[0],\n    setFilteredUserList = _useState12[1];\n  useEffect(function () {\n    searchFilterFunction(search);\n  }, [search]);\n  var navigateToUserProfile = function navigateToUserProfile(user) {\n    navigation.navigate(\"ProfileScreen\", {\n      user: user\n    });\n  };\n  var searchFilterFunction = function searchFilterFunction(text) {\n    setSearch(text);\n    var newData = userList.filter(function (item) {\n      var itemEmail = item.email.toUpperCase();\n      var searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n  var openCreateWorkoutModal = function openCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(true);\n  };\n  var closeCreateWorkoutModal = function closeCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Avatar, {\n        rounded: true,\n        size: 120,\n        icon: {\n          name: \"person\",\n          type: \"material\"\n        },\n        avatarStyle: styles.avatarStyle,\n        activeOpacity: 0.7\n      }), _jsx(Text, {\n        style: styles.emailText,\n        children: (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.changePictureButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Change Picture\",\n        onPress: function onPress() {\n          return console.log(\"Change this picture!\");\n        }\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.editProfileButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Edit Profile\",\n        onPress: function onPress() {\n          return navigation.navigate(\"EditProfileScreen\");\n        }\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.createWorkoutButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Workout\",\n        onPress: openCreateWorkoutModal\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.logOutButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Log Out\",\n        onPress: handleSignOut\n      })]\n    }), _jsx(SearchBar, {\n      round: true,\n      searchIcon: {\n        size: 26\n      },\n      containerStyle: styles.searchContainer,\n      inputContainerStyle: styles.searchInputContainer,\n      placeholder: \"Search user by email\",\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear() {\n        return searchFilterFunction(\"\");\n      },\n      value: search\n    }), _jsxs(View, {\n      style: styles.tableContainer,\n      children: [_jsxs(View, {\n        style: styles.tableRow,\n        children: [_jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"User Name\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Medical Condition\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Email Address\"\n        })]\n      }), _jsx(FlatList, {\n        data: filteredUserList,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsxs(TouchableOpacity, {\n            style: styles.tableRow,\n            onPress: function onPress() {\n              return navigateToUserProfile(item);\n            },\n            children: [_jsx(Text, {\n              style: styles.tableCell,\n              children: item.name\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: item.medicalCondition\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: item.email\n            })]\n          });\n        }\n      })]\n    }), _jsx(Modal, {\n      visible: createWorkoutModalVisible,\n      animationType: \"slide\",\n      transparent: true,\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsx(ScrollView, {\n          contentContainerStyle: styles.scrollContainer,\n          children: _jsxs(View, {\n            style: styles.formContainer,\n            children: [_jsx(Text, {\n              style: styles.formTitle,\n              children: \"Create Workout\"\n            }), _jsx(Input, {\n              placeholder: \"Workout Name\",\n              onChangeText: function onChangeText(text) {\n                return setNewWorkout(_objectSpread(_objectSpread({}, newWorkout), {}, {\n                  workoutName: text\n                }));\n              },\n              value: newWorkout.workoutName\n            }), _jsx(Input, {\n              placeholder: \"Date\",\n              onChangeText: function onChangeText(text) {\n                return setNewWorkout(_objectSpread(_objectSpread({}, newWorkout), {}, {\n                  date: text\n                }));\n              },\n              value: newWorkout.date\n            }), _jsxs(Picker, {\n              selectedValue: selectedPatientId,\n              onValueChange: function onValueChange(value) {\n                return setSelectedPatientId(value);\n              },\n              style: styles.patientDropdown,\n              children: [_jsx(Picker.Item, {\n                label: \"Select Patient\",\n                value: \"\"\n              }), patientList.map(function (patient) {\n                return _jsx(Picker.Item, {\n                  label: patient.email,\n                  value: patient.id\n                }, patient.id);\n              })]\n            }), _jsxs(View, {\n              style: styles.exercisesContainer,\n              children: [_jsxs(View, {\n                style: styles.exerciseContainer,\n                children: [_jsx(Text, {\n                  style: styles.formSubtitle,\n                  children: \"Exercise 1\"\n                }), _jsx(Input, {\n                  placeholder: \"Exercise Name\",\n                  onChangeText: function onChangeText(text) {\n                    return setNewWorkout(function (prev) {\n                      var updatedExercises = _toConsumableArray(prev.exercises);\n                      updatedExercises[0].name = text;\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  value: newWorkout.exercises[0].name\n                }), _jsx(Text, {\n                  children: \"Sets\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[0].sets,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[0].sets = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: i + 1\n                    }, i);\n                  })\n                }), _jsx(Text, {\n                  children: \"Reps\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[0].reps,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[0].reps = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: (i + 1).toString()\n                    }, i);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.exerciseContainer,\n                children: [_jsx(Text, {\n                  style: styles.formSubtitle,\n                  children: \"Exercise 2\"\n                }), _jsx(Input, {\n                  placeholder: \"Exercise Name\",\n                  onChangeText: function onChangeText(text) {\n                    return setNewWorkout(function (prev) {\n                      var updatedExercises = _toConsumableArray(prev.exercises);\n                      updatedExercises[1].name = text;\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  value: newWorkout.exercises[1].name\n                }), _jsx(Text, {\n                  children: \"Sets\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[1].sets,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[1].sets = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: i + 1\n                    }, i);\n                  })\n                }), _jsx(Text, {\n                  children: \"Reps\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[1].reps,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[1].reps = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: (i + 1).toString()\n                    }, i);\n                  })\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.exercisesContainer,\n              children: [_jsxs(View, {\n                style: styles.exerciseContainer,\n                children: [_jsx(Text, {\n                  style: styles.formSubtitle,\n                  children: \"Exercise 3\"\n                }), _jsx(Input, {\n                  placeholder: \"Exercise Name\",\n                  onChangeText: function onChangeText(text) {\n                    return setNewWorkout(function (prev) {\n                      var updatedExercises = _toConsumableArray(prev.exercises);\n                      updatedExercises[2].name = text;\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  value: newWorkout.exercises[2].name\n                }), _jsx(Text, {\n                  children: \"Sets\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[2].sets,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[2].sets = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: i + 1\n                    }, i);\n                  })\n                }), _jsx(Text, {\n                  children: \"Reps\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[2].reps,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[2].reps = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: (i + 1).toString()\n                    }, i);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.exerciseContainer,\n                children: [_jsx(Text, {\n                  style: styles.formSubtitle,\n                  children: \"Exercise 4\"\n                }), _jsx(Input, {\n                  placeholder: \"Exercise Name\",\n                  onChangeText: function onChangeText(text) {\n                    return setNewWorkout(function (prev) {\n                      var updatedExercises = _toConsumableArray(prev.exercises);\n                      updatedExercises[3].name = text;\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  value: newWorkout.exercises[3].name\n                }), _jsx(Text, {\n                  children: \"Sets\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[3].sets,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[3].sets = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: i + 1\n                    }, i);\n                  })\n                }), _jsx(Text, {\n                  children: \"Reps\"\n                }), _jsx(Picker, {\n                  selectedValue: newWorkout.exercises[3].reps,\n                  onValueChange: function onValueChange(value) {\n                    return setNewWorkout(function (prevWorkout) {\n                      var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                      updatedExercises[3].reps = value;\n                      return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                        exercises: updatedExercises\n                      });\n                    });\n                  },\n                  children: Array.from({\n                    length: 20\n                  }, function (_, i) {\n                    return _jsx(Picker.Item, {\n                      label: (i + 1).toString(),\n                      value: (i + 1).toString()\n                    }, i);\n                  })\n                })]\n              })]\n            }), _jsx(Button, {\n              buttonStyle: [styles.submitWorkout, {\n                width: 150\n              }],\n              title: \"Submit Workout\",\n              onPress: createWorkout\n            }), _jsx(Button, {\n              buttonStyle: [styles.cancelWorkout, {\n                width: 150\n              }],\n              title: \"Cancel\",\n              onPress: closeCreateWorkoutModal\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  avatarStyle: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#3498db\"\n  },\n  emailText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 10\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 20,\n    width: \"80%\"\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  buttonTitle: {\n    fontSize: 16\n  },\n  changePictureButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\"\n  },\n  editProfileButton: {\n    backgroundColor: \"#27ae60\",\n    borderColor: \"#27ae60\"\n  },\n  logOutButton: {\n    backgroundColor: \"#e74c3c\",\n    borderColor: \"#e74c3c\"\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 0,\n    borderTopWidth: 0\n  },\n  tableContainer: {\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    padding: 10\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    alignItems: \"center\"\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14\n  },\n  tableHeader: {\n    fontWeight: \"bold\"\n  },\n  addUserButton: {\n    backgroundColor: \"#ff7f50\",\n    borderColor: \"#ff7f50\"\n  },\n  formContainer: {\n    display: \"block\",\n    height: 600,\n    width: 700,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n    marginTop: 30\n  },\n  formTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#3498db\",\n    marginLeft: 250\n  },\n  createWorkoutButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n    marginTop: 20\n  },\n  formSubtitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    color: \"#2ecc71\"\n  },\n  setRepContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 10\n  },\n  setRepDropdown: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    marginHorizontal: 5,\n    borderRadius: 8,\n    overflow: \"hidden\"\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  scrollContainer: {\n    flexGrow: 1\n  },\n  exerciseContainer: {\n    width: '50%',\n    paddingHorizontal: 10\n  },\n  exercisesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  submitWorkout: {\n    marginTop: 20,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cancelWorkout: {\n    marginTop: 10,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  patientDropdown: {\n    height: 50,\n    width: \"80%\",\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","FlatList","Picker","Modal","ScrollView","StyleSheet","Avatar","Button","SearchBar","Input","auth","firestore","getFirestore","addDoc","collection","getDocs","jsx","_jsx","jsxs","_jsxs","initialExercises","name","sets","reps","DoctorProfile","_ref","_auth$currentUser","navigation","handleSignOut","signOut","then","navigate","catch","err","alert","message","_useState","id","medicalCondition","email","_useState2","_slicedToArray","userList","setUserList","_useState3","_useState4","createWorkoutModalVisible","setCreateWorkoutModalVisible","createWorkout","newWorkout","workoutName","date","selectedPatientId","colRefworkout","workoutDate","patientId","exercises","console","log","closeCreateWorkoutModal","error","warn","_useState5","_useState6","patientList","setPatientList","_useState7","_useState8","setSelectedPatientId","fetchPatients","_ref2","_asyncToGenerator","patientsCollection","snapshot","patientsData","docs","map","doc","_objectSpread","data","forEach","apply","arguments","_useState9","_useState10","search","setSearch","_useState11","_useState12","filteredUserList","setFilteredUserList","searchFilterFunction","navigateToUserProfile","user","text","newData","filter","item","itemEmail","toUpperCase","searchText","includes","openCreateWorkoutModal","style","styles","container","children","header","rounded","size","icon","type","avatarStyle","activeOpacity","emailText","currentUser","buttonsContainer","containerStyle","buttonContainer","buttonStyle","changePictureButton","titleStyle","buttonTitle","title","onPress","editProfileButton","createWorkoutButton","logOutButton","round","searchIcon","searchContainer","inputContainerStyle","searchInputContainer","placeholder","onChangeText","onClear","value","tableContainer","tableRow","tableCell","tableHeader","keyExtractor","toString","renderItem","_ref3","visible","animationType","transparent","modalContainer","contentContainerStyle","scrollContainer","formContainer","formTitle","setNewWorkout","selectedValue","onValueChange","patientDropdown","Item","label","patient","exercisesContainer","exerciseContainer","formSubtitle","prev","updatedExercises","_toConsumableArray","prevWorkout","Array","from","length","_","i","submitWorkout","width","cancelWorkout","create","flex","alignItems","backgroundColor","paddingTop","marginBottom","borderWidth","borderColor","fontSize","fontWeight","marginTop","flexDirection","justifyContent","borderBottomWidth","borderTopWidth","padding","addUserButton","display","height","paddingHorizontal","color","marginLeft","setRepContainer","setRepDropdown","marginHorizontal","borderRadius","overflow","flexGrow"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/DoctorProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Picker,\n  Modal,\n  ScrollView,\n  StyleSheet,\n} from \"react-native\";\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\";\nimport { auth, firestore } from \"../../firebase\";\nimport { getFirestore, addDoc, collection, getDocs } from \"firebase/firestore\";\n\nconst initialExercises = [\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n];\n\nexport default function DoctorProfile({ navigation }) {\n  // signout\n  const handleSignOut = () => {\n    auth\n      .signOut()\n      .then(() => {\n        navigation.navigate(\"LoginScreen\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  const [userList, setUserList] = useState([\n    { id: 1, name: 'User 1', medicalCondition: 'Condition 1', email: 'user1@example.com' },\n    { id: 2, name: 'User 2', medicalCondition: 'Condition 2', email: 'user2@example.com' },\n    // Add more users here\n  ]);\n\n\n  const [createWorkoutModalVisible, setCreateWorkoutModalVisible] = useState(false);\n\n  const createWorkout = () => {\n    if (newWorkout.workoutName && newWorkout.date && selectedPatientId) {\n      // Create a reference to the \"workouts\" collection\n      const colRefworkout = collection(firestore, 'workouts');\n\n      // Add a new document with the data\n      addDoc(colRefworkout, {\n        workoutName: newWorkout.workoutName,\n        workoutDate: newWorkout.date,\n        patientId: selectedPatientId,\n        exercises: newWorkout.exercises,\n      })\n        .then(() => {\n          console.log(\"Workout added successfully!\");\n          closeCreateWorkoutModal();\n        })\n        .catch((error) => {\n          console.error(\"Error adding workout: \", error);\n        });\n    } else {\n      console.warn(\"Incomplete workout data. Please fill in all required fields.\");\n    }\n  };\n\n  // Patient List\n  const [patientList, setPatientList] = useState([]);\n  const [selectedPatientId, setSelectedPatientId] = useState(\"\");\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const patientsCollection = collection(firestore, 'patients');\n        const snapshot = await getDocs(patientsCollection);\n        const patientsData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n        setPatientList(patientsData);\n  \n        // Log emails\n        snapshot.forEach((doc) => {\n          const email = doc.data().email;\n          console.log(\"Email: \", email);\n        });\n      } catch (error) {\n        console.error(\"Error getting patient documents: \", error);\n      }\n    };\n  \n    fetchPatients();\n  }, []);\n  \n  const [search, setSearch] = useState(\"\");\n  const [filteredUserList, setFilteredUserList] = useState(userList);\n\n  useEffect(() => {\n    searchFilterFunction(search);\n  }, [search]);\n\n  const navigateToUserProfile = (user) => {\n    navigation.navigate(\"ProfileScreen\", { user });\n  };\n\n  const searchFilterFunction = (text) => {\n    setSearch(text);\n    const newData = userList.filter((item) => {\n      const itemEmail = item.email.toUpperCase();\n      const searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n\n  const openCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(true);\n  };\n\n  const closeCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Avatar\n          rounded\n          size={120}\n          icon={{ name: \"person\", type: \"material\" }}\n          avatarStyle={styles.avatarStyle}\n          activeOpacity={0.7}\n        />\n        <Text style={styles.emailText}>{auth.currentUser?.email}</Text>\n      </View>\n\n      <View style={styles.buttonsContainer}>\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.changePictureButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Change Picture\"\n          onPress={() => console.log(\"Change this picture!\")}\n        />\n\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.editProfileButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Edit Profile\"\n          onPress={() => navigation.navigate(\"EditProfileScreen\")}\n        />\n\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.createWorkoutButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Workout\"\n          onPress={openCreateWorkoutModal}\n        />\n\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.logOutButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Log Out\"\n          onPress={handleSignOut}\n        />\n      </View>\n\n      <SearchBar\n        round\n        searchIcon={{ size: 26 }}\n        containerStyle={styles.searchContainer}\n        inputContainerStyle={styles.searchInputContainer}\n        placeholder=\"Search user by email\"\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={() => searchFilterFunction(\"\")}\n        value={search}\n      />\n      <View style={styles.tableContainer}>\n        <View style={styles.tableRow}>\n          <Text style={[styles.tableCell, styles.tableHeader]}>User Name</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>Medical Condition</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>Email Address</Text>\n        </View>\n        <FlatList\n          data={filteredUserList}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              style={styles.tableRow}\n              onPress={() => navigateToUserProfile(item)}\n            >\n              <Text style={styles.tableCell}>{item.name}</Text>\n              <Text style={styles.tableCell}>{item.medicalCondition}</Text>\n              <Text style={styles.tableCell}>{item.email}</Text>\n            </TouchableOpacity>\n          )}\n        />\n      </View>\n\n      <Modal\n        visible={createWorkoutModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n      >\n        <View style={styles.modalContainer}>\n          <ScrollView contentContainerStyle={styles.scrollContainer}>\n            <View style={styles.formContainer}>\n              <Text style={styles.formTitle}>Create Workout</Text>\n              <Input\n                placeholder=\"Workout Name\"\n                onChangeText={(text) => setNewWorkout({ ...newWorkout, workoutName: text })}\n                value={newWorkout.workoutName}\n              />\n              <Input\n                placeholder=\"Date\"\n                onChangeText={(text) => setNewWorkout({ ...newWorkout, date: text })}\n                value={newWorkout.date}\n              />\n              {/* Dropdown for selecting patients */}\n              <Picker\n                selectedValue={selectedPatientId} // You need to define selectedPatientId state\n                onValueChange={(value) => setSelectedPatientId(value)}\n                style={styles.patientDropdown}\n              >\n                <Picker.Item label=\"Select Patient\" value=\"\" />\n                {patientList.map((patient) => (\n                  <Picker.Item key={patient.id} label={patient.email} value={patient.id} />\n                ))}\n              </Picker>\n              <View style={styles.exercisesContainer}>\n                {/* Exercise 1 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 1</Text>\n                  <Input\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[0].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[0].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[0].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[0].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[0].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[0].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n\n                {/* Exercise 2 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 2</Text>\n                  <Input\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[1].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[1].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[1].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[1].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[1].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[1].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n              </View>\n\n              <View style={styles.exercisesContainer}>\n                {/* Exercise 3 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 3</Text>\n                  <Input\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[2].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[2].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[2].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[2].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[2].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[2].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n\n                {/* Exercise 4 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 4</Text>\n                  <Input\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[3].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[3].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[3].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[3].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[3].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[3].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n              </View>\n              <Button\n                buttonStyle={[styles.submitWorkout, { width: 150 }]} // Adjust the width value as needed\n                title=\"Submit Workout\"\n                onPress={createWorkout}\n              />\n              <Button\n               buttonStyle={[styles.cancelWorkout, { width: 150 }]} \n               title=\"Cancel\" \n               onPress={closeCreateWorkoutModal} />\n            </View>\n          </ScrollView>\n        </View>\n      </Modal>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20,\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  avatarStyle: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#3498db\",\n  },\n  emailText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 10,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 20,\n    width: \"80%\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n  buttonTitle: {\n    fontSize: 16,\n  },\n  changePictureButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n  },\n  editProfileButton: {\n    backgroundColor: \"#27ae60\",\n    borderColor: \"#27ae60\",\n  },\n  logOutButton: {\n    backgroundColor: \"#e74c3c\",\n    borderColor: \"#e74c3c\",\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10,\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 0,\n    borderTopWidth: 0,\n  },\n  tableContainer: {\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    padding: 10,\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    alignItems: \"center\",\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14,\n  },\n  tableHeader: {\n    fontWeight: \"bold\",\n  },\n  addUserButton: {\n    backgroundColor: \"#ff7f50\",\n    borderColor: \"#ff7f50\",\n  },\n  formContainer: {\n    display: \"block\",\n    height: 600,\n    width: 700,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n    marginTop: 30,\n  },\n  formTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#3498db\",\n    marginLeft: 250,\n  },\n  createWorkoutButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n    marginTop: 20,\n  },\n  formSubtitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    color: \"#2ecc71\",\n  },\n  setRepContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 10,\n  },\n  setRepDropdown: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    marginHorizontal: 5,\n    borderRadius: 8,\n    overflow: \"hidden\",\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n  },\n  exerciseContainer: {\n    width: '50%', // Two exercises side by side\n    paddingHorizontal: 10,\n  },\n  exercisesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  submitWorkout: {\n    marginTop: 20,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cancelWorkout: {\n    marginTop: 10,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  patientDropdown: {\n    height: 50,\n    width: \"80%\",\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}