{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      email: \"\",\n      password: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    values = _useState2[0],\n    setValues = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loginStatus = _useState4[0],\n    setLoginStatus = _useState4[1];\n  var handleSubmit = function handleSubmit() {\n    axios.post(\"http://localhost:8081/login\", values).then(function (res) {\n      var token = res.data.token;\n      console.log(res);\n      setLoginStatus(\"Login Successful\");\n      navigation.navigate(\"Home\");\n    }).catch(function (error) {\n      console.error(error);\n      setLoginStatus(\"Email or password is incorrect\");\n    });\n  };\n  return _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Sign In\"\n      }), loginStatus && _jsx(Text, {\n        children: loginStatus\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Email\",\n        value: values.email,\n        onChangeText: function onChangeText(text) {\n          return setValues(_objectSpread(_objectSpread({}, values), {}, {\n            email: text\n          }));\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        value: values.password,\n        onChangeText: function onChangeText(text) {\n          return setValues(_objectSpread(_objectSpread({}, values), {}, {\n            password: text\n          }));\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          children: \"Sign In\"\n        })\n      }), _jsx(Text, {\n        children: \"If you do not have an account, click Sign Up button\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Register\");\n        },\n        children: _jsx(Text, {\n          children: \"Sign Up\"\n        })\n      })]\n    })\n  });\n};\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","axios","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","email","password","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","loginStatus","setLoginStatus","handleSubmit","post","then","res","token","data","console","log","navigate","catch","error","children","placeholder","value","onChangeText","text","_objectSpread","secureTextEntry","onPress","SignInScreen"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/src/Screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\n\nconst Login = ({ navigation }) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleSubmit = () => {\n    axios\n      .post(\"http://localhost:8081/login\", values)\n      .then((res) => {\n        const token = res.data.token;\n        // Save token securely using AsyncStorage or SecureStore\n        console.log(res);\n        setLoginStatus(\"Login Successful\");\n        // Navigation logic in React Native (navigate to Home screen)\n        navigation.navigate(\"Home\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoginStatus(\"Email or password is incorrect\");\n      });\n  };\n\n  return (\n    <View>\n      <View>\n        <Text>Sign In</Text>\n        {loginStatus && <Text>{loginStatus}</Text>}\n        <TextInput\n          placeholder=\"Enter Email\"\n          value={values.email}\n          onChangeText={(text) => setValues({ ...values, email: text })}\n        />\n        <TextInput\n          placeholder=\"Enter Password\"\n          secureTextEntry={true}\n          value={values.password}\n          onChangeText={(text) => setValues({ ...values, password: text })}\n        />\n        <TouchableOpacity onPress={handleSubmit}>\n          <Text>Sign In</Text>\n        </TouchableOpacity>\n        <Text>If you do not have an account, click Sign Up button</Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"Register\")}>\n          <Text>Sign Up</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default SignInScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}