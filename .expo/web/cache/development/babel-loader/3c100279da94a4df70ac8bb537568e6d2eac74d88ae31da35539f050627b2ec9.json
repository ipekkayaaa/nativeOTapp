{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport DietScreen from \"../screens/DietScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport DoctorProfileScreen from \"../screens/DoctorProfileScreen\";\nimport { getAuth, createUserWithEmailAndPassword, firestore } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, addDoc, collection, query, where, getDocs, length } from \"firebase/firestore\";\nimport app from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\nvar db = getFirestore();\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nvar user = auth.currentUser;\nvar HomeStackNavigator = function HomeStackNavigator() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"HomeStack\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n};\nvar decideprofile = function decideprofile() {\n  var user = auth.currentUser;\n  var patientsCollection = collection(db, \"patients\");\n  var therapistCollection = collection(db, \"therapist\");\n  var decider = 0;\n  try {\n    var patientQuery = query(patientsCollection, where(\"email\", \"==\", user.email));\n    var patientQuerySnapshot = getDocs(patientQuery);\n    if (patientQuerySnapshot.docs && patientQuerySnapshot.docs.length > 0) {\n      console.log('User found in the \"patients\" collection');\n      return decider;\n    } else {\n      var therapistQuery = query(therapistCollection, where(\"email\", \"==\", user.email));\n      var therapistQuerySnapshot = getDocs(therapistQuery);\n      if (therapistQuerySnapshot.docs && therapistQuerySnapshot.docs.length > 0) {\n        decider = 1;\n        console.log('User found in the \"therapists\" collection');\n        return decider;\n      } else {\n        console.log('User not found in both \"patients\" and \"therapists\" collections');\n        return decider;\n      }\n    }\n  } catch (error) {\n    console.error('Error in decideprofile:', error);\n    throw error;\n  }\n};\nvar HomeTabNavigator = function HomeTabNavigator() {\n  console.log(decideprofile());\n  if (decideprofile() == 0) {\n    console.log('we did it boys');\n    return _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"md-home-outline\";\n            } else if (route.name === \"Diet\") {\n              iconName = \"md-restaurant-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"md-person-outline\";\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#216afc\",\n          tabBarInactiveTintColor: \"gray\",\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackNavigator,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Healthy Life\",\n        component: DietScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          headerShown: true,\n          headerTitle: \"Personal Infomation\",\n          headerTitleAlign: \"center\"\n        }\n      })]\n    });\n  } else if (decideprofile() == 1) {\n    return _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref3) {\n        var route = _ref3.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"md-home-outline\";\n            } else if (route.name === \"Diet\") {\n              iconName = \"md-restaurant-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"md-person-outline\";\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#216afc\",\n          tabBarInactiveTintColor: \"gray\",\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackNavigator,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Healthy Life\",\n        component: DietScreen\n      }), _jsx(Tab.Screen, {\n        name: \"DoctorProfile\",\n        component: DoctorProfileScreen,\n        options: {\n          headerShown: true,\n          headerTitle: \"Personal Infomation\",\n          headerTitleAlign: \"center\"\n        }\n      })]\n    });\n  }\n};\nexport default HomeTabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","createNativeStackNavigator","Ionicons","DietScreen","HomeScreen","ProfileScreen","DoctorProfileScreen","getAuth","createUserWithEmailAndPassword","firestore","getFirestore","doc","getDoc","addDoc","collection","query","where","getDocs","length","app","jsx","_jsx","jsxs","_jsxs","auth","db","Tab","Stack","user","currentUser","HomeStackNavigator","Navigator","children","Screen","name","component","options","headerShown","decideprofile","patientsCollection","therapistCollection","decider","patientQuery","email","patientQuerySnapshot","docs","console","log","therapistQuery","therapistQuerySnapshot","error","HomeTabNavigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","headerTitle","headerTitleAlign","_ref3","_ref4"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/components/navigation/TabNavigator.js"],"sourcesContent":["import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport DietScreen from \"../screens/DietScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport DoctorProfileScreen from \"../screens/DoctorProfileScreen\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  firestore,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  addDoc,\n  collection,\n  query,\n  where,\n  getDocs,\n  length,\n} from \"firebase/firestore\";\nimport app from \"../../firebase\";\n\nconst auth = getAuth(app); // Initialize Firebase Authentication\nconst db = getFirestore();\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\nconst user = auth.currentUser;\n\nconst HomeStackNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"HomeStack\"\n        component={HomeScreen}\n        options={{ headerShown: false }}\n      />\n  \n    </Stack.Navigator>\n  );\n};\nconst decideprofile = () => {\n  const user = auth.currentUser;\n  const patientsCollection = collection(db, \"patients\");\n  const therapistCollection = collection(db, \"therapist\"); // Corrected collection name\n  let decider = 0;\n\n  try {\n    const patientQuery = query(patientsCollection, where(\"email\", \"==\", user.email));\n    const patientQuerySnapshot = getDocs(patientQuery);\n\n    if (patientQuerySnapshot.docs && patientQuerySnapshot.docs.length > 0) {\n      // User found in the \"patients\" collection\n      console.log('User found in the \"patients\" collection');\n      return decider;\n    } else {\n      // User not found in the \"patients\" collection, check \"therapists\" collection\n      const therapistQuery = query(therapistCollection, where(\"email\", \"==\", user.email));\n      const therapistQuerySnapshot = getDocs(therapistQuery);\n\n      if (therapistQuerySnapshot.docs && therapistQuerySnapshot.docs.length > 0) {\n        // User found in the \"therapists\" collection\n        decider = 1;\n        console.log('User found in the \"therapists\" collection');\n        return decider;\n      } else {\n        // User not found in either collection\n        console.log('User not found in both \"patients\" and \"therapists\" collections');\n        return decider;\n      }\n    }\n  } catch (error) {\n    console.error('Error in decideprofile:', error);\n    // Handle the error as needed\n    throw error;\n  }\n}\n\nconst HomeTabNavigator = () => {\n  console.log(decideprofile());\n  if(decideprofile() == 0){\n    console.log('we did it boys');\n    return (\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n            iconName = \"md-home-outline\";\n        \n            } else if (route.name === \"Diet\") {\n            iconName = \"md-restaurant-outline\";\n            } else if (route.name === \"Profile\") {\n            iconName = \"md-person-outline\";\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"#216afc\",\n          tabBarInactiveTintColor: \"gray\",\n          headerShown: false,\n        })}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeStackNavigator}\n          options={{ headerShown: false }}\n        />\n    \n        <Tab.Screen name=\"Healthy Life\" component={DietScreen} />\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          options={{\n            headerShown: true,\n            headerTitle: \"Personal Infomation\",\n            headerTitleAlign: \"center\",\n          }}\n        />\n\n      \n    </Tab.Navigator>\n    );\n  }else if(decideprofile() == 1){\n    return (\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n            iconName = \"md-home-outline\";\n        \n            } else if (route.name === \"Diet\") {\n            iconName = \"md-restaurant-outline\";\n            } else if (route.name === \"Profile\") {\n            iconName = \"md-person-outline\";\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"#216afc\",\n          tabBarInactiveTintColor: \"gray\",\n          headerShown: false,\n        })}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeStackNavigator}\n          options={{ headerShown: false }}\n        />\n    \n        <Tab.Screen name=\"Healthy Life\" component={DietScreen} />\n        <Tab.Screen\n        name=\"DoctorProfile\"\n        component={DoctorProfileScreen}\n        options={{\n          headerShown: true,\n          headerTitle: \"Personal Infomation\",\n          headerTitleAlign: \"center\",\n        }}\n      />\n    </Tab.Navigator>\n    )\n  }\n};\n\nexport default HomeTabNavigator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}