{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-native-elements\";\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Register new user: \", user.email);\n      navigateLogin();\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  var navigateLogin = function navigateLogin() {\n    navigation.navigate(\"LoginScreen\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.greeting,\n        children: \"Register your account!\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        containerStyle: styles.button,\n        buttonStyle: [styles.button, styles.buttonOutline],\n        onPress: handleSignUp,\n        title: \"Register\",\n        titleStyle: styles.buttonOutlineText\n      }), _jsxs(View, {\n        style: styles.textContainer,\n        children: [_jsx(Text, {\n          children: \"Already have account?\"\n        }), _jsx(Button, {\n          type: \"clear\",\n          title: \"Log In\",\n          titleStyle: styles.text,\n          onPress: navigateLogin\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\"\n  },\n  inputContainer: {\n    width: \"80%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonText: {\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  text: {\n    fontSize: 15\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","Button","auth","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","user","console","log","navigateLogin","catch","error","alert","message","navigate","View","style","styles","container","children","Text","greeting","inputContainer","TextInput","placeholder","input","value","onChangeText","text","secureTextEntry","buttonContainer","containerStyle","button","buttonStyle","buttonOutline","onPress","title","titleStyle","buttonOutlineText","textContainer","type","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","width","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","buttonText","color","flexDirection"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/SignUpScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, TextInput } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-native-elements\";\nimport { auth } from \"../../firebase\";\n\nconst SignUpScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignUp = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"Register new user: \", user.email);\n        navigateLogin();\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  const navigateLogin = () => {\n    navigation.navigate(\"LoginScreen\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.greeting}>Register your account!</Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          style={styles.input}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          style={styles.input}\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <Button\n          containerStyle={styles.button}\n          buttonStyle={[styles.button, styles.buttonOutline]}\n          onPress={handleSignUp}\n          title=\"Register\"\n          titleStyle={styles.buttonOutlineText}\n        />\n        <View style={styles.textContainer}>\n          <Text>Already have account?</Text>\n          <Button\n            type=\"clear\"\n            title=\"Log In\"\n            titleStyle={styles.text}\n            onPress={navigateLogin}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n  },\n  inputContainer: {\n    width: \"80%\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonText: {\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  text: {\n    fontSize: 15,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,IAAI;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChC,IAAAC,SAAA,GAA0BV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBjB,IAAI,CACDkB,8BAA8B,CAACP,KAAK,EAAEI,QAAQ,CAAC,CAC/CI,IAAI,CAAC,UAACC,eAAe,EAAK;MACzB,IAAMC,IAAI,GAAGD,eAAe,CAACC,IAAI;MACjCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAACV,KAAK,CAAC;MAC9Ca,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK;MAAA,OAAKC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IAAA,EAAC;EAC3C,CAAC;EAED,IAAMJ,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BjB,UAAU,CAACsB,QAAQ,CAAC,aAAa,CAAC;EACpC,CAAC;EAED,OACEzB,KAAA,CAAC0B,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhC,IAAA,CAAC4B,IAAI;MAAAI,QAAA,EACHhC,IAAA,CAACiC,IAAI;QAACJ,KAAK,EAAEC,MAAM,CAACI,QAAS;QAAAF,QAAA,EAAC;MAAsB,CAAM;IAAC,CACvD,CAAC,EACP9B,KAAA,CAAC0B,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACK,cAAe;MAAAH,QAAA,GACjChC,IAAA,CAACoC,SAAS;QACRC,WAAW,EAAC,OAAO;QACnBR,KAAK,EAAEC,MAAM,CAACQ,KAAM;QACpBC,KAAK,EAAE9B,KAAM;QACb+B,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAK/B,QAAQ,CAAC+B,IAAI,CAAC;QAAA;MAAC,CACxC,CAAC,EACFzC,IAAA,CAACoC,SAAS;QACRC,WAAW,EAAC,UAAU;QACtBR,KAAK,EAAEC,MAAM,CAACQ,KAAM;QACpBI,eAAe;QACfH,KAAK,EAAE1B,QAAS;QAChB2B,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAK3B,WAAW,CAAC2B,IAAI,CAAC;QAAA;MAAC,CAC3C,CAAC;IAAA,CACE,CAAC,EAEPvC,KAAA,CAAC0B,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACa,eAAgB;MAAAX,QAAA,GAClChC,IAAA,CAACH,MAAM;QACL+C,cAAc,EAAEd,MAAM,CAACe,MAAO;QAC9BC,WAAW,EAAE,CAAChB,MAAM,CAACe,MAAM,EAAEf,MAAM,CAACiB,aAAa,CAAE;QACnDC,OAAO,EAAEjC,YAAa;QACtBkC,KAAK,EAAC,UAAU;QAChBC,UAAU,EAAEpB,MAAM,CAACqB;MAAkB,CACtC,CAAC,EACFjD,KAAA,CAAC0B,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACsB,aAAc;QAAApB,QAAA,GAChChC,IAAA,CAACiC,IAAI;UAAAD,QAAA,EAAC;QAAqB,CAAM,CAAC,EAClChC,IAAA,CAACH,MAAM;UACLwD,IAAI,EAAC,OAAO;UACZJ,KAAK,EAAC,QAAQ;UACdC,UAAU,EAAEpB,MAAM,CAACW,IAAK;UACxBO,OAAO,EAAE1B;QAAc,CACxB,CAAC;MAAA,CACE,CAAC;IAAA,CACH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMQ,MAAM,GAAGwB,UAAU,CAACC,MAAM,CAAC;EAC/BxB,SAAS,EAAE;IACTyB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDzB,QAAQ,EAAE;IACR0B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACD1B,cAAc,EAAE;IACd2B,KAAK,EAAE;EACT,CAAC;EACDxB,KAAK,EAAE;IACLqB,eAAe,EAAE,OAAO;IACxBI,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE;EACf,CAAC;EACDzB,eAAe,EAAE;IACfmB,KAAK,EAAE,KAAK;IACZL,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBQ,SAAS,EAAE;EACb,CAAC;EACDrB,MAAM,EAAE;IACNiB,KAAK,EAAE,MAAM;IACbG,YAAY,EAAE,EAAE;IAChBP,UAAU,EAAE;EACd,CAAC;EACDX,aAAa,EAAE;IACbY,eAAe,EAAE,OAAO;IACxBO,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE;EACf,CAAC;EACDC,UAAU,EAAE;IACVR,UAAU,EAAE,KAAK;IACjBD,QAAQ,EAAE;EACZ,CAAC;EACDT,iBAAiB,EAAE;IACjBmB,KAAK,EAAE,SAAS;IAChBV,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDT,aAAa,EAAE;IACbmB,aAAa,EAAE,KAAK;IACpBd,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBQ,SAAS,EAAE;EACb,CAAC;EACDzB,IAAI,EAAE;IACJmB,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAezD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}