{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar decideprofile = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var user = auth.currentUser;\n    var patientsCollection = collection(firestore, \"patients\");\n    var therapistCollection = collection(firestore, \"therapist\");\n    var patientQuery = query(patientsCollection, where(\"email\", \"==\", user.email));\n    var patientQuerySnapshot = yield getDocs(patientQuery);\n    if (patientQuerySnapshot.docs && patientQuerySnapshot.docs.length > 0) {\n      console.log('User found in the \"patients\" collection');\n      return 0;\n    } else {\n      var therapistQuery = query(therapistCollection, where(\"email\", \"==\", user.email));\n      var therapistQuerySnapshot = yield getDocs(therapistQuery);\n      if (therapistQuerySnapshot.docs && therapistQuerySnapshot.docs.length > 0) {\n        console.log('User found in the \"therapists\" collection');\n        return 1;\n      } else {\n        console.log('User not found in both \"patients\" and \"therapists\" collections');\n      }\n    }\n  });\n  return function decideprofile() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar EditProfileScreen = function EditProfileScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    userType = _useState2[0],\n    setUserType = _useState2[1];\n  var _useState3 = useState({\n      firstName: \"\",\n      lastName: \"\",\n      birthday: \"\",\n      phoneNumber: \"\",\n      weight: \"\",\n      height: \"\",\n      medicalCondition: \"\",\n      organization: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    values = _useState4[0],\n    setValues = _useState4[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var result = yield decideprofile();\n          setUserType(result);\n        } catch (error) {\n          console.error('Error in HomeTabNavigator:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var handleSaveProfile = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var user = auth.currentUser;\n      if (userType == 0) {\n        var colRefProfile = collection(firestore, 'patients');\n        var q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n        try {\n          var querySnapshot = yield getDocs(q);\n        } catch (error) {\n          console.error(\"Error checking for existing user data: \", error);\n        }\n      } else if (userType == 1) {\n        var _colRefProfile = collection(firestore, 'therapist');\n        var organization = values.organization;\n        var _q = query(_colRefProfile, where(\"userId\", \"==\", user.uid));\n        try {\n          var _querySnapshot = yield getDocs(_q);\n        } catch (error) {\n          console.error(\"Error checking for existing user data: \", error);\n        }\n      }\n    });\n    return function handleSaveProfile() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleCancel = function handleCancel() {\n    navigation.goBack();\n  };\n  var handleChangeText = function handleChangeText(key, text) {\n    setValues(function (prevValues) {\n      return _objectSpread(_objectSpread({}, prevValues), {}, _defineProperty({}, key, text));\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.heading,\n      children: \"Edit Your Profile\"\n    })\n  });\n};\nvar styles = StyleSheet.create({});\nexport default EditProfileScreen;","map":{"version":3,"names":["decideprofile","_ref","_asyncToGenerator","user","auth","currentUser","patientsCollection","collection","firestore","therapistCollection","patientQuery","query","where","email","patientQuerySnapshot","getDocs","docs","length","console","log","therapistQuery","therapistQuerySnapshot","apply","arguments","EditProfileScreen","_ref2","navigation","_useState","useState","_useState2","_slicedToArray","userType","setUserType","_useState3","firstName","lastName","birthday","phoneNumber","weight","height","medicalCondition","organization","_useState4","values","setValues","useEffect","fetchData","_ref3","result","error","handleSaveProfile","_ref4","colRefProfile","q","uid","querySnapshot","handleCancel","goBack","handleChangeText","key","text","prevValues","_objectSpread","_defineProperty","_jsx","View","style","styles","container","children","Text","heading","StyleSheet","create"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/components/screens/EditProfileScreen.js"],"sourcesContent":["// ... (imports)\n\nconst decideprofile = async () => {\n  const user = auth.currentUser;\n  const patientsCollection = collection(firestore, \"patients\");\n  const therapistCollection = collection(firestore, \"therapist\"); // Corrected collection name\n  const patientQuery = query(patientsCollection, where(\"email\", \"==\", user.email));\n  const patientQuerySnapshot = await getDocs(patientQuery);\n  if (patientQuerySnapshot.docs && patientQuerySnapshot.docs.length > 0) {\n    // User found in the \"patients\" collection\n    console.log('User found in the \"patients\" collection');\n    return 0;\n  } else {\n    // User not found in the \"patients\" collection, check \"therapists\" collection\n    const therapistQuery = query(therapistCollection, where(\"email\", \"==\", user.email));\n    const therapistQuerySnapshot = await getDocs(therapistQuery);\n\n    if (therapistQuerySnapshot.docs && therapistQuerySnapshot.docs.length > 0) {\n      // User found in the \"therapists\" collection\n      console.log('User found in the \"therapists\" collection');\n      return 1;\n    } else {\n      // User not found in either collection\n      console.log('User not found in both \"patients\" and \"therapists\" collections');\n    }\n  }\n};\n\nconst EditProfileScreen = ({ navigation }) => {\n  const [userType, setUserType] = useState();\n  const [values, setValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    birthday: \"\",\n    phoneNumber: \"\",\n    weight: \"\",\n    height: \"\",\n    medicalCondition: \"\",\n    organization: \"\", // Added organization for therapists\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await decideprofile();\n        setUserType(result);\n      } catch (error) {\n        console.error('Error in HomeTabNavigator:', error);\n        // Handle the error as needed\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSaveProfile = async () => {\n    const user = auth.currentUser;\n\n    if (userType == 0) {\n      const colRefProfile = collection(firestore, 'patients');\n      const q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n\n      try {\n        const querySnapshot = await getDocs(q);\n        // ... rest of your code\n      } catch (error) {\n        console.error(\"Error checking for existing user data: \", error);\n      }\n    } else if (userType == 1) {\n      const colRefProfile = collection(firestore, 'therapist');\n      // Ensure 'organization' is defined\n      const organization = values.organization;\n      const q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n\n      try {\n        const querySnapshot = await getDocs(q);\n        // ... rest of your code\n      } catch (error) {\n        console.error(\"Error checking for existing user data: \", error);\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    navigation.goBack();\n  };\n\n  const handleChangeText = (key, text) => {\n    setValues((prevValues) => ({\n      ...prevValues,\n      [key]: text,\n    }));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Edit Your Profile</Text>\n      {/* ... rest of your code */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  // ... (styles)\n});\n\nexport default EditProfileScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}