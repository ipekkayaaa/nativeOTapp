{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      email: \"\",\n      password: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    values = _useState2[0],\n    setValues = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loginStatus = _useState4[0],\n    setLoginStatus = _useState4[1];\n  var handleSignIn = function handleSignIn() {\n    setTimeout(function () {\n      if (values.email === \"user@example.com\" && values.password === \"password\") {\n        var token = \"sampleToken\";\n        console.log(\"Login Successful\");\n        setLoginStatus(\"Login Successful\");\n        navigation.navigate(\"Home\");\n      } else {\n        console.error(\"Email or password is incorrect\");\n        setLoginStatus(\"Email or password is incorrect\");\n      }\n    }, 1000);\n  };\n  return _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Sign In\"\n      }), loginStatus && _jsx(Text, {\n        children: loginStatus\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Email\",\n        value: values.email,\n        onChangeText: function onChangeText(text) {\n          return setValues(_objectSpread(_objectSpread({}, values), {}, {\n            email: text\n          }));\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        value: values.password,\n        onChangeText: function onChangeText(text) {\n          return setValues(_objectSpread(_objectSpread({}, values), {}, {\n            password: text\n          }));\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignIn,\n        children: _jsx(Text, {\n          children: \"Sign In\"\n        })\n      }), _jsx(Text, {\n        children: \"If you do not have an account, click Sign Up button\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Register\");\n        },\n        children: _jsx(Text, {\n          children: \"Sign Up\"\n        })\n      })]\n    })\n  });\n};\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","SignInScreen","_ref","navigation","_useState","email","password","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","loginStatus","setLoginStatus","handleSignIn","setTimeout","token","console","log","navigate","error","children","placeholder","value","onChangeText","text","_objectSpread","secureTextEntry","onPress"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/src/Screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\n\nconst SignInScreen = ({ navigation }) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleSignIn = () => {\n    // Simulating API call with setTimeout\n    // In reality, replace setTimeout with your axios request\n    setTimeout(() => {\n      // Mocking successful login\n      if (\n        values.email === \"user@example.com\" &&\n        values.password === \"password\"\n      ) {\n        const token = \"sampleToken\"; // Replace this with the received token\n        console.log(\"Login Successful\");\n        setLoginStatus(\"Login Successful\");\n        // Navigation logic in React Native (navigate to Home screen)\n        navigation.navigate(\"Home\"); // Example navigation action\n      } else {\n        console.error(\"Email or password is incorrect\");\n        setLoginStatus(\"Email or password is incorrect\");\n      }\n    }, 1000); // Simulating delay for API call\n  };\n\n  return (\n    <View>\n      <View>\n        <Text>Sign In</Text>\n        {loginStatus && <Text>{loginStatus}</Text>}\n        <TextInput\n          placeholder=\"Enter Email\"\n          value={values.email}\n          onChangeText={(text) => setValues({ ...values, email: text })}\n        />\n        <TextInput\n          placeholder=\"Enter Password\"\n          secureTextEntry={true}\n          value={values.password}\n          onChangeText={(text) => setValues({ ...values, password: text })}\n        />\n        <TouchableOpacity onPress={handleSignIn}>\n          <Text>Sign In</Text>\n        </TouchableOpacity>\n        <Text>If you do not have an account, click Sign Up button</Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"Register\")}>\n          <Text>Sign Up</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default SignInScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}