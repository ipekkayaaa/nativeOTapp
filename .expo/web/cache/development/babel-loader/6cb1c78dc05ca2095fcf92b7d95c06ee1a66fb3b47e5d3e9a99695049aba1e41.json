{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button } from \"react-native-elements\";\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate(\"HomeScreen\");\n      } else {\n        setLoading(false);\n      }\n    });\n    return unsubscribe;\n  }, [navigation]);\n  var navigateSignUp = function navigateSignUp() {\n    navigation.navigate(\"SignUpScreen\");\n  };\n  var handleLogin = function handleLogin() {\n    if (!email || !password) {\n      alert(\"Please enter both email and password.\");\n      return;\n    }\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      navigation.navigate(\"HomeScreen\");\n      console.log(\"Logged in with\", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  if (loading) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.greeting,\n        children: \"Welcome to Doctor App!\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        containerStyle: styles.button,\n        buttonStyle: styles.button,\n        onPress: handleLogin,\n        title: \"Login\",\n        titleStyle: styles.buttonText\n      }), _jsx(Button, {\n        containerStyle: styles.button,\n        buttonStyle: [styles.button, styles.buttonOutline],\n        onPress: navigateSignUp,\n        title: \"Register\",\n        titleStyle: styles.buttonOutlineText\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\"\n  },\n  inputContainer: {\n    width: \"50%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonText: {\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  textContainer: {},\n  text: {}\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","KeyboardAvoidingView","TextInput","Button","auth","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","unsubscribe","onAuthStateChanged","user","navigate","navigateSignUp","handleLogin","alert","signInWithEmailAndPassword","then","userCredentials","console","log","catch","error","message","style","styles","container","children","greeting","inputContainer","placeholder","input","value","onChangeText","text","secureTextEntry","buttonContainer","containerStyle","button","buttonStyle","onPress","title","titleStyle","buttonText","buttonOutline","buttonOutlineText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","width","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","color","textContainer"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  TextInput,\n} from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { auth } from \"../../firebase\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    // Add the onAuthStateChanged listener to check the authentication state\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        // If a user is authenticated, navigate to the HomeScreen or any desired screen\n        navigation.navigate(\"HomeScreen\");\n      } else {\n        // If there's no authenticated user, set loading to false to render the login page\n        setLoading(false);\n      }\n    });\n\n    // Clean up the subscription when the component unmounts\n    return unsubscribe;\n  }, [navigation]);\n\n  const navigateSignUp = () => {\n    navigation.navigate(\"SignUpScreen\");\n  };\n\n  const handleLogin = () => {\n    if (!email || !password) {\n      alert(\"Please enter both email and password.\");\n      return;\n    }\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        navigation.navigate(\"HomeScreen\");\n        console.log(\"Logged in with\", user.email);\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.greeting}>Welcome to Doctor App!</Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          style={styles.input}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          style={styles.input}\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <Button\n          containerStyle={styles.button}\n          buttonStyle={styles.button}\n          onPress={handleLogin}\n          title=\"Login\"\n          titleStyle={styles.buttonText}\n        />\n        <Button\n          containerStyle={styles.button}\n          buttonStyle={[styles.button, styles.buttonOutline]}\n          onPress={navigateSignUp}\n          title=\"Register\"\n          titleStyle={styles.buttonOutlineText}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n  },\n  inputContainer: {\n    width: \"50%\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonText: {\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n  textContainer: {},\n  text: {},\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}