{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { SearchBar } from \"react-native-elements\";\nimport Headline from \"../subcomponents/Headline\";\nimport CategoryList from \"../subcomponents/CategoryList\";\nimport Card from \"../subcomponents/Card\";\nimport QuickRoute from \"../subcomponents/QuickRoute\";\nimport doctors from \"../consts/Doctor\";\nimport pageImages from \"../consts/PageImages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useState3 = useState(doctors),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredDataSource = _useState4[0],\n    setFilteredDataSource = _useState4[1];\n  var _useState5 = useState(doctors),\n    _useState6 = _slicedToArray(_useState5, 2),\n    masterDataSource = _useState6[0],\n    setMasterDataSource = _useState6[1];\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = `${item.firstname} ${item.lastname}` ? `${item.firstname} ${item.lastname}`.toUpperCase() : \"\".toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    activeCardIndex = _useState8[0],\n    setActiveCardIndex = _useState8[1];\n  var _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n  var cardWidth = width / 1.9;\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Headline, {}), _jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.textHeader,\n        children: \"Find your doctor here\"\n      })\n    }), _jsx(SearchBar, {\n      round: true,\n      searchIcon: {\n        size: 26\n      },\n      containerStyle: styles.searchContainer,\n      inputContainerStyle: styles.searchInputContainer,\n      placeholder: \"Type your doctor's name\",\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear() {\n        return searchFilterFunction(\"\");\n      },\n      value: search\n    }), _jsx(FlatList, {\n      onMomentumScrollEnd: function onMomentumScrollEnd(e) {\n        setActiveCardIndex(Math.round(e.nativeEvent.contentOffset.x / cardWidth));\n      },\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      data: filteredDataSource,\n      contentContainerStyle: {\n        paddingVertical: 10,\n        paddingLeft: 10\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsx(TouchableOpacity, {\n          disabled: activeCardIndex != index,\n          activeOpacity: 1,\n          onPress: function onPress() {\n            return navigation.navigate(\"ProfileScreen\", item);\n          },\n          children: _jsx(Card, {\n            doctor: item,\n            index: index\n          })\n        });\n      }\n    }), _jsx(View, {\n      style: styles.headerQuickAcess,\n      children: _jsx(Text, {\n        style: styles.textHeaderQuickAccess,\n        children: \"Quick Access\"\n      })\n    }), _jsx(FlatList, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      data: pageImages,\n      contentContainerStyle: {\n        paddingLeft: 10,\n        paddingVertical: 10\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n          index = _ref3.index;\n        return _jsx(TouchableOpacity, {\n          activeOpacity: 1,\n          onPress: function onPress() {\n            return navigation.navigate(\"DietScreen\", item);\n          },\n          children: _jsx(QuickRoute, {\n            page: item\n          })\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  header: {\n    marginTop: 35,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20\n  },\n  textHeader: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  searchContainer: {\n    fontSize: 16,\n    paddingLeft: 15,\n    backgroundColor: \"white\",\n    borderBottomColor: \"transparent\",\n    borderTopColor: \"transparent\",\n    marginTop: 10\n  },\n  searchInputContainer: {\n    backgroundColor: \"#F0F8FF\",\n    marginLeft: 10,\n    marginRight: 10\n  },\n  headerQuickAcess: {\n    marginTop: 20,\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20\n  },\n  textHeaderQuickAccess: {\n    fontSize: 26,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","ScrollView","FlatList","TouchableOpacity","Dimensions","SearchBar","Headline","CategoryList","Card","QuickRoute","doctors","pageImages","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","filteredDataSource","setFilteredDataSource","_useState5","_useState6","masterDataSource","setMasterDataSource","searchFilterFunction","text","newData","filter","item","itemData","firstname","lastname","toUpperCase","textData","indexOf","_useState7","_useState8","activeCardIndex","setActiveCardIndex","_Dimensions$get","get","width","cardWidth","style","styles","container","children","header","textHeader","round","searchIcon","size","containerStyle","searchContainer","inputContainerStyle","searchInputContainer","placeholder","onChangeText","onClear","value","onMomentumScrollEnd","e","Math","nativeEvent","contentOffset","x","horizontal","showsHorizontalScrollIndicator","data","contentContainerStyle","paddingVertical","paddingLeft","renderItem","_ref2","index","disabled","activeOpacity","onPress","navigate","doctor","headerQuickAcess","textHeaderQuickAccess","_ref3","page","create","flex","backgroundColor","marginTop","flexDirection","justifyContent","paddingHorizontal","fontSize","fontWeight","borderBottomColor","borderTopColor","marginLeft","marginRight"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/HomeScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  FlatList,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { SearchBar } from \"react-native-elements\";\nimport Headline from \"../subcomponents/Headline\";\nimport CategoryList from \"../subcomponents/CategoryList\";\nimport Card from \"../subcomponents/Card\";\nimport QuickRoute from \"../subcomponents/QuickRoute\";\nimport doctors from \"../consts/Doctor\";\nimport pageImages from \"../consts/PageImages\";\n\nexport default function HomeScreen({ navigation }) {\n  const [search, setSearch] = useState(\"\");\n  const [filteredDataSource, setFilteredDataSource] = useState(doctors);\n  const [masterDataSource, setMasterDataSource] = useState(doctors);\n\n  const searchFilterFunction = (text) => {\n    if (text) {\n      const newData = masterDataSource.filter(function (item) {\n        const itemData = `${item.firstname} ${item.lastname}`\n          ? `${item.firstname} ${item.lastname}`.toUpperCase()\n          : \"\".toUpperCase();\n        const textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  const [activeCardIndex, setActiveCardIndex] = useState(0);\n\n  const { width } = Dimensions.get(\"screen\");\n  const cardWidth = width / 1.9;\n\n  return (\n    <ScrollView style={styles.container}>\n      <Headline />\n\n      <View style={styles.header}>\n        <Text style={styles.textHeader}>Find your doctor here</Text>\n      </View>\n\n      <SearchBar\n        round\n        searchIcon={{ size: 26 }}\n        containerStyle={styles.searchContainer}\n        inputContainerStyle={styles.searchInputContainer}\n        placeholder=\"Type your doctor's name\"\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={() => searchFilterFunction(\"\")}\n        value={search}\n      />\n\n      <FlatList\n        onMomentumScrollEnd={(e) => {\n          setActiveCardIndex(\n            Math.round(e.nativeEvent.contentOffset.x / cardWidth)\n          );\n        }}\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        data={filteredDataSource}\n        contentContainerStyle={{ paddingVertical: 10, paddingLeft: 10 }}\n        renderItem={({ item, index }) => (\n          <TouchableOpacity\n            disabled={activeCardIndex != index}\n            activeOpacity={1}\n            onPress={() => navigation.navigate(\"ProfileScreen\", item)}\n          >\n            <Card doctor={item} index={index} />\n          </TouchableOpacity>\n        )}\n      />\n\n      <View style={styles.headerQuickAcess}>\n        <Text style={styles.textHeaderQuickAccess}>Quick Access</Text>\n      </View>\n\n      <FlatList\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        data={pageImages}\n        contentContainerStyle={{\n          paddingLeft: 10,\n          paddingVertical: 10,\n        }}\n        renderItem={({ item, index }) => (\n          <TouchableOpacity\n            activeOpacity={1}\n            onPress={() => navigation.navigate(\"DietScreen\", item)}\n          >\n            <QuickRoute page={item} />\n          </TouchableOpacity>\n        )}\n      />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  header: {\n    marginTop: 35,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n  },\n  textHeader: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  searchContainer: {\n    fontSize: 16,\n    paddingLeft: 15,\n    backgroundColor: \"white\",\n    borderBottomColor: \"transparent\",\n    borderTopColor: \"transparent\",\n    marginTop: 10,\n  },\n  searchInputContainer: {\n    backgroundColor: \"#F0F8FF\",\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  headerQuickAcess: {\n    marginTop: 20,\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n  },\n  textHeaderQuickAccess: {\n    fontSize: 26,\n    fontWeight: \"bold\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}