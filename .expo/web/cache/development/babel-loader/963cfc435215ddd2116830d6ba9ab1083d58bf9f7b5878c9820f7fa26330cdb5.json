{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignInScreen = function SignInScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 15,\n    width: \"100%\"\n  },\n  button: {\n    backgroundColor: \"#007bff\",\n    padding: 12,\n    borderRadius: 5,\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","SignInScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","console","log","style","styles","container","children","heading","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","fontSize","fontWeight","marginBottom","height","borderWidth","borderColor","borderRadius","padding","width","color"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/src/Screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\n\nconst SignInScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    // Here, you would typically handle the login logic, e.g., API calls\n\n    // For demonstration, let's just log the email and password for now\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Login</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 15,\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"#007bff\",\n    padding: 12,\n    borderRadius: 5,\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default SignInScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AASxC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAIxBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAER,KAAK,CAAC;IAC5BO,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAAC;EACpC,CAAC;EAED,OACET,KAAA,CAACR,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BnB,IAAA,CAACL,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAK,CAAM,CAAC,EACzCnB,IAAA,CAACJ,SAAS;MACRoB,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEhB,KAAM;MACbiB,YAAY,EAAEhB,QAAS;MACvBiB,cAAc,EAAC,MAAM;MACrBC,YAAY,EAAC;IAAe,CAC7B,CAAC,EACF1B,IAAA,CAACJ,SAAS;MACRoB,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEZ,QAAS;MAChBa,YAAY,EAAEZ,WAAY;MAC1Be,eAAe;IAAA,CAChB,CAAC,EACF3B,IAAA,CAACH,gBAAgB;MAACmB,KAAK,EAAEC,MAAM,CAACW,MAAO;MAACC,OAAO,EAAEhB,WAAY;MAAAM,QAAA,EAC3DnB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACa,UAAW;QAAAX,QAAA,EAAC;MAAK,CAAM;IAAC,CAC5B,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGnB,UAAU,CAACiC,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,MAAM;IACvBC,iBAAiB,EAAE;EACrB,CAAC;EACDhB,OAAO,EAAE;IACPiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDlB,KAAK,EAAE;IACLmB,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXL,YAAY,EAAE,EAAE;IAChBM,KAAK,EAAE;EACT,CAAC;EACDjB,MAAM,EAAE;IACNO,eAAe,EAAE,SAAS;IAC1BS,OAAO,EAAE,EAAE;IACXD,YAAY,EAAE,CAAC;IACfT,UAAU,EAAE,QAAQ;IACpBW,KAAK,EAAE;EACT,CAAC;EACDf,UAAU,EAAE;IACVgB,KAAK,EAAE,MAAM;IACbR,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAenC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}