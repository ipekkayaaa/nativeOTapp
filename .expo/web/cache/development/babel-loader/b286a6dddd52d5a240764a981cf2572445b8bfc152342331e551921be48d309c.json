{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDtkmG9Z7HWCfGHjM8omgVA_LCNemv5wmQ\",\n  authDomain: \"infx490-d9876.firebaseapp.com\",\n  databaseURL: \"https://infx490-d9876-default-rtdb.firebaseio.com\",\n  projectId: \"infx490-d9876\",\n  storageBucket: \"infx490-d9876.appspot.com\",\n  messagingSenderId: \"602189178002\",\n  appId: \"1:602189178002:web:5d56c140f3ef5a8acef24b\",\n  measurementId: \"G-MNNEM90NZC\"\n};\nvar app = initializeApp(firebaseConfig);\nvar firestore = getFirestore(app);\nvar auth = getAuth(app);\nvar db = getDatabase(app);\nvar colRef = collection(firestore, 'patients');\ngetDocs(colRef).then(function (snapshot) {\n  snapshot.forEach(function (doc) {\n    console.log(doc.id, \" => \", doc.data());\n  });\n}).catch(function (error) {\n  console.error(\"Error getting documents: \", error);\n});\nvar colRefworkout = collection(firestore, 'workoutPlan');\ngetDocs(colRefworkout).then(function (snapshot) {\n  snapshot.forEach(function (doc) {\n    console.log(doc.id, \" => \", doc.data());\n  });\n}).catch(function (error) {\n  console.error(\"Error getting documents: \", error);\n});\nexport { auth, db, firestore };","map":{"version":3,"names":["initializeApp","getAuth","getDatabase","getFirestore","collection","getDocs","addDoc","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firestore","auth","db","colRef","then","snapshot","forEach","doc","console","log","id","data","catch","error","colRefworkout"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/firebase.js"],"sourcesContent":["// for verison 10.5.2\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDtkmG9Z7HWCfGHjM8omgVA_LCNemv5wmQ\",\n  authDomain: \"infx490-d9876.firebaseapp.com\",\n  databaseURL: \"https://infx490-d9876-default-rtdb.firebaseio.com\",\n  projectId: \"infx490-d9876\",\n  storageBucket: \"infx490-d9876.appspot.com\",\n  messagingSenderId: \"602189178002\",\n  appId: \"1:602189178002:web:5d56c140f3ef5a8acef24b\",\n  measurementId: \"G-MNNEM90NZC\",\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firestore = getFirestore(app); // Use getFirestore to get the Firestore instance\n\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\n// this is how we get the data do not delete this we can delete it later.\n// get collection\nconst colRef = collection(firestore, 'patients'); \n\ngetDocs(colRef)\n  .then((snapshot) =>  {\n    snapshot.forEach((doc) => {\n      console.log(doc.id, \" => \", doc.data());\n    });\n  })\n  .catch((error) => {\n    console.error(\"Error getting documents: \", error);\n  });\n\n\n\n// get collection\nconst colRefworkout = collection(firestore, 'workoutPlan'); \n\ngetDocs(colRefworkout)\n  .then((snapshot) =>  {\n    snapshot.forEach((doc) => {\n      console.log(doc.id, \" => \", doc.data());\n    });\n  })\n  .catch((error) => {\n    console.error(\"Error getting documents: \", error);\n  });\n\n\n\nexport { auth, db, firestore };\n\n\n\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,YAAY,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AAG9E,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,WAAW,EAAE,mDAAmD;EAChEC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,2BAA2B;EAC1CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,IAAMC,GAAG,GAAGhB,aAAa,CAACO,cAAc,CAAC;AACzC,IAAMU,SAAS,GAAGd,YAAY,CAACa,GAAG,CAAC;AAEnC,IAAME,IAAI,GAAGjB,OAAO,CAACe,GAAG,CAAC;AACzB,IAAMG,EAAE,GAAGjB,WAAW,CAACc,GAAG,CAAC;AAI3B,IAAMI,MAAM,GAAGhB,UAAU,CAACa,SAAS,EAAE,UAAU,CAAC;AAEhDZ,OAAO,CAACe,MAAM,CAAC,CACZC,IAAI,CAAC,UAACC,QAAQ,EAAM;EACnBA,QAAQ,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;IACxBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,EAAEH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;EAChBL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;AACnD,CAAC,CAAC;AAKJ,IAAMC,aAAa,GAAG3B,UAAU,CAACa,SAAS,EAAE,aAAa,CAAC;AAE1DZ,OAAO,CAAC0B,aAAa,CAAC,CACnBV,IAAI,CAAC,UAACC,QAAQ,EAAM;EACnBA,QAAQ,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;IACxBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,EAAEH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;EAChBL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;AACnD,CAAC,CAAC;AAIJ,SAASZ,IAAI,EAAEC,EAAE,EAAEF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}