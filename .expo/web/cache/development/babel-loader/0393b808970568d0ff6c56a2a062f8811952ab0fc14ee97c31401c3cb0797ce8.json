{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from \"react-native-elements\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport app from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"doctor\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userType = _useState6[0],\n    setUserType = _useState6[1];\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        alert(\"Please enter both email and password.\");\n        return;\n      }\n      try {\n        var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n        var user = userCredential.user;\n        console.log(\"Registered new user:\", user.email);\n        if (userType === \"doctor\") {\n          navigation.navigate(\"HomeScreen\");\n        } else if (userType === \"patient\") {\n          navigation.navigate(\"InformationForm\");\n        }\n        navigateLogin();\n      } catch (error) {\n        alert(error.message);\n      }\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var navigateLogin = function navigateLogin() {\n    navigation.navigate(\"LoginScreen\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.greeting,\n        children: \"Register your account!\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.radioContainer,\n      children: [_jsx(Text, {\n        style: styles.radioLabel,\n        children: \"Select User Type:\"\n      }), _jsx(TouchableOpacity, {\n        style: userType === \"doctor\" ? styles.radioButtonSelected : styles.radioButton,\n        onPress: function onPress() {\n          return setUserType(\"doctor\");\n        },\n        children: _jsx(Text, {\n          style: styles.radioText,\n          children: \"Doctor\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: userType === \"patient\" ? styles.radioButtonSelected : styles.radioButton,\n        onPress: function onPress() {\n          return setUserType(\"patient\");\n        },\n        children: _jsx(Text, {\n          style: styles.radioText,\n          children: \"Patient\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        containerStyle: styles.button,\n        buttonStyle: [styles.button, styles.buttonOutline],\n        onPress: handleSignUp,\n        title: \"Register\",\n        titleStyle: styles.buttonOutlineText\n      }), _jsxs(View, {\n        style: styles.textContainer,\n        children: [_jsx(Text, {\n          children: \"Already have an account?\"\n        }), _jsx(Button, {\n          type: \"clear\",\n          title: \"Log In\",\n          titleStyle: styles.text,\n          onPress: navigateLogin\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\"\n  },\n  inputContainer: {\n    width: \"50%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  text: {\n    fontSize: 15\n  },\n  radioContainer: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  radioLabel: {\n    fontSize: 16,\n    marginRight: 10\n  },\n  radioButton: {\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10\n  },\n  radioButtonSelected: {\n    borderWidth: 1,\n    borderColor: \"#0782F9\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10\n  },\n  radioText: {\n    fontSize: 16\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","Button","getAuth","createUserWithEmailAndPassword","app","jsx","_jsx","jsxs","_jsxs","auth","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","userType","setUserType","handleSignUp","_ref2","_asyncToGenerator","alert","userCredential","user","console","log","navigate","navigateLogin","error","message","apply","arguments","style","styles","container","children","greeting","inputContainer","placeholder","input","value","onChangeText","text","secureTextEntry","radioContainer","radioLabel","radioButtonSelected","radioButton","onPress","radioText","buttonContainer","containerStyle","button","buttonStyle","buttonOutline","title","titleStyle","buttonOutlineText","textContainer","type","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","width","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","color","flexDirection","marginVertical","marginRight","padding"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/components/screens/SignUpScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport app from \"../../firebase\";\n\nconst auth = getAuth(app); // Initialize Firebase Authentication\n\nconst SignUpScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userType, setUserType] = useState(\"doctor\"); // Default to \"doctor\"\n\n  const handleSignUp = async () => {\n    if (!email || !password) {\n      alert(\"Please enter both email and password.\");\n      return;\n    }\n\n    try {\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      const user = userCredential.user;\n      console.log(\"Registered new user:\", user.email);\n      if (userType === \"doctor\") {\n        // Navigate to home screen for doctors\n        navigation.navigate(\"HomeScreen\");\n      } else if (userType === \"patient\") {\n        // Navigate to information screen for patients\n        navigation.navigate(\"InformationForm\");\n      }\n      navigateLogin();\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const navigateLogin = () => {\n    navigation.navigate(\"LoginScreen\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.greeting}>Register your account!</Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          style={styles.input}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          style={styles.input}\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n      </View>\n\n      <View style={styles.radioContainer}>\n        <Text style={styles.radioLabel}>Select User Type:</Text>\n        <TouchableOpacity\n          style={\n            userType === \"doctor\"\n              ? styles.radioButtonSelected\n              : styles.radioButton\n          }\n          onPress={() => setUserType(\"doctor\")}\n        >\n          <Text style={styles.radioText}>Doctor</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={\n            userType === \"patient\"\n              ? styles.radioButtonSelected\n              : styles.radioButton\n          }\n          onPress={() => setUserType(\"patient\")}\n        >\n          <Text style={styles.radioText}>Patient</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <Button\n          containerStyle={styles.button}\n          buttonStyle={[styles.button, styles.buttonOutline]}\n          onPress={handleSignUp}\n          title=\"Register\"\n          titleStyle={styles.buttonOutlineText}\n        />\n        <View style={styles.textContainer}>\n          <Text>Already have an account?</Text>\n          <Button\n            type=\"clear\"\n            title=\"Log In\"\n            titleStyle={styles.text}\n            onPress={navigateLogin}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n  },\n  inputContainer: {\n    width: \"50%\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  text: {\n    fontSize: 15,\n  },\n  radioContainer: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  radioLabel: {\n    fontSize: 16,\n    marginRight: 10,\n  },\n  radioButton: {\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n  },\n  radioButtonSelected: {\n    borderWidth: 1,\n    borderColor: \"#0782F9\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n  },\n  radioText: {\n    fontSize: 16,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}