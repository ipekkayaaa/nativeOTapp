{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button } from \"react-native-elements\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { firestore } from \"../../firebase\";\nimport { getAuth } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DoctorFormScreen = function DoctorFormScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var auth = getAuth();\n  var user = auth.currentUser;\n  var email = user.email;\n  var _useState = useState({\n      firstName: \"\",\n      lastName: \"\",\n      birthday: \"\",\n      phoneNumber: \"\",\n      organization: \"\",\n      email: email\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    values = _useState2[0],\n    setValues = _useState2[1];\n  var handleSaveForm = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!values.firstName || !values.lastName || !values.birthday || !values.phoneNumber || !values.organization) {\n        alert(\"Please fill out all the fields before submitting your registration.\");\n        return;\n      }\n      var colRefTherapist = collection(firestore, \"therapist\");\n      try {\n        yield addDoc(colRefTherapist, _objectSpread({}, values));\n        console.log(\"Doctor data added successfully!\");\n        navigation.navigate(\"LoginScreen\");\n      } catch (error) {\n        console.error(\"Error adding doctor data: \", error);\n      }\n    });\n    return function handleSaveForm() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headline,\n      children: \"Please fill out the form to complete your registration.\"\n    }), _jsx(TextInput, {\n      placeholder: \"First Name\",\n      style: styles.input,\n      value: values.firstName,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          firstName: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Last Name\",\n      style: styles.input,\n      value: values.lastName,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          lastName: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Birthday\",\n      style: styles.input,\n      value: values.birthday,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          birthday: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Phone Number\",\n      style: styles.input,\n      value: values.phoneNumber,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          phoneNumber: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Organization\",\n      style: styles.input,\n      value: values.organization,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          organization: text\n        }));\n      }\n    }), _jsx(Button, {\n      containerStyle: styles.button,\n      buttonStyle: [styles.button, styles.buttonOutline],\n      onPress: handleSaveForm,\n      title: \"Submit Registration\",\n      titleStyle: styles.buttonOutlineText\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headline: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n    width: 800\n  },\n  button: {\n    width: \"50%\",\n    marginTop: 20,\n    borderRadius: 10,\n    marginLeft: \"15%\"\n  },\n  buttonOutline: {\n    backgroundColor: \"#7DCEA0\",\n    marginTop: 5,\n    borderColor: \"#DAF7A6\",\n    borderWidth: 2\n  },\n  buttonOutlineText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  }\n});\nexport default DoctorFormScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Text","StyleSheet","Alert","Button","addDoc","collection","firestore","getAuth","jsx","_jsx","jsxs","_jsxs","DoctorFormScreen","_ref","navigation","route","auth","user","currentUser","email","_useState","firstName","lastName","birthday","phoneNumber","organization","_useState2","_slicedToArray","values","setValues","handleSaveForm","_ref2","_asyncToGenerator","alert","colRefTherapist","_objectSpread","console","log","navigate","error","apply","arguments","style","styles","container","children","headline","placeholder","input","value","onChangeText","text","containerStyle","button","buttonStyle","buttonOutline","onPress","title","titleStyle","buttonOutlineText","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","width","marginLeft","color"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/DoctorFormScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, Text, StyleSheet, Alert } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { firestore } from \"../../firebase\";\nimport { getAuth } from \"firebase/auth\";\n\nconst DoctorFormScreen = ({ navigation, route }) => {\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const email = user.email;\n\n  const [values, setValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    birthday: \"\",\n    phoneNumber: \"\",\n    organization: \"\",\n    email: email,\n  });\n\n  const handleSaveForm = async () => {\n    // Validate input\n    if (\n      !values.firstName ||\n      !values.lastName ||\n      !values.birthday ||\n      !values.phoneNumber ||\n      !values.organization\n    ){\n      alert(\"Please fill out all the fields before submitting your registration.\");\n      return;\n    }\n\n    const colRefTherapist = collection(firestore, \"therapist\");\n\n    try {\n      await addDoc(colRefTherapist, {\n        ...values,\n      });\n\n      console.log(\"Doctor data added successfully!\");\n      navigation.navigate(\"LoginScreen\");\n    } catch (error) {\n      console.error(\"Error adding doctor data: \", error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headline}>Please fill out the form to complete your registration.</Text>\n      <TextInput\n        placeholder=\"First Name\"\n        style={styles.input}\n        value={values.firstName}\n        onChangeText={(text) => setValues({ ...values, firstName: text })}\n      />\n      <TextInput\n        placeholder=\"Last Name\"\n        style={styles.input}\n        value={values.lastName}\n        onChangeText={(text) => setValues({ ...values, lastName: text })}\n      />\n      <TextInput\n        placeholder=\"Birthday\"\n        style={styles.input}\n        value={values.birthday}\n        onChangeText={(text) => setValues({ ...values, birthday: text })}\n      />\n      <TextInput\n        placeholder=\"Phone Number\"\n        style={styles.input}\n        value={values.phoneNumber}\n        onChangeText={(text) => setValues({ ...values, phoneNumber: text })}\n      />\n      <TextInput\n        placeholder=\"Organization\"\n        style={styles.input}\n        value={values.organization}\n        onChangeText={(text) => setValues({ ...values, organization: text })}\n      />\n\n      <Button\n        containerStyle={styles.button}\n        buttonStyle={[styles.button, styles.buttonOutline]}\n        onPress={handleSaveForm}\n        title=\"Submit Registration\"\n        titleStyle={styles.buttonOutlineText}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  headline: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n    width: 800,\n  },\n  button: {\n    width: \"50%\",\n    marginTop: 20,\n    borderRadius: 10,\n    marginLeft: \"15%\",\n  },\n  buttonOutline: {\n    backgroundColor: \"#7DCEA0\",\n    marginTop: 5,\n    borderColor: \"#DAF7A6\",\n    borderWidth: 2,\n  },\n  buttonOutlineText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n});\n\nexport default DoctorFormScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}