{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useEffect, useState } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport DietScreen from \"../screens/DietScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport DoctorProfileScreen from \"../screens/DoctorProfileScreen\";\nimport { getAuth, createUserWithEmailAndPassword, firestore } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, addDoc, collection, query, where, getDocs, length, get, async } from \"firebase/firestore\";\nimport app from \"../../firebase\";\nimport OrganizationListScreen from \"../screens/OrganizationListScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\nvar db = getFirestore();\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nvar user = auth.currentUser;\nvar HomeStackNavigator = function HomeStackNavigator() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"HomeStack\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n};\nvar decideprofile = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var user = auth.currentUser;\n    var patientsCollection = collection(db, \"patients\");\n    var therapistCollection = collection(db, \"therapist\");\n    var patientQuery = query(patientsCollection, where(\"email\", \"==\", user.email));\n    var patientQuerySnapshot = yield getDocs(patientQuery);\n    if (patientQuerySnapshot.docs && patientQuerySnapshot.docs.length > 0) {\n      console.log('User found in the \"patients\" collection');\n      return 0;\n    } else {\n      var therapistQuery = query(therapistCollection, where(\"email\", \"==\", user.email));\n      var therapistQuerySnapshot = yield getDocs(therapistQuery);\n      if (therapistQuerySnapshot.docs && therapistQuerySnapshot.docs.length > 0) {\n        console.log('User found in the \"therapists\" collection');\n        return 1;\n      } else {\n        console.log('User not found in both \"patients\" and \"therapists\" collections');\n      }\n    }\n  });\n  return function decideprofile() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar HomeTabNavigator = function HomeTabNavigator() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    userType = _useState2[0],\n    setUserType = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var result = yield decideprofile();\n          setUserType(result);\n        } catch (error) {\n          console.error('Error in HomeTabNavigator:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  if (userType == 0) {\n    return _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref3) {\n        var route = _ref3.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"md-home-outline\";\n            } else if (route.name === \"Diet\") {\n              iconName = \"fitness-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"person-circle-outline\";\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"white\",\n          tabBarInactiveTintColor: \"white\",\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackNavigator,\n        options: {\n          headerShown: false,\n          tabBarStyle: {\n            backgroundColor: 'green '\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Organizaitons\",\n        component: OrganizationListScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          headerShown: false,\n          headerTitleAlign: \"center\",\n          tabBarStyle: {\n            backgroundColor: '5f9ea0'\n          }\n        }\n      })]\n    });\n  } else if (userType == 1) {\n    return _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref5) {\n        var route = _ref5.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var focused = _ref6.focused,\n              color = _ref6.color,\n              size = _ref6.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"md-home-outline\";\n            } else if (route.name === \"Diet\") {\n              iconName = \"fitness-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"person-circle-outline\";\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"white\",\n          tabBarInactiveTintColor: \"white\",\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackNavigator,\n        options: {\n          headerShown: false,\n          tabBarStyle: {\n            backgroundColor: '#5f9ea0'\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Organizaitons\",\n        component: OrganizationListScreen\n      }), _jsx(Tab.Screen, {\n        name: \"DoctorProfile\",\n        component: DoctorProfileScreen,\n        options: {\n          headerShown: false,\n          headerTitleAlign: \"center\",\n          tabBarStyle: {\n            backgroundColor: '#5f9ea0'\n          }\n        }\n      })]\n    });\n  }\n};\nexport default HomeTabNavigator;","map":{"version":3,"names":["useEffect","useState","createBottomTabNavigator","createNativeStackNavigator","Ionicons","DietScreen","HomeScreen","ProfileScreen","DoctorProfileScreen","getAuth","createUserWithEmailAndPassword","firestore","getFirestore","doc","getDoc","addDoc","collection","query","where","getDocs","length","get","async","app","OrganizationListScreen","jsx","_jsx","jsxs","_jsxs","auth","db","Tab","Stack","user","currentUser","HomeStackNavigator","Navigator","children","Screen","name","component","options","headerShown","decideprofile","_ref","_asyncToGenerator","patientsCollection","therapistCollection","patientQuery","email","patientQuerySnapshot","docs","console","log","therapistQuery","therapistQuerySnapshot","apply","arguments","HomeTabNavigator","_useState","_useState2","_slicedToArray","userType","setUserType","fetchData","_ref2","result","error","screenOptions","_ref3","route","tabBarIcon","_ref4","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","headerTitleAlign","_ref5","_ref6"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/navigation/TabNavigator.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport DietScreen from \"../screens/DietScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport DoctorProfileScreen from \"../screens/DoctorProfileScreen\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  firestore,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  addDoc,\n  collection,\n  query,\n  where,\n  getDocs,\n  length,\n  get,\n  async,\n} from \"firebase/firestore\";\nimport app from \"../../firebase\";\nimport OrganizationListScreen from \"../screens/OrganizationListScreen\";\n\nconst auth = getAuth(app); // Initialize Firebase Authentication\nconst db = getFirestore();\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\nconst user = auth.currentUser;\n\nconst HomeStackNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"HomeStack\"\n        component={HomeScreen}\n        options={{ headerShown: false }}\n      />\n  \n    </Stack.Navigator>\n  );\n};\nconst decideprofile = async () => {\n  const user = auth.currentUser;\n  const patientsCollection = collection(db, \"patients\");\n  const therapistCollection = collection(db, \"therapist\"); // Corrected collection name\n    const patientQuery = query(patientsCollection, where(\"email\", \"==\", user.email));\n    const patientQuerySnapshot = await getDocs(patientQuery);\n    if (patientQuerySnapshot.docs && patientQuerySnapshot.docs.length > 0) {\n      // User found in the \"patients\" collection\n      console.log('User found in the \"patients\" collection');\n      return 0;\n    } else {\n      // User not found in the \"patients\" collection, check \"therapists\" collection\n      const therapistQuery = query(therapistCollection, where(\"email\", \"==\", user.email));\n      const therapistQuerySnapshot = await getDocs(therapistQuery);\n\n      if (therapistQuerySnapshot.docs && therapistQuerySnapshot.docs.length > 0) {\n        // User found in the \"therapists\" collection\n        console.log('User found in the \"therapists\" collection');\n        return 1;\n      } else {\n        // User not found in either collection\n        console.log('User not found in both \"patients\" and \"therapists\" collections');\n      }\n    }\n} \n\nconst HomeTabNavigator = () => {\n  const [userType, setUserType] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await decideprofile();\n        setUserType(result);\n      } catch (error) {\n        console.error('Error in HomeTabNavigator:', error);\n        // Handle the error as needed\n      }\n    };\n\n    fetchData();\n  }, []);\n  if(userType == 0){\n    return (\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n            iconName = \"md-home-outline\";\n            } else if (route.name === \"Diet\") {\n            iconName = \"fitness-outline\";\n            } else if (route.name === \"Profile\") {\n            iconName = \"person-circle-outline\";\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"white\",\n          tabBarInactiveTintColor: \"white\",\n          headerShown: false,\n        })}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeStackNavigator}\n          options={{ \n            headerShown: false, \n            tabBarStyle: {\n              backgroundColor: 'green ',\n            },\n          }}\n        />\n    \n        <Tab.Screen name=\"Organizaitons\" component={OrganizationListScreen} />\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          options={{\n            headerShown: false,\n            headerTitleAlign: \"center\",\n            tabBarStyle: {\n              backgroundColor: '5f9ea0',\n            },\n          }}\n        />\n\n      \n    </Tab.Navigator>\n    );\n  }else if(userType == 1){\n    return (\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n            iconName = \"md-home-outline\";\n            } else if (route.name === \"Diet\") {\n            iconName = \"fitness-outline\";\n            } else if (route.name === \"Profile\") {\n            iconName = \"person-circle-outline\";\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"white\",\n          tabBarInactiveTintColor: \"white\",\n          headerShown: false,\n        })}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeStackNavigator}\n          options={{ \n            headerShown: false,\n            tabBarStyle: {\n              backgroundColor: '#5f9ea0',\n            },\n          }}\n        />\n    \n        <Tab.Screen name=\"Organizaitons\" component={OrganizationListScreen} />\n        <Tab.Screen\n        name=\"DoctorProfile\"\n        component={DoctorProfileScreen}\n        options={{\n          headerShown: false,\n          headerTitleAlign: \"center\",\n          tabBarStyle: {\n            backgroundColor: '#5f9ea0',\n          },\n        }}\n      />\n    </Tab.Navigator>\n    )\n  }\n};\n\nexport default HomeTabNavigator;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}