{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button } from \"react-native-elements\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport app from \"../../firebase\";\nimport { getUserType } from \"./AuthHandler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate(\"HomeScreen\");\n      } else {\n        setLoading(false);\n      }\n    });\n    return unsubscribe;\n  }, [navigation]);\n  var navigateSignUp = function navigateSignUp() {\n    navigation.navigate(\"SignUpScreen\");\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        alert(\"Please enter both email and password.\");\n        return;\n      }\n      try {\n        yield signInWithEmailAndPassword(auth, email, password);\n        var user = auth.currentUser;\n        console.log(\"Logged in with\", user.email);\n        var userType = yield getUserType(user.uid);\n        someFunction(userType);\n        navigation.navigate(\"HomeScreen\");\n      } catch (error) {\n        alert(error.message);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function someFunction(userType) {\n    console.log('UserType in someFunction:', userType);\n  }\n  if (loading) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.greeting,\n        children: \"Welcome to Flexi Truck!\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        containerStyle: styles.button,\n        buttonStyle: styles.button,\n        onPress: handleLogin,\n        title: \"Login\",\n        titleStyle: styles.buttonText\n      }), _jsx(Button, {\n        containerStyle: styles.button,\n        buttonStyle: [styles.button, styles.buttonOutline],\n        onPress: navigateSignUp,\n        title: \"Register\",\n        titleStyle: styles.buttonOutlineText\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\"\n  },\n  inputContainer: {\n    width: \"70%\",\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1\n  },\n  buttonContainer: {\n    width: \"30%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonText: {\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  textContainer: {},\n  text: {}\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","TextInput","Button","getAuth","signInWithEmailAndPassword","app","getUserType","jsx","_jsx","jsxs","_jsxs","auth","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","unsubscribe","onAuthStateChanged","user","navigate","navigateSignUp","handleLogin","_ref2","_asyncToGenerator","alert","currentUser","console","log","userType","uid","someFunction","error","message","apply","arguments","style","styles","container","children","greeting","inputContainer","placeholder","input","value","onChangeText","text","secureTextEntry","buttonContainer","containerStyle","button","buttonStyle","onPress","title","titleStyle","buttonText","buttonOutline","buttonOutlineText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","width","marginBottom","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","color","textContainer"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, TextInput } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport app from \"../../firebase\";\nimport { getUserType } from \"./AuthHandler\"; // Import the getUserType function\n\nconst auth = getAuth(app); // Initialize Firebase Authentication\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        navigation.navigate(\"HomeScreen\");\n      } else {\n        setLoading(false);\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  const navigateSignUp = () => {\n    navigation.navigate(\"SignUpScreen\");\n  };\n\n  const handleLogin = async () => {\n    if (!email || !password) {\n      alert(\"Please enter both email and password.\");\n      return;\n    }\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      const user = auth.currentUser;\n      console.log(\"Logged in with\", user.email);\n\n      // Get the user type after successful login\n      const userType = await getUserType(user.uid);\n      someFunction(userType);\n\n      navigation.navigate(\"HomeScreen\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  // Define someFunction to use userType\n  function someFunction(userType) {\n    // Do something with userType\n    console.log('UserType in someFunction:', userType);\n  }\n\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.greeting}>Welcome to Flexi Truck!</Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          style={styles.input}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          style={styles.input}\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n      </View>\n      <View style={styles.buttonContainer}>\n        <Button\n          containerStyle={styles.button}\n          buttonStyle={styles.button}\n          onPress={handleLogin}\n          title=\"Login\"\n          titleStyle={styles.buttonText}\n        />\n        <Button\n          containerStyle={styles.button}\n          buttonStyle={[styles.button, styles.buttonOutline]}\n          onPress={navigateSignUp}\n          title=\"Register\"\n          titleStyle={styles.buttonOutlineText}\n        />\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n  },\n  inputContainer: {\n    width: \"70%\",\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n  },\n  buttonContainer: {\n    width: \"30%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonText: {\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n  textContainer: {},\n  text: {},\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}