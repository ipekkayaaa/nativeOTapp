{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\";\nimport { auth, firestore } from \"../../firebase\";\nimport { getDocs, collection } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialExercises = [{\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}];\nexport default function DoctorProfile(_ref) {\n  var _auth$currentUser;\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userList = _useState2[0],\n    setUserList = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    createWorkoutModalVisible = _useState4[0],\n    setCreateWorkoutModalVisible = _useState4[1];\n  var _useState5 = useState({\n      workoutName: \"\",\n      date: \"\",\n      exercises: initialExercises\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newWorkout = _useState6[0],\n    setNewWorkout = _useState6[1];\n  var createWorkout = function createWorkout() {\n    if (newWorkout.workoutName && newWorkout.date && selectedPatientId) {\n      var colRefworkout = collection(firestore, 'workoutPlan');\n      addDoc(colRefworkout, {\n        workoutName: newWorkout.workoutName,\n        workoutDate: newWorkout.date,\n        email: selectedPatientId,\n        exercises: newWorkout.exercises.map(function (exercise, index) {\n          return {\n            name: exercise.name,\n            reps: exercise.reps,\n            sets: exercise.sets,\n            key: `exercise${index + 1}`\n          };\n        })\n      }).then(function () {\n        console.log(\"Workout added successfully!\");\n        closeCreateWorkoutModal();\n      }).catch(function (error) {\n        console.error(\"Error adding workout: \", error);\n      });\n    } else {\n      console.warn(\"Incomplete workout data. Please fill in all required fields.\");\n    }\n  };\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    patientList = _useState8[0],\n    setPatientList = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedPatientId = _useState10[0],\n    setSelectedPatientId = _useState10[1];\n  useEffect(function () {\n    var fetchPatients = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var patientsCollection = collection(firestore, 'patients');\n          var snapshot = yield getDocs(patientsCollection);\n          var patientsData = snapshot.docs.map(function (doc) {\n            var _doc$data = doc.data(),\n              email = _doc$data.email,\n              firstName = _doc$data.firstName,\n              lastName = _doc$data.lastName,\n              medicalCondition = _doc$data.medicalCondition;\n            return {\n              id: doc.id,\n              name: `${firstName} ${lastName}`,\n              medicalCondition: medicalCondition,\n              email: email\n            };\n          });\n          setPatientList(patientsData);\n          snapshot.forEach(function (doc) {\n            var _doc$data2 = doc.data(),\n              firstName = _doc$data2.firstName,\n              lastName = _doc$data2.lastName;\n            var name = `${firstName} ${lastName}`;\n            console.log(\"Name: \", name);\n          });\n        } catch (error) {\n          console.error(\"Error getting patient documents: \", error);\n        }\n      });\n      return function fetchPatients() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchPatients();\n  }, []);\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    search = _useState12[0],\n    setSearch = _useState12[1];\n  var _useState13 = useState(patientList),\n    _useState14 = _slicedToArray(_useState13, 2),\n    filteredUserList = _useState14[0],\n    setFilteredUserList = _useState14[1];\n  useEffect(function () {\n    setFilteredUserList(patientList);\n  }, [patientList]);\n  var navigateToUserProfile = function navigateToUserProfile(user) {\n    navigation.navigate(\"ProfileScreen\", {\n      user: user\n    });\n  };\n  var searchFilterFunction = function searchFilterFunction(text) {\n    setSearch(text);\n    var newData = patientList.filter(function (item) {\n      var itemEmail = item.email.toUpperCase();\n      var searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n  var openCreateWorkoutModal = function openCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(true);\n  };\n  var closeCreateWorkoutModal = function closeCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Avatar, {\n        rounded: true,\n        size: 120,\n        icon: {\n          name: \"person\",\n          type: \"material\"\n        },\n        avatarStyle: styles.avatarStyle,\n        activeOpacity: 0.7\n      }), _jsx(Text, {\n        style: styles.emailText,\n        children: (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.changePictureButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Change Picture\",\n        onPress: function onPress() {\n          return console.log(\"Change this picture!\");\n        }\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.editProfileButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Edit Profile\",\n        onPress: function onPress() {\n          return navigation.navigate(\"EditProfileScreen\");\n        }\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.createWorkoutButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Workout\",\n        onPress: openCreateWorkoutModal\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.logOutButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Log Out\",\n        onPress: handleSignOut\n      })]\n    }), _jsx(SearchBar, {\n      round: true,\n      searchIcon: {\n        size: 26\n      },\n      containerStyle: styles.searchContainer,\n      inputContainerStyle: styles.searchInputContainer,\n      placeholder: \"Search user by email\",\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear() {\n        return searchFilterFunction(\"\");\n      },\n      value: search\n    }), _jsxs(View, {\n      style: styles.tableContainer,\n      children: [_jsxs(View, {\n        style: styles.tableRow,\n        children: [_jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"User Name\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Medical Condition\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Email Address\"\n        })]\n      }), _jsx(FlatList, {\n        data: filteredUserList,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsxs(TouchableOpacity, {\n            style: styles.tableRow,\n            onPress: function onPress() {\n              return navigateToUserProfile(item);\n            },\n            children: [_jsx(Text, {\n              style: styles.tableCell,\n              children: item.name\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: item.medicalCondition\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: item.email\n            })]\n          });\n        }\n      })]\n    }), _jsx(Modal, {\n      visible: createWorkoutModalVisible,\n      animationType: \"slide\",\n      transparent: true,\n      children: _jsx(ScrollView, {\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            children: \"Create Workout\"\n          }), _jsx(Input, {\n            placeholder: \"Workout Name\",\n            onChangeText: function onChangeText(text) {\n              return setNewWorkout(_objectSpread(_objectSpread({}, newWorkout), {}, {\n                workoutName: text\n              }));\n            },\n            value: newWorkout.workoutName\n          }), _jsxs(Picker, {\n            selectedValue: selectedPatientId,\n            onValueChange: function onValueChange(value) {\n              return setSelectedPatientId(value);\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"Select Patient\",\n              value: \"\"\n            }), patientList.map(function (patient) {\n              return _jsx(Picker.Item, {\n                label: patient.email,\n                value: patient.id\n              }, patient.id);\n            })]\n          }), _jsxs(View, {\n            style: styles.exercisesContainer,\n            children: [_jsxs(View, {\n              style: styles.exerciseContainer,\n              children: [_jsx(Text, {\n                style: styles.formSubtitle,\n                children: \"Exercise 1\"\n              }), _jsx(Input, {\n                name: \"exercise1\",\n                placeholder: \"Exercise Name\",\n                onChangeText: function onChangeText(text) {\n                  return setNewWorkout(function (prev) {\n                    var updatedExercises = _toConsumableArray(prev.exercises);\n                    updatedExercises[0].name = text;\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                value: newWorkout.exercises[0].name\n              }), _jsx(Text, {\n                children: \"Sets\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[0].sets,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[0].sets = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: i + 1\n                  }, i);\n                })\n              }), _jsx(Text, {\n                children: \"Reps\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[0].reps,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[0].reps = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: (i + 1).toString()\n                  }, i);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.exerciseContainer,\n              children: [_jsx(Text, {\n                style: styles.formSubtitle,\n                children: \"Exercise 2\"\n              }), _jsx(Input, {\n                name: \"exercise2\",\n                placeholder: \"Exercise Name\",\n                onChangeText: function onChangeText(text) {\n                  return setNewWorkout(function (prev) {\n                    var updatedExercises = _toConsumableArray(prev.exercises);\n                    updatedExercises[1].name = text;\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                value: newWorkout.exercises[1].name\n              }), _jsx(Text, {\n                children: \"Sets\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[1].sets,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[1].sets = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: i + 1\n                  }, i);\n                })\n              }), _jsx(Text, {\n                children: \"Reps\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[1].reps,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[1].reps = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: (i + 1).toString()\n                  }, i);\n                })\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.exercisesContainer,\n            children: [_jsxs(View, {\n              style: styles.exerciseContainer,\n              children: [_jsx(Text, {\n                style: styles.formSubtitle,\n                children: \"Exercise 3\"\n              }), _jsx(Input, {\n                name: \"exercise3\",\n                placeholder: \"Exercise Name\",\n                onChangeText: function onChangeText(text) {\n                  return setNewWorkout(function (prev) {\n                    var updatedExercises = _toConsumableArray(prev.exercises);\n                    updatedExercises[2].name = text;\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                value: newWorkout.exercises[2].name\n              }), _jsx(Text, {\n                children: \"Sets\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[2].sets,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[2].sets = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: i + 1\n                  }, i);\n                })\n              }), _jsx(Text, {\n                children: \"Reps\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[2].reps,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[2].reps = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: (i + 1).toString()\n                  }, i);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.exerciseContainer,\n              children: [_jsx(Text, {\n                style: styles.formSubtitle,\n                children: \"Exercise 4\"\n              }), _jsx(Input, {\n                name: \"exercise4\",\n                placeholder: \"Exercise Name\",\n                onChangeText: function onChangeText(text) {\n                  return setNewWorkout(function (prev) {\n                    var updatedExercises = _toConsumableArray(prev.exercises);\n                    updatedExercises[3].name = text;\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                value: newWorkout.exercises[3].name\n              }), _jsx(Text, {\n                children: \"Sets\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[3].sets,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[3].sets = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: i + 1\n                  }, i);\n                })\n              }), _jsx(Text, {\n                children: \"Reps\"\n              }), _jsx(Picker, {\n                selectedValue: newWorkout.exercises[3].reps,\n                onValueChange: function onValueChange(value) {\n                  return setNewWorkout(function (prevWorkout) {\n                    var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                    updatedExercises[3].reps = value;\n                    return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                      exercises: updatedExercises\n                    });\n                  });\n                },\n                children: Array.from({\n                  length: 20\n                }, function (_, i) {\n                  return _jsx(Picker.Item, {\n                    label: (i + 1).toString(),\n                    value: (i + 1).toString()\n                  }, i);\n                })\n              })]\n            })]\n          }), _jsx(Button, {\n            title: \"Submit Workout\",\n            onPress: createWorkout\n          }), _jsx(Button, {\n            title: \"Cancel\",\n            onPress: closeCreateWorkoutModal\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  avatarStyle: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#3498db\"\n  },\n  emailText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 10\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 20,\n    width: \"80%\"\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  buttonTitle: {\n    fontSize: 16\n  },\n  changePictureButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\"\n  },\n  editProfileButton: {\n    backgroundColor: \"#27ae60\",\n    borderColor: \"#27ae60\"\n  },\n  logOutButton: {\n    backgroundColor: \"#e74c3c\",\n    borderColor: \"#e74c3c\"\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 0,\n    borderTopWidth: 0\n  },\n  tableContainer: {\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    padding: 10\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    alignItems: \"center\"\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14\n  },\n  tableHeader: {\n    fontWeight: \"bold\"\n  },\n  addUserButton: {\n    backgroundColor: \"#ff7f50\",\n    borderColor: \"#ff7f50\"\n  },\n  formContainer: {\n    display: \"block\",\n    height: 600,\n    width: 700,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n    marginTop: 30\n  },\n  formTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#3498db\",\n    marginLeft: 250\n  },\n  createWorkoutButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n    marginTop: 20\n  },\n  formSubtitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    color: \"#2ecc71\"\n  },\n  setRepContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 10\n  },\n  setRepDropdown: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    marginHorizontal: 5,\n    borderRadius: 8,\n    overflow: \"hidden\"\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  scrollContainer: {\n    flexGrow: 1\n  },\n  exerciseContainer: {\n    width: '50%',\n    paddingHorizontal: 10\n  },\n  exercisesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  submitWorkout: {\n    marginTop: 20,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cancelWorkout: {\n    marginTop: 10,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  patientDropdown: {\n    height: 50,\n    width: \"80%\",\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","FlatList","Picker","Modal","ScrollView","StyleSheet","Avatar","Button","SearchBar","Input","auth","firestore","getDocs","collection","jsx","_jsx","jsxs","_jsxs","initialExercises","name","sets","reps","DoctorProfile","_ref","_auth$currentUser","navigation","_useState","_useState2","_slicedToArray","userList","setUserList","_useState3","_useState4","createWorkoutModalVisible","setCreateWorkoutModalVisible","_useState5","workoutName","date","exercises","_useState6","newWorkout","setNewWorkout","createWorkout","selectedPatientId","colRefworkout","addDoc","workoutDate","email","map","exercise","index","key","then","console","log","closeCreateWorkoutModal","catch","error","warn","_useState7","_useState8","patientList","setPatientList","_useState9","_useState10","setSelectedPatientId","fetchPatients","_ref2","_asyncToGenerator","patientsCollection","snapshot","patientsData","docs","doc","_doc$data","data","firstName","lastName","medicalCondition","id","forEach","_doc$data2","apply","arguments","_useState11","_useState12","search","setSearch","_useState13","_useState14","filteredUserList","setFilteredUserList","navigateToUserProfile","user","navigate","searchFilterFunction","text","newData","filter","item","itemEmail","toUpperCase","searchText","includes","openCreateWorkoutModal","style","styles","container","children","header","rounded","size","icon","type","avatarStyle","activeOpacity","emailText","currentUser","buttonsContainer","containerStyle","buttonContainer","buttonStyle","changePictureButton","titleStyle","buttonTitle","title","onPress","editProfileButton","createWorkoutButton","logOutButton","handleSignOut","round","searchIcon","searchContainer","inputContainerStyle","searchInputContainer","placeholder","onChangeText","onClear","value","tableContainer","tableRow","tableCell","tableHeader","keyExtractor","toString","renderItem","_ref3","visible","animationType","transparent","_objectSpread","selectedValue","onValueChange","Item","label","patient","exercisesContainer","exerciseContainer","formSubtitle","prev","updatedExercises","_toConsumableArray","prevWorkout","Array","from","length","_","i","create","flex","alignItems","backgroundColor","paddingTop","marginBottom","borderWidth","borderColor","fontSize","fontWeight","marginTop","flexDirection","justifyContent","width","borderBottomWidth","borderTopWidth","padding","addUserButton","formContainer","display","height","paddingHorizontal","formTitle","color","marginLeft","setRepContainer","setRepDropdown","marginHorizontal","borderRadius","overflow","modalContainer","scrollContainer","flexGrow","submitWorkout","cancelWorkout","patientDropdown"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/DoctorProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Picker,\n  Modal,\n  ScrollView,\n  StyleSheet,\n} from \"react-native\";\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\";\nimport { auth, firestore } from \"../../firebase\";\nimport { getDocs, collection } from \"firebase/firestore\";\n\nconst initialExercises = [\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n];\n\nexport default function DoctorProfile({ navigation }) {\n  const [userList, setUserList] = useState([]);\n\n  const [createWorkoutModalVisible, setCreateWorkoutModalVisible] = useState(false);\n\n  const [newWorkout, setNewWorkout] = useState({\n    workoutName: \"\",\n    date: \"\",\n    exercises: initialExercises,\n  });\n\n  const createWorkout = () => {\n    if (newWorkout.workoutName && newWorkout.date && selectedPatientId) {\n      const colRefworkout = collection(firestore, 'workoutPlan');\n      addDoc(colRefworkout, {\n        workoutName: newWorkout.workoutName,\n        workoutDate: newWorkout.date,\n        email: selectedPatientId,\n        exercises: newWorkout.exercises.map((exercise, index) => ({\n          name: exercise.name,\n          reps: exercise.reps,\n          sets: exercise.sets,\n          key: `exercise${index + 1}`, // Assign a unique key for each exercise\n        })),\n      })\n        .then(() => {\n          console.log(\"Workout added successfully!\");\n          closeCreateWorkoutModal();\n        })\n        .catch((error) => {\n          console.error(\"Error adding workout: \", error);\n        });\n    } else {\n      console.warn(\"Incomplete workout data. Please fill in all required fields.\");\n    }\n  };\n  \n\n  const [patientList, setPatientList] = useState([]);\n  const [selectedPatientId, setSelectedPatientId] = useState(\"\");\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const patientsCollection = collection(firestore, 'patients');\n        const snapshot = await getDocs(patientsCollection);\n        const patientsData = snapshot.docs.map((doc) => {\n          const { email, firstName, lastName, medicalCondition } = doc.data();\n          return { id: doc.id, name: `${firstName} ${lastName}`, medicalCondition, email };\n        });\n\n        setPatientList(patientsData);\n\n        snapshot.forEach((doc) => {\n          const { firstName, lastName } = doc.data();\n          const name = `${firstName} ${lastName}`;\n          console.log(\"Name: \", name);\n        });\n      } catch (error) {\n        console.error(\"Error getting patient documents: \", error);\n      }\n    };\n\n    fetchPatients();\n  }, []);\n\n  const [search, setSearch] = useState(\"\");\n  // const [filteredUserList, setFilteredUserList] = useState(userList);\n  const [filteredUserList, setFilteredUserList] = useState(patientList);\n\n  useEffect(() => {\n    setFilteredUserList(patientList);\n  }, [patientList]);\n  \n\n  const navigateToUserProfile = (user) => {\n    navigation.navigate(\"ProfileScreen\", { user });\n  };\n\n  const searchFilterFunction = (text) => {\n    setSearch(text);\n    const newData = patientList.filter((item) => {\n      const itemEmail = item.email.toUpperCase();\n      const searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n\n  const openCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(true);\n  };\n\n  const closeCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Avatar\n          rounded\n          size={120}\n          icon={{ name: \"person\", type: \"material\" }}\n          avatarStyle={styles.avatarStyle}\n          activeOpacity={0.7}\n        />\n        <Text style={styles.emailText}>{auth.currentUser?.email}</Text>\n      </View>\n\n      <View style={styles.buttonsContainer}>\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.changePictureButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Change Picture\"\n          onPress={() => console.log(\"Change this picture!\")}\n        />\n\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.editProfileButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Edit Profile\"\n          onPress={() => navigation.navigate(\"EditProfileScreen\")}\n        />\n\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.createWorkoutButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Workout\"\n          onPress={openCreateWorkoutModal}\n        />\n\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.logOutButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Log Out\"\n          onPress={handleSignOut}\n        />\n      </View>\n\n      <SearchBar\n        round\n        searchIcon={{ size: 26 }}\n        containerStyle={styles.searchContainer}\n        inputContainerStyle={styles.searchInputContainer}\n        placeholder=\"Search user by email\"\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={() => searchFilterFunction(\"\")}\n        value={search}\n      />\n      <View style={styles.tableContainer}>\n        <View style={styles.tableRow}>\n          <Text style={[styles.tableCell, styles.tableHeader]}>User Name</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>Medical Condition</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>Email Address</Text>\n        </View>\n        <FlatList\n          data={filteredUserList}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              style={styles.tableRow}\n              onPress={() => navigateToUserProfile(item)}\n            >\n              <Text style={styles.tableCell}>{item.name}</Text>\n              <Text style={styles.tableCell}>{item.medicalCondition}</Text>\n              <Text style={styles.tableCell}>{item.email}</Text>\n            </TouchableOpacity>\n          )}\n        />\n      </View>\n\n      <Modal\n        visible={createWorkoutModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n      >\n        <ScrollView>\n          <View>\n            <Text>Create Workout</Text>\n            <Input\n              placeholder=\"Workout Name\"\n              onChangeText={(text) => setNewWorkout({ ...newWorkout, workoutName: text })}\n              value={newWorkout.workoutName}\n            />\n            <Picker\n              selectedValue={selectedPatientId}\n              onValueChange={(value) => setSelectedPatientId(value)}\n            >\n              <Picker.Item label=\"Select Patient\" value=\"\" />\n              {patientList.map((patient) => (\n                <Picker.Item key={patient.id} label={patient.email} value={patient.id} />\n              ))}\n            </Picker>\n            <View style={styles.exercisesContainer}>\n                {/* Exercise 1 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 1</Text>\n                  <Input\n                    name=\"exercise1\"\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[0].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[0].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[0].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[0].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[0].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[0].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n\n                {/* Exercise 2 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 2</Text>\n                  <Input\n                    name=\"exercise2\"\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[1].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[1].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[1].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[1].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[1].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[1].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n              </View>\n\n              <View style={styles.exercisesContainer}>\n                {/* Exercise 3 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 3</Text>\n                  <Input\n                    name=\"exercise3\"\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[2].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[2].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[2].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[2].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[2].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[2].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n\n                {/* Exercise 4 */}\n                <View style={styles.exerciseContainer}>\n                  <Text style={styles.formSubtitle}>Exercise 4</Text>\n                  <Input\n                    name=\"exercise4\"\n                    placeholder=\"Exercise Name\"\n                    onChangeText={(text) =>\n                      setNewWorkout((prev) => {\n                        const updatedExercises = [...prev.exercises];\n                        updatedExercises[3].name = text;\n                        return { ...prev, exercises: updatedExercises };\n                      })\n                    }\n                    value={newWorkout.exercises[3].name}\n                  />\n\n                  <Text>Sets</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[3].sets}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[3].sets = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                    ))}\n                  </Picker>\n\n                  <Text>Reps</Text>\n                  <Picker\n                    selectedValue={newWorkout.exercises[3].reps}\n                    onValueChange={(value) =>\n                      setNewWorkout((prevWorkout) => {\n                        const updatedExercises = [...prevWorkout.exercises];\n                        updatedExercises[3].reps = value;\n                        return { ...prevWorkout, exercises: updatedExercises };\n                      })\n                    }\n                  >\n                    {Array.from({ length: 20 }, (_, i) => (\n                      <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                    ))}\n                  </Picker>\n                </View>\n              </View>\n            <Button\n              title=\"Submit Workout\"\n              onPress={createWorkout}\n            />\n            <Button\n              title=\"Cancel\"\n              onPress={closeCreateWorkoutModal}\n            />\n          </View>\n        </ScrollView>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20,\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  avatarStyle: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#3498db\",\n  },\n  emailText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 10,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 20,\n    width: \"80%\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n  buttonTitle: {\n    fontSize: 16,\n  },\n  changePictureButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n  },\n  editProfileButton: {\n    backgroundColor: \"#27ae60\",\n    borderColor: \"#27ae60\",\n  },\n  logOutButton: {\n    backgroundColor: \"#e74c3c\",\n    borderColor: \"#e74c3c\",\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10,\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 0,\n    borderTopWidth: 0,\n  },\n  tableContainer: {\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    padding: 10,\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    alignItems: \"center\",\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14,\n  },\n  tableHeader: {\n    fontWeight: \"bold\",\n  },\n  addUserButton: {\n    backgroundColor: \"#ff7f50\",\n    borderColor: \"#ff7f50\",\n  },\n  formContainer: {\n    display: \"block\",\n    height: 600,\n    width: 700,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n    marginTop: 30,\n  },\n  formTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#3498db\",\n    marginLeft: 250,\n  },\n  createWorkoutButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n    marginTop: 20,\n  },\n  formSubtitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    color: \"#2ecc71\",\n  },\n  setRepContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 10,\n  },\n  setRepDropdown: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    marginHorizontal: 5,\n    borderRadius: 8,\n    overflow: \"hidden\",\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n  },\n  exerciseContainer: {\n    width: '50%', // Two exercises side by side\n    paddingHorizontal: 10,\n  },\n  exercisesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  submitWorkout: {\n    marginTop: 20,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cancelWorkout: {\n    marginTop: 10,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  patientDropdown: {\n    height: 50,\n    width: \"80%\",\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}