{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from \"react-native-elements\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { firestore } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DoctorFormScreen = function DoctorFormScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState({\n      firstName: \"\",\n      lastName: \"\",\n      birthday: \"\",\n      phoneNumber: \"\",\n      organization: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    values = _useState2[0],\n    setValues = _useState2[1];\n  var handleSaveForm = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var colRefTherapist = collection(firestore, 'therapist');\n      try {\n        yield addDoc(colRefTherapist, _objectSpread({}, values));\n        console.log(\"Doctor data added successfully!\");\n        navigation.navigate('LoginScreen');\n      } catch (error) {\n        console.error(\"Error adding doctor data: \", error);\n      }\n    });\n    return function handleSaveForm() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"First Name\",\n      style: styles.input,\n      value: values.firstName,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          firstName: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Last Name\",\n      style: styles.input,\n      value: values.lastName,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          lastName: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Birthday\",\n      style: styles.input,\n      value: values.birthday,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          birthday: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Phone Number\",\n      style: styles.input,\n      value: values.phoneNumber,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          phoneNumber: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Organization\",\n      style: styles.input,\n      value: values.organization,\n      onChangeText: function onChangeText(text) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          organization: text\n        }));\n      }\n    }), _jsx(Button, {\n      containerStyle: styles.button,\n      buttonStyle: [styles.button, styles.buttonOutline],\n      onPress: handleSaveForm,\n      title: \"Submit Registration\",\n      titleStyle: styles.buttonOutlineText\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n    width: \"80%\"\n  },\n  button: {\n    width: \"80%\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  }\n});\nexport default DoctorFormScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Text","StyleSheet","Button","addDoc","collection","firestore","jsx","_jsx","jsxs","_jsxs","DoctorFormScreen","_ref","navigation","route","_useState","firstName","lastName","birthday","phoneNumber","organization","_useState2","_slicedToArray","values","setValues","handleSaveForm","_ref2","_asyncToGenerator","colRefTherapist","_objectSpread","console","log","navigate","error","apply","arguments","style","styles","container","children","placeholder","input","value","onChangeText","text","containerStyle","button","buttonStyle","buttonOutline","onPress","title","titleStyle","buttonOutlineText","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","width","color","fontSize","fontWeight"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/components/screens/DoctorFormScreen.js"],"sourcesContent":["// DoctorFormScreen.js\nimport React, { useState } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { firestore } from \"../../firebase\";\n\nconst DoctorFormScreen = ({ navigation, route }) => {\n  const [values, setValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    birthday: \"\",\n    phoneNumber: \"\",\n    organization: \"\",\n  });\n\n  const handleSaveForm = async () => {\n    const colRefTherapist = collection(firestore, 'therapist');\n\n    try {\n      await addDoc(colRefTherapist, {\n        ...values,\n      });\n\n      console.log(\"Doctor data added successfully!\");\n      navigation.navigate('LoginScreen');\n    } catch (error) {\n      console.error(\"Error adding doctor data: \", error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        placeholder=\"First Name\"\n        style={styles.input}\n        value={values.firstName}\n        onChangeText={(text) => setValues({ ...values, firstName: text })}\n      />\n      <TextInput\n        placeholder=\"Last Name\"\n        style={styles.input}\n        value={values.lastName}\n        onChangeText={(text) => setValues({ ...values, lastName: text })}\n      />\n      <TextInput\n        placeholder=\"Birthday\"\n        style={styles.input}\n        value={values.birthday}\n        onChangeText={(text) => setValues({ ...values, birthday: text })}\n      />\n      <TextInput\n        placeholder=\"Phone Number\"\n        style={styles.input}\n        value={values.phoneNumber}\n        onChangeText={(text) => setValues({ ...values, phoneNumber: text })}\n      />\n      <TextInput\n        placeholder=\"Organization\"\n        style={styles.input}\n        value={values.organization}\n        onChangeText={(text) => setValues({ ...values, organization: text })}\n      />\n\n      <Button\n        containerStyle={styles.button}\n        buttonStyle={[styles.button, styles.buttonOutline]}\n        onPress={handleSaveForm}\n        title=\"Submit Registration\"\n        titleStyle={styles.buttonOutlineText}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n    width: \"80%\", // Adjust the width as needed\n  },\n  button: {\n    width: \"80%\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n});\n\nexport default DoctorFormScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}