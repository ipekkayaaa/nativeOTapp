{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignInScreen = function SignInScreen() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      email: \"\",\n      password: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    values = _useState2[0],\n    setValues = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loginStatus = _useState4[0],\n    setLoginStatus = _useState4[1];\n  var handleSubmit = function handleSubmit() {\n    setTimeout(function () {\n      var loginSuccess = true;\n      if (loginSuccess) {\n        setLoginStatus(\"Login Successful\");\n        navigation.navigate(\"Home\");\n      } else {\n        setLoginStatus(\"Email or password is incorrect\");\n      }\n    }, 1000);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Sign In\"\n      }), loginStatus && _jsx(Text, {\n        style: styles.error,\n        children: loginStatus\n      })]\n    })\n  });\n};\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","useNavigation","jsx","_jsx","jsxs","_jsxs","SignInScreen","navigation","_useState","email","password","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","loginStatus","setLoginStatus","handleSubmit","setTimeout","loginSuccess","navigate","View","style","styles","container","children","form","Text","heading","error"],"sources":["/Users/danle/Documents/GitHub/nativeOTapp/src/Screens/SignInScreen.js"],"sourcesContent":["import { View, Text } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst SignInScreen = () => {\n  const navigation = useNavigation(); // Declare navigation variable here\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleSubmit = () => {\n    // Simulating API request using Axios\n    // Replace this with your actual API call using fetch, Axios, etc.\n    setTimeout(() => {\n      const loginSuccess = true; // Simulated successful login\n      if (loginSuccess) {\n        setLoginStatus(\"Login Successful\");\n        navigation.navigate(\"Home\"); // Navigate to the 'Home' screen\n      } else {\n        setLoginStatus(\"Email or password is incorrect\");\n      }\n    }, 1000); // Simulate a delay for an API call\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text style={styles.heading}>Sign In</Text>\n        {loginStatus && <Text style={styles.error}>{loginStatus}</Text>}\n        {/* Rest of your JSX */}\n      </View>\n    </View>\n  );\n};\n\n// Your styles\n\nexport default SignInScreen;\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAElC,IAAAO,SAAA,GAA4BR,QAAQ,CAAC;MACnCS,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAHKK,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAKxB,IAAAI,UAAA,GAAsCf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAGzBC,UAAU,CAAC,YAAM;MACf,IAAMC,YAAY,GAAG,IAAI;MACzB,IAAIA,YAAY,EAAE;QAChBH,cAAc,CAAC,kBAAkB,CAAC;QAClCX,UAAU,CAACe,QAAQ,CAAC,MAAM,CAAC;MAC7B,CAAC,MAAM;QACLJ,cAAc,CAAC,gCAAgC,CAAC;MAClD;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,OACEf,IAAA,CAACoB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BtB,KAAA,CAACkB,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACG,IAAK;MAAAD,QAAA,GACvBxB,IAAA,CAAC0B,IAAI;QAACL,KAAK,EAAEC,MAAM,CAACK,OAAQ;QAAAH,QAAA,EAAC;MAAO,CAAM,CAAC,EAC1CV,WAAW,IAAId,IAAA,CAAC0B,IAAI;QAACL,KAAK,EAAEC,MAAM,CAACM,KAAM;QAAAJ,QAAA,EAAEV;MAAW,CAAO,CAAC;IAAA,CAE3D;EAAC,CACH,CAAC;AAEX,CAAC;AAID,eAAeX,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}