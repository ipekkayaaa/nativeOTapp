{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\nimport { query, where } from 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDtkmG9Z7HWCfGHjM8omgVA_LCNemv5wmQ\",\n  authDomain: \"infx490-d9876.firebaseapp.com\",\n  databaseURL: \"https://infx490-d9876-default-rtdb.firebaseio.com\",\n  projectId: \"infx490-d9876\",\n  storageBucket: \"infx490-d9876.appspot.com\",\n  messagingSenderId: \"602189178002\",\n  appId: \"1:602189178002:web:5d56c140f3ef5a8acef24b\",\n  measurementId: \"G-MNNEM90NZC\"\n};\nvar app = initializeApp(firebaseConfig);\nvar firestore = getFirestore(app);\nvar auth = getAuth(app);\nvar db = getDatabase(app);\nvar userId = 'yourUserId';\nvar colUser = collection(firestore, 'signUp');\nvar userQuery = query(colUser, where('userId', '==', userId));\ngetDocs(userQuery).then(function (snapshot) {\n  snapshot.forEach(function (doc) {\n    var userType = doc.data().userType;\n    console.log('UserType:', userType);\n  });\n}).catch(function (error) {\n  console.error('Error getting documents: ', error);\n});\nexport { auth, db, firestore };","map":{"version":3,"names":["initializeApp","getAuth","getDatabase","getFirestore","collection","getDocs","addDoc","query","where","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firestore","auth","db","userId","colUser","userQuery","then","snapshot","forEach","doc","userType","data","console","log","catch","error"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/firebase.js"],"sourcesContent":["// for verison 10.5.2\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\nimport { query, where } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDtkmG9Z7HWCfGHjM8omgVA_LCNemv5wmQ\",\n  authDomain: \"infx490-d9876.firebaseapp.com\",\n  databaseURL: \"https://infx490-d9876-default-rtdb.firebaseio.com\",\n  projectId: \"infx490-d9876\",\n  storageBucket: \"infx490-d9876.appspot.com\",\n  messagingSenderId: \"602189178002\",\n  appId: \"1:602189178002:web:5d56c140f3ef5a8acef24b\",\n  measurementId: \"G-MNNEM90NZC\",\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firestore = getFirestore(app); // Use getFirestore to get the Firestore instance\n\nconst auth = getAuth(app);\nconst db = getDatabase(app);\n\n// this is how we get the data do not delete this we can delete it later.\n// get collection\n// const colRef = collection(firestore, 'patients'); \n\n// getDocs(colRef)\n//   .then((snapshot) =>  {\n//     snapshot.forEach((doc) => {\n//       console.log(doc.id, \" => \", doc.data());\n//     });\n//   })\n//   .catch((error) => {\n//     console.error(\"Error getting documents: \", error);\n//   });\n\n\n// const colUser = collection(firestore, 'signUp');\n\n// getDocs(colUser)\n//   .then((snapshot) => {\n//     snapshot.forEach((doc) => {\n//       console.log(doc.id, \" +> \", doc.data());\n//     });\n//   })\n//   .catch((error) => {\n//     console.error(\"Error getting documents: \", error);\n//   });\n\n\n\n \n\n// Assuming userId is the unique identifier you want to use\nconst userId = 'yourUserId';\n\n// Create a reference to the 'signUp' collection\nconst colUser = collection(firestore, 'signUp');\n\n// Create a query that filters documents based on the userId\nconst userQuery = query(colUser, where('userId', '==', userId));\n\n// Execute the query\ngetDocs(userQuery)\n  .then((snapshot) => {\n    snapshot.forEach((doc) => {\n      // Access the userType from the document data\n      const userType = doc.data().userType;\n      console.log('UserType:', userType);\n    });\n  })\n  .catch((error) => {\n    console.error('Error getting documents: ', error);\n  });\n\n\n\n\n// // get collection\n// const colRefworkout = collection(firestore, 'workoutPlan'); \n\n// getDocs(colRefworkout)\n//   .then((snapshot) =>  {\n//     snapshot.forEach((doc) => {\n//       console.log(doc.id, \" => \", doc.data());\n//     });\n//   })\n//   .catch((error) => {\n//     console.error(\"Error getting documents: \", error);\n//   });\n\n\n\nexport { auth, db, firestore };\n\n\n\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,YAAY,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AAC9E,SAASC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAGjD,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,WAAW,EAAE,mDAAmD;EAChEC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,2BAA2B;EAC1CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,IAAMC,GAAG,GAAGlB,aAAa,CAACS,cAAc,CAAC;AACzC,IAAMU,SAAS,GAAGhB,YAAY,CAACe,GAAG,CAAC;AAEnC,IAAME,IAAI,GAAGnB,OAAO,CAACiB,GAAG,CAAC;AACzB,IAAMG,EAAE,GAAGnB,WAAW,CAACgB,GAAG,CAAC;AAkC3B,IAAMI,MAAM,GAAG,YAAY;AAG3B,IAAMC,OAAO,GAAGnB,UAAU,CAACe,SAAS,EAAE,QAAQ,CAAC;AAG/C,IAAMK,SAAS,GAAGjB,KAAK,CAACgB,OAAO,EAAEf,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEc,MAAM,CAAC,CAAC;AAG/DjB,OAAO,CAACmB,SAAS,CAAC,CACfC,IAAI,CAAC,UAACC,QAAQ,EAAK;EAClBA,QAAQ,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;IAExB,IAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAACD,QAAQ;IACpCE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC,CACDI,KAAK,CAAC,UAACC,KAAK,EAAK;EAChBH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;AACnD,CAAC,CAAC;AAoBJ,SAASd,IAAI,EAAEC,EAAE,EAAEF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}