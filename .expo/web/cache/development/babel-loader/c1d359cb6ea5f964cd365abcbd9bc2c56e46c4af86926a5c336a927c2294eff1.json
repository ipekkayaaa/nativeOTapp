{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SearchBar } from \"react-native-elements\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { firestore } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function OrganizationListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredDataSource = _useState4[0],\n    setFilteredDataSource = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    organizationList = _useState6[0],\n    setOrganizationList = _useState6[1];\n  useEffect(function () {\n    var fetchOrganizations = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var organizationCollection = collection(firestore, \"organizations\");\n          var snapshot = yield getDocs(organizationCollection);\n          var organizationData = snapshot.docs.map(function (doc) {\n            var _doc$data = doc.data(),\n              organizationName = _doc$data.organizationName,\n              city = _doc$data.city,\n              state = _doc$data.state,\n              phoneNumber = _doc$data.phoneNumber;\n            return {\n              id: doc.id,\n              organizationName: organizationName,\n              city: city,\n              state: state,\n              phoneNumber: phoneNumber\n            };\n          });\n          setOrganizationList(organizationData);\n          setFilteredDataSource(organizationData);\n        } catch (error) {\n          console.error(\"Error getting organizations: \", error);\n        }\n      });\n      return function fetchOrganizations() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchOrganizations();\n  }, []);\n  var handleOrganizationPress = function handleOrganizationPress(organizationId) {\n    navigation.navigate(\"OrganizationInfoScreen\", {\n      organizationId: organizationId\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      style: styles.textHeader,\n      children: \"Organizations\"\n    }), _jsx(SearchBar, {\n      round: true,\n      searchIcon: {\n        size: 26\n      },\n      containerStyle: styles.searchContainer,\n      inputContainerStyle: styles.searchInputContainer,\n      placeholder: \"Search organization by name\",\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear() {\n        return searchFilterFunction(\"\");\n      },\n      value: search\n    }), _jsxs(View, {\n      style: styles.tableContainer,\n      children: [_jsxs(View, {\n        style: styles.tableRow,\n        children: [_jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Organization Name\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"City\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"State\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Phone Number\"\n        })]\n      }), filteredDataSource.map(function (rowData) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleOrganizationPress(rowData.id);\n          },\n          style: styles.link,\n          children: _jsxs(View, {\n            style: styles.tableRow,\n            children: [_jsx(Text, {\n              style: [styles.tableCell, styles.linkTitle],\n              children: rowData.organizationName\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: rowData.city\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: rowData.state\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: rowData.phoneNumber\n            })]\n          })\n        }, rowData.id);\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#F4F4F4\",\n    paddingTop: 20\n  },\n  textHeader: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#333333\",\n    marginBottom: 10\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10\n  },\n  tableContainer: {\n    backgroundColor: \"#FFFFFF\",\n    width: \"80%\",\n    padding: 10,\n    borderRadius: 10,\n    elevation: 5\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#CCCCCC\",\n    alignItems: \"center\",\n    marginVertical: 10\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14,\n    color: \"#333333\"\n  },\n  tableHeader: {\n    fontWeight: \"bold\",\n    color: \"#333333\"\n  },\n  link: {},\n  linkTitle: {\n    fontSize: 16,\n    color: \"#2196F3\",\n    textDecorationLine: \"underline\"\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    height: 40,\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","TouchableOpacity","ScrollView","SearchBar","collection","getDocs","firestore","jsx","_jsx","jsxs","_jsxs","OrganizationListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","filteredDataSource","setFilteredDataSource","_useState5","_useState6","organizationList","setOrganizationList","fetchOrganizations","_ref2","_asyncToGenerator","organizationCollection","snapshot","organizationData","docs","map","doc","_doc$data","data","organizationName","city","state","phoneNumber","id","error","console","apply","arguments","handleOrganizationPress","organizationId","navigate","contentContainerStyle","styles","container","children","style","textHeader","round","searchIcon","size","containerStyle","searchContainer","inputContainerStyle","searchInputContainer","placeholder","onChangeText","text","searchFilterFunction","onClear","value","tableContainer","tableRow","tableCell","tableHeader","rowData","onPress","link","linkTitle","create","flex","alignItems","backgroundColor","paddingTop","fontSize","fontWeight","color","marginBottom","width","padding","borderRadius","elevation","flexDirection","borderBottomWidth","borderColor","marginVertical","textDecorationLine","height"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/OrganizationListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text, TouchableOpacity, ScrollView } from \"react-native\";\nimport { SearchBar } from \"react-native-elements\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { firestore } from \"../../firebase\";\n\n\nexport default function OrganizationListScreen({ navigation }) {\n  const [search, setSearch] = useState(\"\");\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\n  const [organizationList, setOrganizationList] = useState([]);\n\n  useEffect(() => {\n    const fetchOrganizations = async () => {\n      try {\n        const organizationCollection = collection(firestore, \"organizations\");\n        const snapshot = await getDocs(organizationCollection);\n        const organizationData = snapshot.docs.map((doc) => {\n          const {\n            organizationName,\n            city,\n            state,\n            phoneNumber,\n          } = doc.data();\n          return {\n            id: doc.id,\n            organizationName,\n            city,\n            state,\n            phoneNumber,\n          };\n        });\n\n        setOrganizationList(organizationData);\n        setFilteredDataSource(organizationData);\n      } catch (error) {\n        console.error(\"Error getting organizations: \", error);\n      }\n    };\n\n    fetchOrganizations();\n  }, []);\n\n  const handleOrganizationPress = (organizationId) => {\n    navigation.navigate(\"OrganizationInfoScreen\", { organizationId });\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.textHeader}>Organizations</Text>\n      <SearchBar\n        round\n        searchIcon={{ size: 26 }}\n        containerStyle={styles.searchContainer}\n        inputContainerStyle={styles.searchInputContainer}\n        placeholder=\"Search organization by name\"\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={() => searchFilterFunction(\"\")}\n        value={search}\n      />\n      <View style={styles.tableContainer}>\n        <View style={styles.tableRow}>\n          <Text style={[styles.tableCell, styles.tableHeader]}>\n            Organization Name\n          </Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>City</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>State</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>\n            Phone Number\n          </Text>\n        </View>\n        {filteredDataSource.map((rowData) => (\n          <TouchableOpacity\n            key={rowData.id}\n            onPress={() => handleOrganizationPress(rowData.id)}\n            style={styles.link}\n          >\n            <View style={styles.tableRow}>\n              <Text style={[styles.tableCell, styles.linkTitle]}>\n                {rowData.organizationName}\n              </Text>\n              <Text style={styles.tableCell}>{rowData.city}</Text>\n              <Text style={styles.tableCell}>{rowData.state}</Text>\n              <Text style={styles.tableCell}>{rowData.phoneNumber}</Text>\n            </View>\n          </TouchableOpacity>\n        ))}\n      </View>\n    </ScrollView>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#F4F4F4\",\n    paddingTop: 20,\n  },\n  textHeader: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#333333\",\n    marginBottom: 10,\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10,\n  },\n  tableContainer: {\n    backgroundColor: \"#FFFFFF\",\n    width: \"80%\",\n    padding: 10,\n    borderRadius: 10,\n    elevation: 5,\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#CCCCCC\",\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14,\n    color: \"#333333\",\n  },\n  tableHeader: {\n    fontWeight: \"bold\",\n    color: \"#333333\",\n  },\n  link: {\n    // Add styles for the link if needed\n  },\n  linkTitle: {\n    fontSize: 16,\n    color: \"#2196F3\",\n    textDecorationLine: \"underline\",\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    height: 40,\n    marginBottom: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}