{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\";\nimport { auth } from \"../../firebase\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DoctorProfile(_ref) {\n  var _auth$currentUser;\n  var navigation = _ref.navigation;\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.navigate(\"LoginScreen\");\n    }).catch(function (err) {\n      return alert(err.message);\n    });\n  };\n  var _useState = useState([{\n      id: 1,\n      name: 'User 1',\n      medicalCondition: 'Condition 1',\n      email: 'user1@example.com'\n    }, {\n      id: 2,\n      name: 'User 2',\n      medicalCondition: 'Condition 2',\n      email: 'user2@example.com'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userList = _useState2[0],\n    setUserList = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    search = _useState4[0],\n    setSearch = _useState4[1];\n  var _useState5 = useState(userList),\n    _useState6 = _slicedToArray(_useState5, 2),\n    filteredUserList = _useState6[0],\n    setFilteredUserList = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddUserModalVisible = _useState8[0],\n    setAddUserModalVisible = _useState8[1];\n  var _useState9 = useState({\n      name: \"\",\n      medicalCondition: \"\",\n      email: \"\"\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    newUser = _useState10[0],\n    setNewUser = _useState10[1];\n  var openAddUserModal = function openAddUserModal() {\n    setAddUserModalVisible(true);\n  };\n  var closeAddUserModal = function closeAddUserModal() {\n    setAddUserModalVisible(false);\n  };\n  var addUser = function addUser() {\n    if (newUser.name && newUser.medicalCondition && newUser.email) {\n      setUserList([].concat(_toConsumableArray(userList), [newUser]));\n      closeAddUserModal();\n    }\n  };\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isCreateWorkoutModalVisible = _useState12[0],\n    setCreateWorkoutModalVisible = _useState12[1];\n  var _useState13 = useState({\n      workoutName: \"\",\n      date: \"\",\n      exercises: [{\n        name: \"\",\n        sets: \"\",\n        reps: \"\"\n      }, {\n        name: \"\",\n        sets: \"\",\n        reps: \"\"\n      }, {\n        name: \"\",\n        sets: \"\",\n        reps: \"\"\n      }, {\n        name: \"\",\n        sets: \"\",\n        reps: \"\"\n      }, {\n        name: \"\",\n        sets: \"\",\n        reps: \"\"\n      }]\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    newWorkout = _useState14[0],\n    setNewWorkout = _useState14[1];\n  var openCreateWorkoutModal = function openCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(true);\n  };\n  var closeCreateWorkoutModal = function closeCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(false);\n  };\n  var createWorkout = function createWorkout() {\n    if (newWorkout.workoutName && newWorkout.date) {\n      console.log(\"New Workout:\", newWorkout);\n      closeCreateWorkoutModal();\n    }\n  };\n  useEffect(function () {\n    searchFilterFunction(search);\n  }, [search]);\n  var navigateToUserProfile = function navigateToUserProfile(user) {\n    navigation.navigate(\"ProfileScreen\", {\n      user: user\n    });\n  };\n  var searchFilterFunction = function searchFilterFunction(text) {\n    setSearch(text);\n    var newData = userList.filter(function (item) {\n      var itemEmail = item.email.toUpperCase();\n      var searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Avatar, {\n        rounded: true,\n        size: 120,\n        icon: {\n          name: \"person\",\n          type: \"material\"\n        },\n        avatarStyle: styles.avatarStyle,\n        activeOpacity: 0.7\n      }), _jsx(Text, {\n        style: styles.emailText,\n        children: (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.changePictureButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Change Picture\",\n        onPress: function onPress() {\n          return console.log(\"Change this picture!\");\n        }\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.editProfileButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Edit Profile\",\n        onPress: function onPress() {\n          return navigation.navigate(\"EditProfileScreen\");\n        }\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.addUserButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Add User\",\n        onPress: openAddUserModal\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.createWorkoutButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Create Workout\",\n        onPress: openCreateWorkoutModal\n      }), _jsx(Button, {\n        type: \"solid\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.logOutButton,\n        titleStyle: styles.buttonTitle,\n        title: \"Log Out\",\n        onPress: handleSignOut\n      })]\n    }), _jsx(SearchBar, {\n      round: true,\n      searchIcon: {\n        size: 26\n      },\n      containerStyle: styles.searchContainer,\n      inputContainerStyle: styles.searchInputContainer,\n      placeholder: \"Search user by email\",\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear() {\n        return searchFilterFunction(\"\");\n      },\n      value: search\n    }), _jsxs(View, {\n      style: styles.tableContainer,\n      children: [_jsxs(View, {\n        style: styles.tableRow,\n        children: [_jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"User Name\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Medical Condition\"\n        }), _jsx(Text, {\n          style: [styles.tableCell, styles.tableHeader],\n          children: \"Email Address\"\n        })]\n      }), _jsx(FlatList, {\n        data: filteredUserList,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(TouchableOpacity, {\n            style: styles.tableRow,\n            onPress: function onPress() {\n              return navigateToUserProfile(item);\n            },\n            children: [_jsx(Text, {\n              style: styles.tableCell,\n              children: item.name\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: item.medicalCondition\n            }), _jsx(Text, {\n              style: styles.tableCell,\n              children: item.email\n            })]\n          });\n        }\n      })]\n    }), _jsx(Modal, {\n      visible: isAddUserModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          style: styles.formTitle,\n          children: \"Add User\"\n        }), _jsx(Input, {\n          placeholder: \"Name\",\n          onChangeText: function onChangeText(text) {\n            return setNewUser(_objectSpread(_objectSpread({}, newUser), {}, {\n              name: text\n            }));\n          },\n          value: newUser.name\n        }), _jsx(Input, {\n          placeholder: \"Medical Condition\",\n          onChangeText: function onChangeText(text) {\n            return setNewUser(_objectSpread(_objectSpread({}, newUser), {}, {\n              medicalCondition: text\n            }));\n          },\n          value: newUser.medicalCondition\n        }), _jsx(Input, {\n          placeholder: \"Email\",\n          onChangeText: function onChangeText(text) {\n            return setNewUser(_objectSpread(_objectSpread({}, newUser), {}, {\n              email: text\n            }));\n          },\n          value: newUser.email\n        }), _jsx(Button, {\n          title: \"Add User\",\n          onPress: addUser\n        }), _jsx(Button, {\n          title: \"Cancel\",\n          onPress: closeAddUserModal\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: isCreateWorkoutModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          style: styles.formTitle,\n          children: \"Create Workout\"\n        }), _jsx(Input, {\n          placeholder: \"Workout Name\",\n          onChangeText: function onChangeText(text) {\n            return setNewWorkout(_objectSpread(_objectSpread({}, newWorkout), {}, {\n              workoutName: text\n            }));\n          },\n          value: newWorkout.workoutName\n        }), _jsx(Input, {\n          placeholder: \"Date\",\n          onChangeText: function onChangeText(text) {\n            return setNewWorkout(_objectSpread(_objectSpread({}, newWorkout), {}, {\n              date: text\n            }));\n          },\n          value: newWorkout.date\n        }), newWorkout.exercises.map(function (exercise, index) {\n          return _jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.formSubtitle,\n              children: `Exercise ${index + 1}`\n            }), _jsx(Input, {\n              placeholder: \"Exercise Name\",\n              onChangeText: function onChangeText(text) {\n                return setNewWorkout(function (prev) {\n                  var updatedExercises = _toConsumableArray(prev.exercises);\n                  updatedExercises[index].name = text;\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              value: exercise.name\n            }), _jsx(Text, {\n              children: \"Sets\"\n            }), _jsx(Picker, {\n              selectedValue: exercise.sets,\n              onValueChange: function onValueChange(value) {\n                return setNewWorkout(function (prevWorkout) {\n                  var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                  updatedExercises[index].sets = value;\n                  return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              children: Array.from({\n                length: 20\n              }, function (_, i) {\n                return _jsx(Picker.Item, {\n                  label: (i + 1).toString(),\n                  value: i + 1\n                }, i);\n              })\n            }), _jsx(Text, {\n              children: \"Reps\"\n            }), _jsx(Picker, {\n              selectedValue: exercise.reps,\n              onValueChange: function onValueChange(value) {\n                return setNewWorkout(function (prevWorkout) {\n                  var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                  updatedExercises[index].reps = value;\n                  return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              children: Array.from({\n                length: 20\n              }, function (_, i) {\n                return _jsx(Picker.Item, {\n                  label: (i + 1).toString(),\n                  value: (i + 1).toString()\n                }, i);\n              })\n            })]\n          }, index);\n        }), _jsx(Button, {\n          title: \"Add Exercise\",\n          onPress: function onPress() {}\n        }), _jsx(Button, {\n          title: \"Create Workout\",\n          onPress: createWorkout\n        }), _jsx(Button, {\n          title: \"Cancel\",\n          onPress: closeCreateWorkoutModal\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  avatarStyle: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#3498db\"\n  },\n  emailText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 10\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 20,\n    width: \"80%\"\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  buttonTitle: {\n    fontSize: 16\n  },\n  changePictureButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\"\n  },\n  editProfileButton: {\n    backgroundColor: \"#27ae60\",\n    borderColor: \"#27ae60\"\n  },\n  logOutButton: {\n    backgroundColor: \"#e74c3c\",\n    borderColor: \"#e74c3c\"\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 0,\n    borderTopWidth: 0\n  },\n  tableContainer: {\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    padding: 10\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    alignItems: \"center\"\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14\n  },\n  tableHeader: {\n    fontWeight: \"bold\"\n  },\n  addUserButton: {\n    backgroundColor: \"#ff7f50\",\n    borderColor: \"#ff7f50\"\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  formTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  createWorkoutButton: {\n    backgroundColor: \"#ffa07a\",\n    borderColor: \"#ffa07a\"\n  },\n  formSubtitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginTop: 10\n  },\n  setRepContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  setRepDropdown: {},\n  exerciseContainer: {\n    marginBottom: 20\n  },\n  exerciseTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  exerciseInput: {\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","TouchableOpacity","FlatList","Picker","Modal","Avatar","Button","SearchBar","Input","auth","ProfileScreen","jsx","_jsx","jsxs","_jsxs","DoctorProfile","_ref","_auth$currentUser","navigation","handleSignOut","signOut","then","navigate","catch","err","alert","message","_useState","id","name","medicalCondition","email","_useState2","_slicedToArray","userList","setUserList","_useState3","_useState4","search","setSearch","_useState5","_useState6","filteredUserList","setFilteredUserList","_useState7","_useState8","isAddUserModalVisible","setAddUserModalVisible","_useState9","_useState10","newUser","setNewUser","openAddUserModal","closeAddUserModal","addUser","concat","_toConsumableArray","_useState11","_useState12","isCreateWorkoutModalVisible","setCreateWorkoutModalVisible","_useState13","workoutName","date","exercises","sets","reps","_useState14","newWorkout","setNewWorkout","openCreateWorkoutModal","closeCreateWorkoutModal","createWorkout","console","log","searchFilterFunction","navigateToUserProfile","user","text","newData","filter","item","itemEmail","toUpperCase","searchText","includes","style","styles","container","children","header","rounded","size","icon","type","avatarStyle","activeOpacity","emailText","currentUser","buttonsContainer","containerStyle","buttonContainer","buttonStyle","changePictureButton","titleStyle","buttonTitle","title","onPress","editProfileButton","addUserButton","createWorkoutButton","logOutButton","round","searchIcon","searchContainer","inputContainerStyle","searchInputContainer","placeholder","onChangeText","onClear","value","tableContainer","tableRow","tableCell","tableHeader","data","keyExtractor","toString","renderItem","_ref2","visible","animationType","formContainer","formTitle","_objectSpread","map","exercise","index","formSubtitle","prev","updatedExercises","selectedValue","onValueChange","prevWorkout","Array","from","length","_","i","Item","label","create","flex","alignItems","backgroundColor","paddingTop","marginBottom","borderWidth","borderColor","fontSize","fontWeight","marginTop","flexDirection","justifyContent","width","borderBottomWidth","borderTopWidth","padding","setRepContainer","setRepDropdown","exerciseContainer","exerciseTitle","exerciseInput"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/DoctorProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Picker,\n  Modal, // Added to handle the user input form\n} from \"react-native\";\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\"; // Import Input for form input\nimport { auth } from \"../../firebase\";\nimport ProfileScreen from \"./ProfileScreen\";\n\nexport default function DoctorProfile({ navigation }) {\n  const handleSignOut = () => {\n    auth\n      .signOut()\n      .then(() => {\n        navigation.navigate(\"LoginScreen\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  const [userList, setUserList] = useState([\n    { id: 1, name: 'User 1', medicalCondition: 'Condition 1', email: 'user1@example.com' },\n    { id: 2, name: 'User 2', medicalCondition: 'Condition 2', email: 'user2@example.com' },\n    // Add more users here\n  ]);\n\n  const [search, setSearch] = useState(\"\");\n  const [filteredUserList, setFilteredUserList] = useState(userList);\n\n  // State for the user input form\n  const [isAddUserModalVisible, setAddUserModalVisible] = useState(false);\n  const [newUser, setNewUser] = useState({ name: \"\", medicalCondition: \"\", email: \"\" });\n\n  const openAddUserModal = () => {\n    setAddUserModalVisible(true);\n  };\n\n  const closeAddUserModal = () => {\n    setAddUserModalVisible(false);\n  };\n\n  const addUser = () => {\n    // Validate the new user data, you can add more validation here\n    if (newUser.name && newUser.medicalCondition && newUser.email) {\n      // Add the new user to the user list\n      setUserList([...userList, newUser]);\n      // Close the modal\n      closeAddUserModal();\n    }\n  };\n\n  const [isCreateWorkoutModalVisible, setCreateWorkoutModalVisible] = useState(false);\n  const [newWorkout, setNewWorkout] = useState({\n    workoutName: \"\",\n    date: \"\",\n    exercises: [\n      { name: \"\", sets: \"\", reps: \"\" },\n      { name: \"\", sets: \"\", reps: \"\" },\n      { name: \"\", sets: \"\", reps: \"\" },\n      { name: \"\", sets: \"\", reps: \"\" },\n      { name: \"\", sets: \"\", reps: \"\" },\n    ],\n  });\n\n  const openCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(true);\n  };\n\n  const closeCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(false);\n  };\n\n  const createWorkout = () => {\n    if (newWorkout.workoutName && newWorkout.date) {\n      console.log(\"New Workout:\", newWorkout);\n      closeCreateWorkoutModal();\n    }\n  };\n\n  useEffect(() => {\n    searchFilterFunction(search);\n  }, [search]);\n\n  const navigateToUserProfile = (user) => {\n    navigation.navigate(\"ProfileScreen\", { user });\n  };\n\n  const searchFilterFunction = (text) => {\n    setSearch(text);\n    const newData = userList.filter((item) => {\n      const itemEmail = item.email.toUpperCase();\n      const searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Avatar\n          rounded\n          size={120}\n          icon={{ name: \"person\", type: \"material\" }}\n          avatarStyle={styles.avatarStyle}\n          activeOpacity={0.7}\n        />\n        <Text style={styles.emailText}>{auth.currentUser?.email}</Text>\n      </View>\n\n      <View style={styles.buttonsContainer}>\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.changePictureButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Change Picture\"\n          onPress={() => console.log(\"Change this picture!\")}\n        />\n\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.editProfileButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Edit Profile\"\n          onPress={() => navigation.navigate(\"EditProfileScreen\")}\n        />\n\n        {/* Add User Button */}\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.addUserButton} // Style for the \"Add User\" button\n          titleStyle={styles.buttonTitle}\n          title=\"Add User\"\n          onPress={openAddUserModal} // Open the user input form\n        />\n\n        {/* Create Workout Button */}\n        <Button\n          type=\"solid\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.createWorkoutButton}\n          titleStyle={styles.buttonTitle}\n          title=\"Create Workout\"\n          onPress={openCreateWorkoutModal}\n        />\n          <Button\n            type=\"solid\"\n            containerStyle={styles.buttonContainer}\n            buttonStyle={styles.logOutButton}\n            titleStyle={styles.buttonTitle}\n            title=\"Log Out\"\n            onPress={handleSignOut}\n          />\n      </View>\n\n      <SearchBar\n        round\n        searchIcon={{ size: 26 }}\n        containerStyle={styles.searchContainer}\n        inputContainerStyle={styles.searchInputContainer}\n        placeholder=\"Search user by email\"\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={() => searchFilterFunction(\"\")}\n        value={search}\n      />\n\n      <View style={styles.tableContainer}>\n        <View style={styles.tableRow}>\n          <Text style={[styles.tableCell, styles.tableHeader]}>User Name</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>Medical Condition</Text>\n          <Text style={[styles.tableCell, styles.tableHeader]}>Email Address</Text>\n        </View>\n        <FlatList\n          data={filteredUserList}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              style={styles.tableRow}\n              onPress={() => navigateToUserProfile(item)}\n            >\n              <Text style={styles.tableCell}>{item.name}</Text>\n              <Text style={styles.tableCell}>{item.medicalCondition}</Text>\n              <Text style={styles.tableCell}>{item.email}</Text>\n            </TouchableOpacity>\n          )}\n        />\n      </View>\n\n      {/* User Input Form Modal */}\n      <Modal visible={isAddUserModalVisible} animationType=\"slide\">\n        <View style={styles.formContainer}>\n          <Text style={styles.formTitle}>Add User</Text>\n          <Input\n            placeholder=\"Name\"\n            onChangeText={(text) => setNewUser({ ...newUser, name: text })}\n            value={newUser.name}\n          />\n          <Input\n            placeholder=\"Medical Condition\"\n            onChangeText={(text) => setNewUser({ ...newUser, medicalCondition: text })}\n            value={newUser.medicalCondition}\n          />\n          <Input\n            placeholder=\"Email\"\n            onChangeText={(text) => setNewUser({ ...newUser, email: text })}\n            value={newUser.email}\n          />\n          <Button title=\"Add User\" onPress={addUser} />\n          <Button title=\"Cancel\" onPress={closeAddUserModal} />\n        </View>\n      </Modal>\n      {/* Create Workout Modal */}\n      <Modal visible={isCreateWorkoutModalVisible} animationType=\"slide\">\n        <View style={styles.formContainer}>\n          <Text style={styles.formTitle}>Create Workout</Text>\n          <Input\n            placeholder=\"Workout Name\"\n            onChangeText={(text) => setNewWorkout({ ...newWorkout, workoutName: text })}\n            value={newWorkout.workoutName}\n          />\n          <Input\n            placeholder=\"Date\"\n            onChangeText={(text) => setNewWorkout({ ...newWorkout, date: text })}\n            value={newWorkout.date}\n          />\n\n          {/* Exercise Input Fields */}\n          {newWorkout.exercises.map((exercise, index) => (\n            <View key={index}>\n              <Text style={styles.formSubtitle}>{`Exercise ${index + 1}`}</Text>\n              <Input\n                placeholder=\"Exercise Name\"\n                onChangeText={(text) =>\n                  setNewWorkout((prev) => {\n                    const updatedExercises = [...prev.exercises];\n                    updatedExercises[index].name = text;\n                    return { ...prev, exercises: updatedExercises };\n                  })\n                }\n                value={exercise.name}\n              />\n              \n              <Text>Sets</Text>\n              <Picker\n                selectedValue={exercise.sets}\n                onValueChange={(value) =>\n                  setNewWorkout((prevWorkout) => {\n                    const updatedExercises = [...prevWorkout.exercises];\n                    updatedExercises[index].sets = value;\n                    return { ...prevWorkout, exercises: updatedExercises };\n                  })\n                }\n              >\n                {Array.from({ length: 20 }, (_, i) => (\n                  <Picker.Item key={i} label={(i + 1).toString()} value={i + 1} />\n                ))}\n              </Picker>\n\n              <Text>Reps</Text>\n              <Picker\n                selectedValue={exercise.reps}\n                onValueChange={(value) =>\n                  setNewWorkout((prevWorkout) => {\n                    const updatedExercises = [...prevWorkout.exercises];\n                    updatedExercises[index].reps = value;\n                    return { ...prevWorkout, exercises: updatedExercises };\n                  })\n                }\n              >\n                {Array.from({ length: 20 }, (_, i) => (\n                  <Picker.Item key={i} label={(i + 1).toString()} value={(i + 1).toString()} />\n                ))}\n              </Picker>\n            </View>\n          ))}\n\n          <Button title=\"Add Exercise\" onPress={() => {}} />\n\n          <Button title=\"Create Workout\" onPress={createWorkout} />\n          <Button title=\"Cancel\" onPress={closeCreateWorkoutModal} />\n        </View>\n      </Modal>\n    </View>\n  );\n}\n  // Full style code\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#f0f0f0\",\n      paddingTop: 20,\n    },\n    header: {\n      alignItems: \"center\",\n      marginBottom: 20,\n    },\n    avatarStyle: {\n      borderWidth: 2,\n      borderColor: \"#fff\",\n      backgroundColor: \"#3498db\",\n    },\n    emailText: {\n      fontSize: 18,\n      fontWeight: \"bold\",\n      marginTop: 10,\n    },\n    buttonsContainer: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      marginBottom: 20,\n      width: \"80%\",\n    },\n    buttonContainer: {\n      flex: 1,\n    },\n    buttonTitle: {\n      fontSize: 16,\n    },\n    changePictureButton: {\n      backgroundColor: \"#3498db\",\n      borderColor: \"#3498db\",\n    },\n    editProfileButton: {\n      backgroundColor: \"#27ae60\",\n      borderColor: \"#27ae60\",\n    },\n    logOutButton: {\n      backgroundColor: \"#e74c3c\",\n      borderColor: \"#e74c3c\",\n    },\n    searchContainer: {\n      width: \"80%\",\n      marginBottom: 10,\n    },\n    searchInputContainer: {\n      backgroundColor: \"#fff\",\n      borderBottomWidth: 0,\n      borderTopWidth: 0,\n    },\n    tableContainer: {\n      backgroundColor: \"#fff\",\n      width: \"80%\",\n      padding: 10,\n    },\n    tableRow: {\n      flexDirection: \"row\",\n      borderBottomWidth: 1,\n      borderColor: \"#ccc\",\n      alignItems: \"center\",\n    },\n    tableCell: {\n      flex: 1,\n      padding: 10,\n      fontSize: 14,\n    },\n    tableHeader: {\n      fontWeight: \"bold\",\n    },\n    addUserButton: {\n      backgroundColor: \"#ff7f50\",\n      borderColor: \"#ff7f50\",\n    },\n    formContainer: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    formTitle: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n      marginBottom: 10,\n    },\n    createWorkoutButton: {\n      backgroundColor: \"#ffa07a\",\n      borderColor: \"#ffa07a\",\n    },\n    formSubtitle: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginTop: 10,\n    },\n    setRepContainer: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n    setRepDropdown: {\n      // Implement styling for the dropdown container\n    },\n    // Updated styles for Exercise Input Fields\n    exerciseContainer: {\n      marginBottom: 20,\n    },\n    exerciseTitle: {\n      fontSize: 18,\n      fontWeight: \"bold\",\n      marginBottom: 10,\n    },\n    exerciseInput: {\n      marginBottom: 10,\n    },\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}