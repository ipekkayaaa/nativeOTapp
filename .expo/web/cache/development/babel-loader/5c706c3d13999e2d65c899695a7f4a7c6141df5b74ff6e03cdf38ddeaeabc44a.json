{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { collection, getDocs, addDoc, where, query, updateDoc, doc } from \"firebase/firestore\";\nimport { firestore, auth } from \"../../firebase\";\nimport Modal from \"react-native-modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      firstName: \"\",\n      lastName: \"\",\n      birthday: \"\",\n      phoneNumber: \"\",\n      weight: \"\",\n      height: \"\",\n      medicalCondition: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    values = _useState2[0],\n    setValues = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isModalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var user = auth.currentUser;\n  var colRefProfile = collection(firestore, 'patients');\n  useEffect(function () {\n    if (user) {\n      var q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n      getDocs(q).then(function (querySnapshot) {\n        if (!querySnapshot.empty) {\n          var userData = querySnapshot.docs[0].data();\n        }\n      }).catch(function (error) {\n        console.error(\"Error fetching user data: \", error);\n      });\n    }\n  }, [user, colRefProfile]);\n  var handleChangeText = function handleChangeText(key, text) {\n    setValues(function (prevValues) {\n      return _objectSpread(_objectSpread({}, prevValues), {}, _defineProperty({}, key, text));\n    });\n  };\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var handleSaveProfile = function handleSaveProfile() {\n    var q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n    getDocs(q).then(function (querySnapshot) {\n      if (!querySnapshot.empty) {\n        var userDocRef = doc(firestore, 'patients', querySnapshot.docs[0].id);\n        updateDoc(userDocRef, {\n          firstName: values.firstName,\n          lastName: values.lastName,\n          birthday: values.birthday,\n          phoneNumber: values.phoneNumber,\n          weight: values.weight,\n          height: values.height,\n          medicalCondition: values.medicalCondition\n        }).then(function () {\n          console.log(\"Document successfully updated!\");\n        }).catch(function (error) {\n          console.error(\"Error updating document: \", error);\n        });\n      } else {\n        addDoc(colRefProfile, {\n          userId: user.uid,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          birthday: values.birthday,\n          phoneNumber: values.phoneNumber,\n          weight: values.weight,\n          height: values.height,\n          medicalCondition: values.medicalCondition\n        }).then(function () {\n          console.log(\"Document successfully added!\");\n        }).catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n      }\n    }).catch(function (error) {\n      console.error(\"Error checking for existing user data: \", error);\n    });\n    toggleModal();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Edit Your Profile\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: toggleModal,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Edit Profile\"\n      })\n    }), _jsx(Modal, {\n      isVisible: isModalVisible,\n      onBackdropPress: toggleModal,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleSaveProfile,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Save\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: toggleModal,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    padding: 20\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#333\"\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    borderColor: \"#C5C2B7\",\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: \"#38362d\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"40%\",\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 14,\n    fontWeight: \"bold\"\n  },\n  datePicker: {\n    width: \"100%\"\n  },\n  modalContainer: {\n    backgroundColor: \"#fff\",\n    padding: 20,\n    borderRadius: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","collection","getDocs","addDoc","where","query","updateDoc","doc","firestore","auth","Modal","jsx","_jsx","jsxs","_jsxs","EditProfileScreen","_ref","navigation","_useState","firstName","lastName","birthday","phoneNumber","weight","height","medicalCondition","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","isModalVisible","setModalVisible","user","currentUser","colRefProfile","q","uid","then","querySnapshot","empty","userData","docs","data","catch","error","console","handleChangeText","key","text","prevValues","_objectSpread","_defineProperty","toggleModal","handleSaveProfile","userDocRef","id","log","userId","style","styles","container","children","heading","button","onPress","buttonText","isVisible","onBackdropPress","modalContainer","create","flex","justifyContent","alignItems","backgroundColor","padding","fontSize","fontWeight","marginBottom","color","input","width","borderColor","borderWidth","borderRadius","marginTop","datePicker"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/EditProfileScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet } from \"react-native\";\n// import { collection, getDocs, addDoc, where, query, updateDoc, doc } from \"firebase/firestore\";\n// import { firestore, auth } from \"../../firebase\";\n\n// export default function EditProfileScreen({ navigation }) {\n//   const [values, setValues] = useState({\n//     firstName: \"\",\n//     lastName: \"\",\n//     birthday: \"\",\n//     phoneNumber: \"\",\n//     weight: \"\",\n//     height: \"\",\n//     medicalCondition: \"\",\n//   });\n\n//   const user = auth.currentUser;\n\n//   const colRefProfile = collection(firestore, 'patients');\n\n//   useEffect(() => {\n//     // Fetch and set existing user data on component mount\n//     if (user) {\n//       const q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n//       getDocs(q)\n//         .then((querySnapshot) => {\n//           if (!querySnapshot.empty) {\n//             const userData = querySnapshot.docs[0].data();\n//             // Don't set the state here to avoid displaying existing data in inputs\n//             // setValues(userData);\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching user data: \", error);\n//         });\n//     }\n//   }, [user, colRefProfile]);\n\n//   const handleChangeText = (key, text) => {\n//     // Update the state for the corresponding input field\n//     setValues((prevValues) => ({\n//       ...prevValues,\n//       [key]: text,\n//     }));\n//   };\n\n//   const handleSaveProfile = () => {\n//     // Check if the user has an existing document\n//     const q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n\n//     getDocs(q)\n//       .then((querySnapshot) => {\n//         if (!querySnapshot.empty) {\n//           // If the user exists, update the existing document\n//           const userDocRef = doc(firestore, 'patients', querySnapshot.docs[0].id);\n//           updateDoc(userDocRef, {\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             birthday: values.birthday,\n//             phoneNumber: values.phoneNumber,\n//             weight: values.weight,\n//             height: values.height,\n//             medicalCondition: values.medicalCondition,\n//           })\n//             .then(() => {\n//               console.log(\"Document successfully updated!\");\n//             })\n//             .catch((error) => {\n//               console.error(\"Error updating document: \", error);\n//             });\n//         } else {\n//           // If the user does not exist, add a new document\n//           addDoc(colRefProfile, {\n//             userId: user.uid,\n//             firstName: values.firstName,\n//             lastName: values.lastName,\n//             birthday: values.birthday,\n//             phoneNumber: values.phoneNumber,\n//             weight: values.weight,\n//             height: values.height,\n//             medicalCondition: values.medicalCondition,\n//           })\n//             .then(() => {\n//               console.log(\"Document successfully added!\");\n//             })\n//             .catch((error) => {\n//               console.error(\"Error adding document: \", error);\n//             });\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(\"Error checking for existing user data: \", error);\n//       });\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.heading}>Edit Your Profile</Text>\n//       <TextInput\n//         name=\"firstName\"\n//         style={styles.input}\n//         placeholder=\"First Name\"\n//         value={values.firstName}\n//         onChangeText={(text) => handleChangeText(\"firstName\", text)}\n//       />\n//       <TextInput\n//         name=\"lastName\"\n//         style={styles.input}\n//         placeholder=\"Last Name\"\n//         value={values.lastName}\n//         onChangeText={(text) => handleChangeText(\"lastName\", text)}\n//       />\n//       <TextInput\n//         placeholder=\"Birthday\"\n//         style={styles.input}\n//         value={values.birthday}\n//         onChangeText={(text) => handleChangeText(\"birthday\", text)}\n//       />\n//       <TextInput\n//         name=\"phoneNumber\"\n//         style={styles.input}\n//         placeholder=\"Phone Number\"\n//         value={values.phoneNumber}\n//         onChangeText={(text) => handleChangeText(\"phoneNumber\", text)}\n//       />\n//       <TextInput\n//         name=\"weight\"\n//         style={styles.input}\n//         placeholder=\"Weight\"\n//         value={values.weight}\n//         onChangeText={(text) => handleChangeText(\"weight\", text)}\n//       />\n//       <TextInput\n//         name=\"height\"\n//         style={styles.input}\n//         placeholder=\"Height\"\n//         value={values.height}\n//         onChangeText={(text) => handleChangeText(\"height\", text)}\n//       />\n//       <TextInput\n//         name=\"medicalCondition\"\n//         style={styles.input}\n//         placeholder=\"Medical Condition\"\n//         value={values.medicalCondition}\n//         onChangeText={(text) => handleChangeText(\"medicalCondition\", text)}\n//       />\n//       <TouchableOpacity\n//         style={styles.button}\n//         onPress={handleSaveProfile}\n//       >\n//         <Text style={styles.buttonText}>Save</Text>\n//       </TouchableOpacity>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#f0f0f0\",\n//     padding: 20,\n//   },\n//   heading: {\n//     fontSize: 24,\n//     fontWeight: \"bold\",\n//     marginBottom: 20,\n//     color: \"#333\",\n//   },\n//   input: {\n//     width: \"100%\",\n//     height: 40,\n//     borderColor: \"#C5C2B7\",\n//     borderWidth: 1,\n//     borderRadius: 10,\n//     padding: 10,\n//     marginBottom: 10,\n//   },\n//   button: {\n//     backgroundColor: \"#38362d\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     width: \"40%\",\n//     padding: 10,\n//     borderRadius: 5,\n//     marginTop: 10,\n//   },\n//   buttonText: {\n//     color: \"#fff\",\n//     fontSize: 14,\n//     fontWeight: \"bold\",\n//   },\n//   datePicker: {\n//     width: \"100%\",\n//   },\n// });\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { collection, getDocs, addDoc, where, query, updateDoc, doc } from \"firebase/firestore\";\nimport { firestore, auth } from \"../../firebase\";\nimport Modal from \"react-native-modal\";\n\nexport default function EditProfileScreen({ navigation }) {\n  const [values, setValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    birthday: \"\",\n    phoneNumber: \"\",\n    weight: \"\",\n    height: \"\",\n    medicalCondition: \"\",\n  });\n\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const user = auth.currentUser;\n\n  const colRefProfile = collection(firestore, 'patients');\n\n  useEffect(() => {\n    // Fetch and set existing user data on component mount\n    if (user) {\n      const q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n      getDocs(q)\n        .then((querySnapshot) => {\n          if (!querySnapshot.empty) {\n            const userData = querySnapshot.docs[0].data();\n            // Don't set the state here to avoid displaying existing data in inputs\n            // setValues(userData);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching user data: \", error);\n        });\n    }\n  }, [user, colRefProfile]);\n\n  const handleChangeText = (key, text) => {\n    // Update the state for the corresponding input field\n    setValues((prevValues) => ({\n      ...prevValues,\n      [key]: text,\n    }));\n  };\n\n  const toggleModal = () => {\n    setModalVisible(!isModalVisible);\n  };\n\n  const handleSaveProfile = () => {\n    // Check if the user has an existing document\n    const q = query(colRefProfile, where(\"userId\", \"==\", user.uid));\n\n    getDocs(q)\n      .then((querySnapshot) => {\n        if (!querySnapshot.empty) {\n          // If the user exists, update the existing document\n          const userDocRef = doc(firestore, 'patients', querySnapshot.docs[0].id);\n          updateDoc(userDocRef, {\n            firstName: values.firstName,\n            lastName: values.lastName,\n            birthday: values.birthday,\n            phoneNumber: values.phoneNumber,\n            weight: values.weight,\n            height: values.height,\n            medicalCondition: values.medicalCondition,\n          })\n            .then(() => {\n              console.log(\"Document successfully updated!\");\n            })\n            .catch((error) => {\n              console.error(\"Error updating document: \", error);\n            });\n        } else {\n          // If the user does not exist, add a new document\n          addDoc(colRefProfile, {\n            userId: user.uid,\n            firstName: values.firstName,\n            lastName: values.lastName,\n            birthday: values.birthday,\n            phoneNumber: values.phoneNumber,\n            weight: values.weight,\n            height: values.height,\n            medicalCondition: values.medicalCondition,\n          })\n            .then(() => {\n              console.log(\"Document successfully added!\");\n            })\n            .catch((error) => {\n              console.error(\"Error adding document: \", error);\n            });\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking for existing user data: \", error);\n      });\n      toggleModal();\n  };\n  \n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Edit Your Profile</Text>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={toggleModal}\n      >\n        <Text style={styles.buttonText}>Edit Profile</Text>\n      </TouchableOpacity>\n\n      <Modal isVisible={isModalVisible} onBackdropPress={toggleModal}>\n        <View style={styles.modalContainer}>\n          {/* Your existing input fields */}\n          {/* ... */}\n          <TouchableOpacity\n            style={styles.button}\n            onPress={handleSaveProfile}\n          >\n            <Text style={styles.buttonText}>Save</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={toggleModal}\n          >\n            <Text style={styles.buttonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    padding: 20,\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#333\",\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    borderColor: \"#C5C2B7\",\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 10,\n  },\n  button: {\n    backgroundColor: \"#38362d\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"40%\",\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n  datePicker: {\n    width: \"100%\",\n  },\n  modalContainer: {\n    backgroundColor: \"#fff\",\n    padding: 20,\n    borderRadius: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}