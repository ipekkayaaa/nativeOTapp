{"ast":null,"code":"import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport HomeTabNavigator from \"./TabNavigator\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SignUpScreen from \"../screens/SignUpScreen\";\nimport EditProfileScreen from \"../screens/EditProfileScreen\";\nimport DietScreen from \"../screens/DietScreen\";\nimport DoctorProfileScreen from \"../screens/DoctorProfileScreen\";\nimport WorkoutScreen from \"../screens/WorkoutScreen\";\nimport PatientFormScreen from \"../screens/PatientFormScreen\";\nimport DoctorFormScreen from \"../screens/DoctorFormScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StackNavigator = function StackNavigator(_ref) {\n  var userType = _ref.userType;\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"LoginScreen\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SignUpScreen\",\n      component: SignUpScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: function component() {\n        return _jsx(HomeTabNavigator, {\n          userType: userType\n        });\n      },\n      options: {\n        headerShown: false\n      }\n    }), userType !== \"doctor\" && _jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EditProfileScreen\",\n      component: EditProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), userType === \"patient\" && _jsx(Stack.Screen, {\n      name: \"DietScreen\",\n      component: DietScreen,\n      options: {\n        headerShown: false\n      }\n    }), userType === \"doctor\" && _jsx(Stack.Screen, {\n      name: \"DoctorProfileScreen\",\n      component: DoctorProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), userType === \"patient\" && _jsx(Stack.Screen, {\n      name: \"PatientFormScreen\",\n      component: PatientFormScreen,\n      options: {\n        headerShown: false\n      }\n    }), userType === \"doctor\" && _jsx(Stack.Screen, {\n      name: \"DoctorFormScreen\",\n      component: DoctorFormScreen,\n      options: {\n        headerShown: false\n      }\n    }), userType === \"patient\" && _jsx(Stack.Screen, {\n      name: \"WorkoutScreen\",\n      component: WorkoutScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\nexport default StackNavigator;","map":{"version":3,"names":["React","createNativeStackNavigator","LoginScreen","HomeTabNavigator","ProfileScreen","SignUpScreen","EditProfileScreen","DietScreen","DoctorProfileScreen","WorkoutScreen","PatientFormScreen","DoctorFormScreen","jsx","_jsx","jsxs","_jsxs","StackNavigator","_ref","userType","Stack","Navigator","children","Screen","name","component","options","headerShown"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/navigation/StackNavigator.js"],"sourcesContent":["import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport HomeTabNavigator from \"./TabNavigator\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SignUpScreen from \"../screens/SignUpScreen\";\nimport EditProfileScreen from \"../screens/EditProfileScreen\";\nimport DietScreen from \"../screens/DietScreen\";\nimport DoctorProfileScreen from \"../screens/DoctorProfileScreen\";\nimport WorkoutScreen from \"../screens/WorkoutScreen\";\nimport PatientFormScreen from \"../screens/PatientFormScreen\";\nimport DoctorFormScreen from \"../screens/DoctorFormScreen\";\n\n// const Stack = createNativeStackNavigator();\n// DoctorFormScreen\n// const StackNavigator = () => {\n//   return (\n//     <Stack.Navigator>\n//       <Stack.Screen\n//         name=\"LoginScreen\"\n//         component={LoginScreen}\n//         options={{ headerShown: false }}\n//       />\n//       <Stack.Screen\n//         name=\"SignUpScreen\"\n//         component={SignUpScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"HomeScreen\"\n//         component={HomeTabNavigator}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"ProfileScreen\"\n//         component={ProfileScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"EditProfileScreen\"\n//         component={EditProfileScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"DietScreen\"\n//         component={DietScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"DoctorProfileScreen\"\n//         component={DoctorProfileScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"PatientFormScreen\"\n//         component={PatientFormScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//        <Stack.Screen\n//         name=\"DoctorFormScreen\"\n//         component={DoctorFormScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"WorkoutScreen\"\n//         component={WorkoutScreen}\n//         options={{\n//           headerShown: false,\n//         }}\n//       />\n//     </Stack.Navigator>\n//   );\n// };\n\n// export default StackNavigator;\n\n\n\n\n// ... (imports)\n\nconst StackNavigator = ({ userType }) => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"LoginScreen\"\n        component={LoginScreen}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"SignUpScreen\"\n        component={SignUpScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"HomeScreen\"\n        component={() => <HomeTabNavigator userType={userType} />}\n        options={{\n          headerShown: false,\n        }}\n      />\n      {userType !== \"doctor\" && (\n        <Stack.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n      )}\n      <Stack.Screen\n        name=\"EditProfileScreen\"\n        component={EditProfileScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      {userType === \"patient\" && (\n        <Stack.Screen\n          name=\"DietScreen\"\n          component={DietScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n      )}\n      {userType === \"doctor\" && (\n        <Stack.Screen\n          name=\"DoctorProfileScreen\"\n          component={DoctorProfileScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n      )}\n      {userType === \"patient\" && (\n        <Stack.Screen\n          name=\"PatientFormScreen\"\n          component={PatientFormScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n      )}\n      {userType === \"doctor\" && (\n        <Stack.Screen\n          name=\"DoctorFormScreen\"\n          component={DoctorFormScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n      )}\n      {userType === \"patient\" && (\n        <Stack.Screen\n          name=\"WorkoutScreen\"\n          component={WorkoutScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport default StackNavigator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}