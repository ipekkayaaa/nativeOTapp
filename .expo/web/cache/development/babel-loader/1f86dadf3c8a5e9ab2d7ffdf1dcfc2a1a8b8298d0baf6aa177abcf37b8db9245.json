{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ModalSelector from 'react-native-modal-selector';\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\";\nimport { auth, firestore } from \"../../firebase\";\nimport { getDocs, collection } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialExercises = [{\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}, {\n  name: \"\",\n  sets: \"\",\n  reps: \"\"\n}];\nexport default function DoctorProfile(_ref) {\n  var navigation = _ref.navigation;\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.navigate(\"LoginScreen\");\n    }).catch(function (err) {\n      return alert(err.message);\n    });\n  };\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userList = _useState2[0],\n    setUserList = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    createWorkoutModalVisible = _useState4[0],\n    setCreateWorkoutModalVisible = _useState4[1];\n  var _useState5 = useState({\n      workoutName: \"\",\n      date: \"\",\n      exercises: initialExercises\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newWorkout = _useState6[0],\n    setNewWorkout = _useState6[1];\n  var createWorkout = function createWorkout() {\n    if (newWorkout.workoutName && newWorkout.date && selectedPatientId) {\n      var colRefworkout = collection(firestore, 'workoutPlan');\n      addDoc(colRefworkout, {\n        workoutName: newWorkout.workoutName,\n        workoutDate: newWorkout.date,\n        email: selectedPatientId,\n        exercises: newWorkout.exercises.map(function (exercise, index) {\n          return {\n            name: exercise.name,\n            reps: exercise.reps,\n            sets: exercise.sets,\n            key: `exercise${index + 1}`\n          };\n        })\n      }).then(function () {\n        console.log(\"Workout added successfully!\");\n        closeCreateWorkoutModal();\n      }).catch(function (error) {\n        console.error(\"Error adding workout: \", error);\n      });\n    } else {\n      console.warn(\"Incomplete workout data. Please fill in all required fields.\");\n    }\n  };\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    patientList = _useState8[0],\n    setPatientList = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedPatientId = _useState10[0],\n    setSelectedPatientId = _useState10[1];\n  useEffect(function () {\n    var fetchPatients = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var patientsCollection = collection(firestore, 'patients');\n          var snapshot = yield getDocs(patientsCollection);\n          var patientsData = snapshot.docs.map(function (doc) {\n            var _doc$data = doc.data(),\n              email = _doc$data.email,\n              firstName = _doc$data.firstName,\n              lastName = _doc$data.lastName,\n              medicalCondition = _doc$data.medicalCondition;\n            return {\n              id: doc.id,\n              name: `${firstName} ${lastName}`,\n              medicalCondition: medicalCondition,\n              email: email\n            };\n          });\n          setPatientList(patientsData);\n          snapshot.forEach(function (doc) {\n            var _doc$data2 = doc.data(),\n              firstName = _doc$data2.firstName,\n              lastName = _doc$data2.lastName;\n            var name = `${firstName} ${lastName}`;\n            console.log(\"Name: \", name);\n          });\n        } catch (error) {\n          console.error(\"Error getting patient documents: \", error);\n        }\n      });\n      return function fetchPatients() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchPatients();\n  }, []);\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    search = _useState12[0],\n    setSearch = _useState12[1];\n  var _useState13 = useState(patientList),\n    _useState14 = _slicedToArray(_useState13, 2),\n    filteredUserList = _useState14[0],\n    setFilteredUserList = _useState14[1];\n  useEffect(function () {\n    setFilteredUserList(patientList);\n  }, [patientList]);\n  var navigateToUserProfile = function navigateToUserProfile(user) {\n    navigation.navigate(\"ProfileScreen\", {\n      user: user\n    });\n  };\n  var searchFilterFunction = function searchFilterFunction(text) {\n    setSearch(text);\n    var newData = patientList.filter(function (item) {\n      var itemEmail = item.email.toUpperCase();\n      var searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n  var openCreateWorkoutModal = function openCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(true);\n  };\n  var closeCreateWorkoutModal = function closeCreateWorkoutModal() {\n    setCreateWorkoutModalVisible(false);\n  };\n  return _jsx(View, {\n    style: styles.modalContainer,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          style: styles.headline,\n          children: \"Create Workout\"\n        }), _jsx(Input, {\n          name: \"workoutName\",\n          placeholder: \"Workout Name\",\n          onChangeText: function onChangeText(text) {\n            return setNewWorkout(_objectSpread(_objectSpread({}, newWorkout), {}, {\n              workoutName: text\n            }));\n          },\n          value: newWorkout.workoutName,\n          style: {\n            marginBottom: 20\n          }\n        }), _jsx(Input, {\n          placeholder: \"Date\",\n          onChangeText: function onChangeText(text) {\n            return setNewWorkout(_objectSpread(_objectSpread({}, newWorkout), {}, {\n              date: text\n            }));\n          },\n          value: newWorkout.date\n        }), _jsx(ModalSelector, {\n          data: patientList.map(function (patient) {\n            return {\n              key: patient.id,\n              label: patient.email\n            };\n          }),\n          labelExtractor: function labelExtractor(item) {\n            return item.label;\n          },\n          visible: selectedPatientId !== \"\",\n          onChange: function onChange(option) {\n            return setSelectedPatientId(option.key);\n          },\n          children: _jsx(Text, {\n            children: selectedPatientId ? \"Patient Selected\" : \"Select Patient\"\n          })\n        }), _jsx(View, {\n          style: styles.exercisesContainer,\n          children: _jsxs(View, {\n            style: styles.exerciseContainer,\n            children: [_jsx(Text, {\n              style: styles.formSubtitle,\n              children: \"Exercise 1\"\n            }), _jsx(Input, {\n              name: \"exercise1\",\n              placeholder: \"Exercise Name\",\n              onChangeText: function onChangeText(text) {\n                return setNewWorkout(function (prev) {\n                  var updatedExercises = _toConsumableArray(prev.exercises);\n                  updatedExercises[0].name = text;\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              value: newWorkout.exercises[0].name\n            }), _jsx(Text, {\n              children: \"Sets\"\n            }), _jsx(ModalSelector, {\n              data: Array.from({\n                length: 20\n              }, function (_, i) {\n                return {\n                  key: i + 1,\n                  label: (i + 1).toString()\n                };\n              }),\n              labelExtractor: function labelExtractor(item) {\n                return item.label;\n              },\n              onChange: function onChange(option) {\n                return setNewWorkout(function (prevWorkout) {\n                  var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                  updatedExercises[0].sets = option.key;\n                  return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              children: _jsx(Text, {\n                children: newWorkout.exercises[0].sets ? newWorkout.exercises[0].sets.toString() : \"Select Sets\"\n              })\n            }), _jsx(Text, {\n              children: \"Reps\"\n            }), _jsx(ModalSelector, {\n              data: Array.from({\n                length: 20\n              }, function (_, i) {\n                return {\n                  key: (i + 1).toString(),\n                  label: (i + 1).toString()\n                };\n              }),\n              labelExtractor: function labelExtractor(item) {\n                return item.label;\n              },\n              onChange: function onChange(option) {\n                return setNewWorkout(function (prevWorkout) {\n                  var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                  updatedExercises[0].reps = option.key;\n                  return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              children: _jsx(Text, {\n                children: newWorkout.exercises[0].reps ? newWorkout.exercises[0].reps.toString() : \"Select Reps\"\n              })\n            })]\n          })\n        }), _jsx(View, {\n          style: styles.exercisesContainer,\n          children: _jsxs(View, {\n            style: styles.exerciseContainer,\n            children: [_jsx(Text, {\n              style: styles.formSubtitle,\n              children: \"Exercise 2\"\n            }), _jsx(Input, {\n              name: \"exercise2\",\n              placeholder: \"Exercise Name\",\n              onChangeText: function onChangeText(text) {\n                return setNewWorkout(function (prev) {\n                  var updatedExercises = _toConsumableArray(prev.exercises);\n                  updatedExercises[1].name = text;\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              value: newWorkout.exercises[1].name\n            }), _jsx(Text, {\n              children: \"Sets\"\n            }), _jsx(ModalSelector, {\n              data: Array.from({\n                length: 20\n              }, function (_, i) {\n                return {\n                  key: i + 1,\n                  label: (i + 1).toString()\n                };\n              }),\n              labelExtractor: function labelExtractor(item) {\n                return item.label;\n              },\n              onChange: function onChange(option) {\n                return setNewWorkout(function (prevWorkout) {\n                  var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                  updatedExercises[1].sets = option.key;\n                  return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              children: _jsx(Text, {\n                children: newWorkout.exercises[1].sets ? newWorkout.exercises[1].sets.toString() : \"Select Sets\"\n              })\n            }), _jsx(Text, {\n              children: \"Reps\"\n            }), _jsx(ModalSelector, {\n              data: Array.from({\n                length: 20\n              }, function (_, i) {\n                return {\n                  key: (i + 1).toString(),\n                  label: (i + 1).toString()\n                };\n              }),\n              labelExtractor: function labelExtractor(item) {\n                return item.label;\n              },\n              onChange: function onChange(option) {\n                return setNewWorkout(function (prevWorkout) {\n                  var updatedExercises = _toConsumableArray(prevWorkout.exercises);\n                  updatedExercises[1].reps = option.key;\n                  return _objectSpread(_objectSpread({}, prevWorkout), {}, {\n                    exercises: updatedExercises\n                  });\n                });\n              },\n              children: _jsx(Text, {\n                children: newWorkout.exercises[1].reps ? newWorkout.exercises[1].reps.toString() : \"Select Reps\"\n              })\n            })]\n          })\n        }), _jsx(Button, {\n          buttonStyle: [styles.submitWorkout, {\n            width: 150\n          }],\n          title: \"Submit Workout\",\n          onPress: createWorkout\n        }), _jsx(Button, {\n          buttonStyle: [styles.cancelWorkout, {\n            width: 150\n          }],\n          title: \"Cancel\",\n          onPress: closeCreateWorkoutModal\n        })]\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20\n  },\n  scrollContainer2: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  avatarStyle: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#3498db\"\n  },\n  emailText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 10\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 20,\n    width: \"80%\"\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  buttonTitle: {\n    fontSize: 16\n  },\n  changePictureButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\"\n  },\n  editProfileButton: {\n    backgroundColor: \"#27ae60\",\n    borderColor: \"#27ae60\"\n  },\n  logOutButton: {\n    backgroundColor: \"#e74c3c\",\n    borderColor: \"#e74c3c\"\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 0,\n    borderTopWidth: 0\n  },\n  tableContainer: {\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    padding: 10\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    alignItems: \"center\"\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14\n  },\n  tableHeader: {\n    fontWeight: \"bold\"\n  },\n  addUserButton: {\n    backgroundColor: \"#ff7f50\",\n    borderColor: \"#ff7f50\"\n  },\n  formContainer: {\n    display: \"block\",\n    height: 700,\n    width: 700,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n    marginTop: 30\n  },\n  formTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#3498db\",\n    marginLeft: 250\n  },\n  createWorkoutButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\"\n  },\n  formSubtitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    color: \"#2ecc71\"\n  },\n  setRepContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 10\n  },\n  setRepDropdown: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    marginHorizontal: 5,\n    borderRadius: 8,\n    overflow: \"hidden\"\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  scrollContainer: {\n    flexGrow: 1\n  },\n  exerciseContainer: {\n    width: '50%',\n    paddingHorizontal: 10\n  },\n  exercisesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  patientDropdown: {\n    height: 50,\n    width: \"80%\",\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10\n  },\n  submitWorkout: {\n    marginTop: 20,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cancelWorkout: {\n    marginTop: 10,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headline: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginTop: 100,\n    marginLeft: 250,\n    color: \"#3498db\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","FlatList","Modal","ScrollView","StyleSheet","ModalSelector","Avatar","Button","SearchBar","Input","auth","firestore","getDocs","collection","jsx","_jsx","jsxs","_jsxs","initialExercises","name","sets","reps","DoctorProfile","_ref","navigation","handleSignOut","signOut","then","navigate","catch","err","alert","message","_useState","_useState2","_slicedToArray","userList","setUserList","_useState3","_useState4","createWorkoutModalVisible","setCreateWorkoutModalVisible","_useState5","workoutName","date","exercises","_useState6","newWorkout","setNewWorkout","createWorkout","selectedPatientId","colRefworkout","addDoc","workoutDate","email","map","exercise","index","key","console","log","closeCreateWorkoutModal","error","warn","_useState7","_useState8","patientList","setPatientList","_useState9","_useState10","setSelectedPatientId","fetchPatients","_ref2","_asyncToGenerator","patientsCollection","snapshot","patientsData","docs","doc","_doc$data","data","firstName","lastName","medicalCondition","id","forEach","_doc$data2","apply","arguments","_useState11","_useState12","search","setSearch","_useState13","_useState14","filteredUserList","setFilteredUserList","navigateToUserProfile","user","searchFilterFunction","text","newData","filter","item","itemEmail","toUpperCase","searchText","includes","openCreateWorkoutModal","style","styles","modalContainer","children","contentContainerStyle","scrollContainer","formContainer","headline","placeholder","onChangeText","_objectSpread","value","marginBottom","patient","label","labelExtractor","visible","onChange","option","exercisesContainer","exerciseContainer","formSubtitle","prev","updatedExercises","_toConsumableArray","Array","from","length","_","i","toString","prevWorkout","buttonStyle","submitWorkout","width","title","onPress","cancelWorkout","create","container","flex","alignItems","backgroundColor","paddingTop","scrollContainer2","flexGrow","header","avatarStyle","borderWidth","borderColor","emailText","fontSize","fontWeight","marginTop","buttonsContainer","flexDirection","justifyContent","buttonContainer","buttonTitle","changePictureButton","editProfileButton","logOutButton","searchContainer","searchInputContainer","borderBottomWidth","borderTopWidth","tableContainer","padding","tableRow","tableCell","tableHeader","addUserButton","display","height","paddingHorizontal","formTitle","color","marginLeft","createWorkoutButton","setRepContainer","setRepDropdown","marginHorizontal","borderRadius","overflow","patientDropdown","textAlign"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/DoctorProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  ScrollView,\n  StyleSheet,\n} from \"react-native\";\nimport ModalSelector from 'react-native-modal-selector'; // Import the library\nimport { Avatar, Button, SearchBar, Input } from \"react-native-elements\";\nimport { auth, firestore } from \"../../firebase\";\nimport { getDocs, collection } from \"firebase/firestore\";\n\nconst initialExercises = [\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n  { name: \"\", sets: \"\", reps: \"\" },\n];\n\nexport default function DoctorProfile({ navigation }) {\n   // signout\n   const handleSignOut = () => {\n    auth\n      .signOut()\n      .then(() => {\n        navigation.navigate(\"LoginScreen\");\n      })\n      .catch((err) => alert(err.message));\n  };\n  const [userList, setUserList] = useState([]);\n\n  const [createWorkoutModalVisible, setCreateWorkoutModalVisible] = useState(false);\n\n  const [newWorkout, setNewWorkout] = useState({\n    workoutName: \"\",\n    date: \"\",\n    exercises: initialExercises,\n  });\n\n  const createWorkout = () => {\n    if (newWorkout.workoutName && newWorkout.date && selectedPatientId) {\n      const colRefworkout = collection(firestore, 'workoutPlan');\n      addDoc(colRefworkout, {\n        workoutName: newWorkout.workoutName,\n        workoutDate: newWorkout.date,\n        email: selectedPatientId,\n        exercises: newWorkout.exercises.map((exercise, index) => ({\n          name: exercise.name,\n          reps: exercise.reps,\n          sets: exercise.sets,\n          key: `exercise${index + 1}`, // Assign a unique key for each exercise\n        })),\n      })\n        .then(() => {\n          console.log(\"Workout added successfully!\");\n          closeCreateWorkoutModal();\n        })\n        .catch((error) => {\n          console.error(\"Error adding workout: \", error);\n        });\n    } else {\n      console.warn(\"Incomplete workout data. Please fill in all required fields.\");\n    }\n  };\n  \n\n  const [patientList, setPatientList] = useState([]);\n  const [selectedPatientId, setSelectedPatientId] = useState(\"\");\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const patientsCollection = collection(firestore, 'patients');\n        const snapshot = await getDocs(patientsCollection);\n        const patientsData = snapshot.docs.map((doc) => {\n          const { email, firstName, lastName, medicalCondition } = doc.data();\n          return { id: doc.id, name: `${firstName} ${lastName}`, medicalCondition, email };\n        });\n\n        setPatientList(patientsData);\n\n        snapshot.forEach((doc) => {\n          const { firstName, lastName } = doc.data();\n          const name = `${firstName} ${lastName}`;\n          console.log(\"Name: \", name);\n        });\n      } catch (error) {\n        console.error(\"Error getting patient documents: \", error);\n      }\n    };\n\n    fetchPatients();\n  }, []);\n\n  const [search, setSearch] = useState(\"\");\n  // const [filteredUserList, setFilteredUserList] = useState(userList);\n  const [filteredUserList, setFilteredUserList] = useState(patientList);\n\n  useEffect(() => {\n    setFilteredUserList(patientList);\n  }, [patientList]);\n  \n\n  const navigateToUserProfile = (user) => {\n    navigation.navigate(\"ProfileScreen\", { user });\n  };\n\n  const searchFilterFunction = (text) => {\n    setSearch(text);\n    const newData = patientList.filter((item) => {\n      const itemEmail = item.email.toUpperCase();\n      const searchText = text.toUpperCase();\n      return itemEmail.includes(searchText);\n    });\n    setFilteredUserList(newData);\n  };\n\n  const openCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(true);\n  };\n\n  const closeCreateWorkoutModal = () => {\n    setCreateWorkoutModalVisible(false);\n  };\n\n  return (\n    <View style={styles.modalContainer}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.formContainer}>\n          <Text style={styles.headline}>Create Workout</Text>\n          <Input\n            name=\"workoutName\"\n            placeholder=\"Workout Name\"\n            onChangeText={(text) => setNewWorkout({ ...newWorkout, workoutName: text })}\n            value={newWorkout.workoutName}\n            style={{ marginBottom: 20 }}\n          />\n          <Input\n            placeholder=\"Date\"\n            onChangeText={(text) => setNewWorkout({ ...newWorkout, date: text })}\n            value={newWorkout.date}\n          />\n\n          {/* Use ModalSelector for patient selection */}\n          <ModalSelector\n            data={patientList.map(patient => ({\n              key: patient.id,\n              label: patient.email,\n            }))}\n            labelExtractor={item => item.label}\n            visible={selectedPatientId !== \"\"}\n            onChange={(option) => setSelectedPatientId(option.key)}\n          >\n            <Text>{selectedPatientId ? \"Patient Selected\" : \"Select Patient\"}</Text>\n          </ModalSelector>\n\n          {/* Exercise 1 */}\n          <View style={styles.exercisesContainer}>\n            <View style={styles.exerciseContainer}>\n              <Text style={styles.formSubtitle}>Exercise 1</Text>\n              <Input\n                name=\"exercise1\"\n                placeholder=\"Exercise Name\"\n                onChangeText={(text) =>\n                  setNewWorkout((prev) => {\n                    const updatedExercises = [...prev.exercises];\n                    updatedExercises[0].name = text;\n                    return { ...prev, exercises: updatedExercises };\n                  })\n                }\n                value={newWorkout.exercises[0].name}\n              />\n\n              <Text>Sets</Text>\n              <ModalSelector\n                data={Array.from({ length: 20 }, (_, i) => ({ key: i + 1, label: (i + 1).toString() }))}\n                labelExtractor={item => item.label}\n                onChange={(option) =>\n                  setNewWorkout((prevWorkout) => {\n                    const updatedExercises = [...prevWorkout.exercises];\n                    updatedExercises[0].sets = option.key;\n                    return { ...prevWorkout, exercises: updatedExercises };\n                  })\n                }\n              >\n                <Text>{newWorkout.exercises[0].sets ? newWorkout.exercises[0].sets.toString() : \"Select Sets\"}</Text>\n              </ModalSelector>\n\n              <Text>Reps</Text>\n              <ModalSelector\n                data={Array.from({ length: 20 }, (_, i) => ({ key: (i + 1).toString(), label: (i + 1).toString() }))}\n                labelExtractor={item => item.label}\n                onChange={(option) =>\n                  setNewWorkout((prevWorkout) => {\n                    const updatedExercises = [...prevWorkout.exercises];\n                    updatedExercises[0].reps = option.key;\n                    return { ...prevWorkout, exercises: updatedExercises };\n                  })\n                }\n              >\n                <Text>{newWorkout.exercises[0].reps ? newWorkout.exercises[0].reps.toString() : \"Select Reps\"}</Text>\n              </ModalSelector>\n            </View>\n          </View>\n\n          {/* Exercise 2 */}\n          <View style={styles.exercisesContainer}>\n            <View style={styles.exerciseContainer}>\n              <Text style={styles.formSubtitle}>Exercise 2</Text>\n              <Input\n                name=\"exercise2\"\n                placeholder=\"Exercise Name\"\n                onChangeText={(text) =>\n                  setNewWorkout((prev) => {\n                    const updatedExercises = [...prev.exercises];\n                    updatedExercises[1].name = text;\n                    return { ...prev, exercises: updatedExercises };\n                  })\n                }\n                value={newWorkout.exercises[1].name}\n              />\n\n              <Text>Sets</Text>\n              <ModalSelector\n                data={Array.from({ length: 20 }, (_, i) => ({ key: i + 1, label: (i + 1).toString() }))}\n                labelExtractor={item => item.label}\n                onChange={(option) =>\n                  setNewWorkout((prevWorkout) => {\n                    const updatedExercises = [...prevWorkout.exercises];\n                    updatedExercises[1].sets = option.key;\n                    return { ...prevWorkout, exercises: updatedExercises };\n                  })\n                }\n              >\n                <Text>{newWorkout.exercises[1].sets ? newWorkout.exercises[1].sets.toString() : \"Select Sets\"}</Text>\n              </ModalSelector>\n\n              <Text>Reps</Text>\n              <ModalSelector\n                data={Array.from({ length: 20 }, (_, i) => ({ key: (i + 1).toString(), label: (i + 1).toString() }))}\n                labelExtractor={item => item.label}\n                onChange={(option) =>\n                  setNewWorkout((prevWorkout) => {\n                    const updatedExercises = [...prevWorkout.exercises];\n                    updatedExercises[1].reps = option.key;\n                    return { ...prevWorkout, exercises: updatedExercises };\n                  })\n                }\n              >\n                <Text>{newWorkout.exercises[1].reps ? newWorkout.exercises[1].reps.toString() : \"Select Reps\"}</Text>\n              </ModalSelector>\n            </View>\n          </View>\n\n          {/* Additional exercises as needed */}\n\n          <Button\n            buttonStyle={[styles.submitWorkout, { width: 150 }]} \n            title=\"Submit Workout\"\n            onPress={createWorkout}\n          />\n          <Button\n            buttonStyle={[styles.cancelWorkout, { width: 150 }]} \n            title=\"Cancel\"\n            onPress={closeCreateWorkoutModal}\n          />\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20,\n  },\n  scrollContainer2: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#f0f0f0\",\n    paddingTop: 20,\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  avatarStyle: {\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#3498db\",\n  },\n  emailText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 10,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 20,\n    width: \"80%\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n  buttonTitle: {\n    fontSize: 16,\n  },\n  changePictureButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n  },\n  editProfileButton: {\n    backgroundColor: \"#27ae60\",\n    borderColor: \"#27ae60\",\n  },\n  logOutButton: {\n    backgroundColor: \"#e74c3c\",\n    borderColor: \"#e74c3c\",\n  },\n  searchContainer: {\n    width: \"80%\",\n    marginBottom: 10,\n  },\n  searchInputContainer: {\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 0,\n    borderTopWidth: 0,\n  },\n  tableContainer: {\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    padding: 10,\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    alignItems: \"center\",\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    fontSize: 14,\n  },\n  tableHeader: {\n    fontWeight: \"bold\",\n  },\n  addUserButton: {\n    backgroundColor: \"#ff7f50\",\n    borderColor: \"#ff7f50\",\n  },\n  formContainer: {\n    display: \"block\",\n    height: 700,\n    width: 700,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n    marginTop: 30,\n  },\n  formTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#3498db\",\n    marginLeft: 250,\n  },\n  createWorkoutButton: {\n    backgroundColor: \"#3498db\",\n    borderColor: \"#3498db\",\n  },\n  formSubtitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    color: \"#2ecc71\",\n  },\n  setRepContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 10,\n  },\n  setRepDropdown: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n    marginHorizontal: 5,\n    borderRadius: 8,\n    overflow: \"hidden\",\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n  },\n  exerciseContainer: {\n    width: '50%', // Two exercises side by side\n    paddingHorizontal: 10,\n  },\n  exercisesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  patientDropdown: {\n    height: 50,\n    width: \"80%\",\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10,\n  },\n  submitWorkout: {\n    marginTop: 20,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cancelWorkout: {\n    marginTop: 10,\n    marginLeft: 250,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headline: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginTop:100,\n    marginLeft: 250,\n    color: \"#3498db\",\n  },\n \n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}