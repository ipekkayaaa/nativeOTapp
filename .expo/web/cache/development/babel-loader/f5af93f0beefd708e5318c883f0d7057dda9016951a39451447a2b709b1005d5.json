{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from \"react-native-elements\";\nimport { createUserWithEmailAndPassword, getAuth } from \"firebase/auth\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { auth, firestore } from \"../../firebase\";\nimport PatientFormScreen from \"./PatientFormScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"doctor\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userType = _useState6[0],\n    setUserType = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        alert(\"Please enter both email and password.\");\n        return;\n      }\n      try {\n        var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n        var user = userCredential.user;\n        var colRefPatients = collection(firestore, 'signUp');\n        yield addDoc(colRefPatients, {\n          userId: user.uid,\n          email: email,\n          userType: userType === \"doctor\" ? false : true\n        });\n        if (userType === \"patient\") {\n          setTimeout(function () {\n            setIsLoading(false);\n            navigation.navigate(\"PatientFormScreen\", {\n              userId: user.uid\n            });\n          }, 2000);\n        } else {\n          setIsLoading(false);\n          navigateLogin();\n        }\n      } catch (error) {\n        setIsLoading(false);\n        alert(error.message);\n      }\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var navigateLogin = function navigateLogin() {\n    navigation.navigate(\"LoginScreen\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.greeting,\n        children: \"Register your account!\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.radioContainer,\n      children: [_jsx(Text, {\n        style: styles.radioLabel,\n        children: \"Select User Type:\"\n      }), _jsx(TouchableOpacity, {\n        style: userType === \"doctor\" ? styles.radioButtonSelected : styles.radioButton,\n        onPress: function onPress() {\n          return setUserType(\"doctor\");\n        },\n        children: _jsx(Text, {\n          style: styles.radioText,\n          children: \"Doctor\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: userType === \"patient\" ? styles.radioButtonSelected : styles.radioButton,\n        onPress: function onPress() {\n          return setUserType(\"patient\");\n        },\n        children: _jsx(Text, {\n          style: styles.radioText,\n          children: \"Patient\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        containerStyle: styles.button,\n        buttonStyle: [styles.button, styles.buttonOutline],\n        onPress: handleSignUp,\n        title: \"Register\",\n        titleStyle: styles.buttonOutlineText\n      }), _jsxs(View, {\n        style: styles.textContainer,\n        children: [_jsx(Text, {\n          children: \"Already have an account?\"\n        }), _jsx(Button, {\n          type: \"clear\",\n          title: \"Log In\",\n          titleStyle: styles.text,\n          onPress: navigateLogin\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\"\n  },\n  inputContainer: {\n    width: \"50%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  text: {\n    fontSize: 15\n  },\n  radioContainer: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  radioLabel: {\n    fontSize: 16,\n    marginRight: 10\n  },\n  radioButton: {\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10\n  },\n  radioButtonSelected: {\n    borderWidth: 1,\n    borderColor: \"#0782F9\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10\n  },\n  radioText: {\n    fontSize: 16\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","Button","createUserWithEmailAndPassword","getAuth","collection","addDoc","auth","firestore","PatientFormScreen","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","userType","setUserType","_useState7","_useState8","isLoading","setIsLoading","handleSignUp","_ref2","_asyncToGenerator","alert","userCredential","user","colRefPatients","userId","uid","setTimeout","navigate","navigateLogin","error","message","apply","arguments","style","styles","container","children","greeting","inputContainer","placeholder","input","value","onChangeText","text","secureTextEntry","radioContainer","radioLabel","radioButtonSelected","radioButton","onPress","radioText","buttonContainer","containerStyle","button","buttonStyle","buttonOutline","title","titleStyle","buttonOutlineText","textContainer","type","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","width","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","color","flexDirection","marginVertical","marginRight","padding"],"sources":["/Users/ipekkaya/Documents/Github/nativeOTapp/components/screens/SignUpScreen.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import {\n//   StyleSheet,\n//   Text,\n//   View,\n//   TextInput,\n//   TouchableOpacity,\n// } from \"react-native\";\n// import { Button } from \"react-native-elements\";\n// import { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\n// import app from \"../../firebase\";\n\n// const auth = getAuth(app); // Initialize Firebase Authentication\n\n// const SignUpScreen = ({ navigation }) => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [userType, setUserType] = useState(\"doctor\"); // Default to \"doctor\"\n\n//   const handleSignUp = async () => {\n//     if (!email || !password) {\n//       alert(\"Please enter both email and password.\");\n//       return;\n//     }\n\n//     try {\n//       const userCredential = await createUserWithEmailAndPassword(\n//         auth,\n//         email,\n//         password\n//       );\n//       const user = userCredential.user;\n//       console.log(\"Registered new user:\", user.email);\n//       navigateLogin();\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   const navigateLogin = () => {\n//     navigation.navigate(\"InformationForm\");\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <View>\n//         <Text style={styles.greeting}>Register your account!</Text>\n//       </View>\n//       <View style={styles.inputContainer}>\n//         <TextInput\n//           placeholder=\"Email\"\n//           style={styles.input}\n//           value={email}\n//           onChangeText={(text) => setEmail(text)}\n//         />\n//         <TextInput\n//           placeholder=\"Password\"\n//           style={styles.input}\n//           secureTextEntry\n//           value={password}\n//           onChangeText={(text) => setPassword(text)}\n//         />\n//       </View>\n\n//       <View style={styles.radioContainer}>\n//         <Text style={styles.radioLabel}>Select User Type:</Text>\n//         <TouchableOpacity\n//           style={\n//             userType === \"doctor\"\n//               ? styles.radioButtonSelected\n//               : styles.radioButton\n//           }\n//           onPress={() => setUserType(\"doctor\")}\n//         >\n//           <Text style={styles.radioText}>Doctor</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity\n//           style={\n//             userType === \"patient\"\n//               ? styles.radioButtonSelected\n//               : styles.radioButton\n//           }\n//           onPress={() => setUserType(\"patient\")}\n//         >\n//           <Text style={styles.radioText}>Patient</Text>\n//         </TouchableOpacity>\n//       </View>\n\n//       <View style={styles.buttonContainer}>\n//         <Button\n//           containerStyle={styles.button}\n//           buttonStyle={[styles.button, styles.buttonOutline]}\n//           onPress={handleSignUp}\n//           title=\"Register\"\n//           titleStyle={styles.buttonOutlineText}\n//         />\n//         <View style={styles.textContainer}>\n//           <Text>Already have an account?</Text>\n//           <Button\n//             type=\"clear\"\n//             title=\"Log In\"\n//             titleStyle={styles.text}\n//             onPress={navigateLogin}\n//           />\n//         </View>\n//       </View>\n//     </View>\n//   );\n// };\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"white\",\n//   },\n//   greeting: {\n//     fontSize: 28,\n//     fontWeight: \"bold\",\n//   },\n//   inputContainer: {\n//     width: \"50%\",\n//   },\n//   input: {\n//     backgroundColor: \"white\",\n//     paddingHorizontal: 15,\n//     paddingVertical: 10,\n//     borderRadius: 10,\n//     marginTop: 10,\n//     borderColor: \"green\",\n//     borderWidth: 1,\n//   },\n//   buttonContainer: {\n//     width: \"60%\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     marginTop: 40,\n//   },\n//   button: {\n//     width: \"100%\",\n//     borderRadius: 10,\n//     alignItems: \"center\",\n//   },\n//   buttonOutline: {\n//     backgroundColor: \"white\",\n//     marginTop: 5,\n//     borderColor: \"#0782F9\",\n//     borderWidth: 2,\n//   },\n//   buttonOutlineText: {\n//     color: \"#0782F9\",\n//     fontSize: 16,\n//     fontWeight: \"700\",\n//   },\n//   textContainer: {\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     marginTop: 10,\n//   },\n//   text: {\n//     fontSize: 15,\n//   },\n//   radioContainer: {\n//     marginVertical: 10,\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n//   radioLabel: {\n//     fontSize: 16,\n//     marginRight: 10,\n//   },\n//   radioButton: {\n//     borderWidth: 1,\n//     borderColor: \"gray\",\n//     borderRadius: 5,\n//     padding: 10,\n//     marginRight: 10,\n//   },\n//   radioButtonSelected: {\n//     borderWidth: 1,\n//     borderColor: \"#0782F9\",\n//     borderRadius: 5,\n//     padding: 10,\n//     marginRight: 10,\n//   },\n//   radioText: {\n//     fontSize: 16,\n//   },\n// });\n\n// export default SignUpScreen;\n\n\n// import React, { useState } from \"react\";\n// import { StyleSheet, Text, View, TextInput, TouchableOpacity } from \"react-native\";\n// import { Button } from \"react-native-elements\";\n// import { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\n// import app from \"../../firebase\";\n\n// const auth = getAuth(app); // Initialize Firebase Authentication\n\n// const SignUpScreen = ({ navigation }) => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [userType, setUserType] = useState(\"doctor\"); // Default to \"doctor\"\n\n//   const handleSignUp = async () => {\n//     if (!email || !password) {\n//       alert(\"Please enter both email and password.\");\n//       return;\n//     }\n\n//     try {\n//       const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n//       const user = userCredential.user;\n//       console.log(\"Registered new user:\", user.email);\n//       navigateLogin();\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   const navigateLogin = () => {\n//     navigation.navigate(\"LoginScreen\");\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <View>\n//         <Text style={styles.greeting}>Register your account!</Text>\n//       </View>\n//       <View style={styles.inputContainer}>\n//         <TextInput\n//           placeholder=\"Email\"\n//           style={styles.input}\n//           value={email}\n//           onChangeText={(text) => setEmail(text)}\n//         />\n//         <TextInput\n//           placeholder=\"Password\"\n//           style={styles.input}\n//           secureTextEntry\n//           value={password}\n//           onChangeText={(text) => setPassword(text)}\n//         />\n//       </View>\n\n//       <View style={styles.radioContainer}>\n//         <Text style={styles.radioLabel}>Select User Type:</Text>\n//         <TouchableOpacity\n//           style={userType === \"doctor\" ? styles.radioButtonSelected : styles.radioButton}\n//           onPress={() => setUserType(\"doctor\")}\n//         >\n//           <Text style={styles.radioText}>Doctor</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity\n//           style={userType === \"patient\" ? styles.radioButtonSelected : styles.radioButton}\n//           onPress={() => setUserType(\"patient\")}\n//         >\n//           <Text style={styles.radioText}>Patient</Text>\n//         </TouchableOpacity>\n//       </View>\n\n//       <View style={styles.buttonContainer}>\n//         <Button\n//           containerStyle={styles.button}\n//           buttonStyle={[styles.button, styles.buttonOutline]}\n//           onPress={handleSignUp}\n//           title=\"Register\"\n//           titleStyle={styles.buttonOutlineText}\n//         />\n//         <View style={styles.textContainer}>\n//           <Text>Already have an account?</Text>\n//           <Button\n//             type=\"clear\"\n//             title=\"Log In\"\n//             titleStyle={styles.text}\n//             onPress={navigateLogin}\n//           />\n//         </View>\n//       </View>\n//     </View>\n//   );\n// };\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"white\",\n//   },\n//   greeting: {\n//     fontSize: 28,\n//     fontWeight: \"bold\",\n//   },\n//   inputContainer: {\n//     width: \"50%\",\n//   },\n//   input: {\n//     backgroundColor: \"white\",\n//     paddingHorizontal: 15,\n//     paddingVertical: 10,\n//     borderRadius: 10,\n//     marginTop: 10,\n//     borderColor: \"green\",\n//     borderWidth: 1,\n//   },\n//   buttonContainer: {\n//     width: \"60%\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     marginTop: 40,\n//   },\n//   button: {\n//     width: \"100%\",\n//     borderRadius: 10,\n//     alignItems: \"center\",\n//   },\n//   buttonOutline: {\n//     backgroundColor: \"white\",\n//     marginTop: 5,\n//     borderColor: \"#0782F9\",\n//     borderWidth: 2,\n//   },\n//   buttonOutlineText: {\n//     color: \"#0782F9\",\n//     fontSize: 16,\n//     fontWeight: \"700\",\n//   },\n//   textContainer: {\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     marginTop: 10,\n//   },\n//   text: {\n//     fontSize: 15,\n//   },\n//   radioContainer: {\n//     marginVertical: 10,\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n//   radioLabel: {\n//     fontSize: 16,\n//     marginRight: 10,\n//   },\n//   radioButton: {\n//     borderWidth: 1,\n//     borderColor: \"gray\",\n//     borderRadius: 5,\n//     padding: 10,\n//     marginRight: 10,\n//   },\n//   radioButtonSelected: {\n//     borderWidth: 1,\n//     borderColor: \"#0782F9\",\n//     borderRadius: 5,\n//     padding: 10,\n//     marginRight: 10,\n//   },\n//   radioText: {\n//     fontSize: 16,\n//   },\n// });\n\n// export default SignUpScreen;\n\n\n// SignUpScreen.js\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport { createUserWithEmailAndPassword, getAuth } from \"firebase/auth\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { auth, firestore } from \"../../firebase\";\nimport PatientFormScreen from \"./PatientFormScreen\";\n\n\nconst SignUpScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userType, setUserType] = useState(\"doctor\");\n  const [isLoading, setIsLoading] = useState(false); \n\n  const handleSignUp = async () => {\n    if (!email || !password) {\n      alert(\"Please enter both email and password.\");\n      return;\n    }\n\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      const colRefPatients = collection(firestore, 'signUp');\n\n      // Add user data to patients collection\n      await addDoc(colRefPatients, {\n        userId: user.uid,\n        email: email,\n        userType: userType === \"doctor\" ? false : true,\n      });\n      if (userType === \"patient\") {\n        // Delay the navigation for 2 seconds\n        setTimeout(() => {\n          setIsLoading(false); // Set loading to false\n          navigation.navigate(\"PatientFormScreen\", { userId: user.uid });\n        }, 2000);\n      } else {\n        setIsLoading(false); // Set loading to false\n        // If userType is doctor, navigate to login directly\n        navigateLogin();\n      }\n    } catch (error) {\n      setIsLoading(false); // Set loading to false in case of an error\n      alert(error.message);\n    }\n  };\n  //     if (userType === \"patient\") {\n  //       // If userType is patient, navigate to PatientFormScreen\n  //       navigation.navigate(\"PatientFormScreen\", { userId: user.uid });\n  //     } else {\n  //       // If userType is doctor, navigate to login directly\n  //       navigateLogin();\n  //     }\n  //   } catch (error) {\n  //     alert(error.message);\n  //   }\n  // };\n\n  const navigateLogin = () => {\n    navigation.navigate(\"LoginScreen\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.greeting}>Register your account!</Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          style={styles.input}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          style={styles.input}\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n      </View>\n\n      <View style={styles.radioContainer}>\n        <Text style={styles.radioLabel}>Select User Type:</Text>\n        <TouchableOpacity\n          style={userType === \"doctor\" ? styles.radioButtonSelected : styles.radioButton}\n          onPress={() => setUserType(\"doctor\")}\n        >\n          <Text style={styles.radioText}>Doctor</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={userType === \"patient\" ? styles.radioButtonSelected : styles.radioButton}\n          onPress={() => setUserType(\"patient\")}\n        >\n          <Text style={styles.radioText}>Patient</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <Button\n          containerStyle={styles.button}\n          buttonStyle={[styles.button, styles.buttonOutline]}\n          onPress={handleSignUp}\n          title=\"Register\"\n          titleStyle={styles.buttonOutlineText}\n        />\n        <View style={styles.textContainer}>\n          <Text>Already have an account?</Text>\n          <Button\n            type=\"clear\"\n            title=\"Log In\"\n            titleStyle={styles.text}\n            onPress={navigateLogin}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  greeting: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n  },\n  inputContainer: {\n    width: \"50%\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  text: {\n    fontSize: 15,\n  },\n  radioContainer: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  radioLabel: {\n    fontSize: 16,\n    marginRight: 10,\n  },\n  radioButton: {\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n  },\n  radioButtonSelected: {\n    borderWidth: 1,\n    borderColor: \"#0782F9\",\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n  },\n  radioText: {\n    fontSize: 16,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}